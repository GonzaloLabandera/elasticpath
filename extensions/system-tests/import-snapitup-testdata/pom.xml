<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.elasticpath.extensions</groupId>
		<artifactId>commerce-system-tests</artifactId>
		<version>0.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>import-snapitup-testdata</artifactId>
	<name>Import SNAPITUP Data Test</name>
	<description>The test imports SNAPITUP data and ensures that all test data sets are sync</description>
	<packaging>jar</packaging>

	<properties>
		<data.population.cli.directory>${project.build.directory}/cli</data.population.cli.directory>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
		</dependency>
		<dependency>
			<groupId>com.elasticpath</groupId>
			<artifactId>ep-data-population-cli-tool-assembly</artifactId>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>com.elasticpath</groupId>
			<artifactId>ep-data-population-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.elasticpath.db</groupId>
			<artifactId>core-schema</artifactId>
		</dependency>
		<dependency>
			<groupId>com.elasticpath</groupId>
			<artifactId>ep-importexport</artifactId>
		</dependency>
		<dependency>
			<groupId>com.elasticpath</groupId>
			<artifactId>ep-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>create-db-and-import-snapitup-data</id>
			<activation>
				<property>
					<name>!skipAllTests</name>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/filtered-resources</directory>
						<targetPath>${project.build.outputDirectory}</targetPath>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-data-population-cli</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.elasticpath</groupId>
											<artifactId>ep-data-population-cli-tool-assembly</artifactId>
											<version>${ep.data.population.version}</version>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}/cli</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>com.elasticpath.data</groupId>
											<artifactId>ep-shared-demo-data</artifactId>
											<type>zip</type>
											<version>${ep.commerce.data.version}</version>
											<outputDirectory>${project.build.directory}/classes/data</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>com.elasticpath.data</groupId>
											<artifactId>ep-snapitup-demo-data</artifactId>
											<type>zip</type>
											<version>${ep.commerce.data.version}</version>
											<outputDirectory>${project.build.directory}/classes/data</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>copy-dependencies</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${data.population.cli.directory}/lib</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>${maven-resources-plugin.version}</version>
						<executions>
							<execution>
								<id>filter</id>
								<phase>process-resources</phase>
								<goals>
									<goal>resources</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<escapeWindowsPaths>false</escapeWindowsPaths>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>maven-replacer-plugin</artifactId>
						<executions>
							<execution>
								<id>replace-slashes-in-db-url-for-windows</id>
								<phase>compile</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<file>target/classes/database.properties</file>
							<token>\\</token>
							<value>/</value>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>make-import-snapitup-jar</id>
								<phase>compile</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<outputDirectory>${data.population.cli.directory}/lib</outputDirectory>
							<descriptors>
								<descriptor>src/main/assembly/jar-assembly.xml
								</descriptor>
							</descriptors>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>data-population</id>
								<phase>process-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<condition property="shell.executable" value="cmd" else="/bin/bash">
											<os family="windows" />
										</condition>
										<condition property="shell.argument" value="/c" else="-v">
											<os family="windows" />
										</condition>
										<condition property="shell.script"
												   value="${data.population.cli.directory}/data-population.bat"
												   else="${data.population.cli.directory}/data-population.sh">
											<os family="windows" />
										</condition>
										<exec executable="${shell.executable}" dir="${data.population.cli.directory}" failonerror="true">
											<env key="PROFILE" value="disable-domain-events"/>
											<arg value="${shell.argument}" />
											<arg value="${shell.script}" />
											<arg value="--dataDirectory" />
											<arg value="${project.build.outputDirectory}" />
											<arg value="--configDirectory" />
											<arg value="${project.build.outputDirectory}" />
											<arg value="reset-db" />
										</exec>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
