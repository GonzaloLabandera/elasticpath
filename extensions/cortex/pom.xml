<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) Elastic Path Software Inc., 2019
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.elasticpath.extensions</groupId>
		<artifactId>ext-commerce-engine-parent</artifactId>
		<version>0.0.0-SNAPSHOT</version>
	</parent>

	<groupId>com.elasticpath.extensions</groupId>
	<artifactId>ext-cortex-ce-parent</artifactId>
	<version>0.0.0-SNAPSHOT</version>
	<name>Extension Cortex CE Parent</name>
	<packaging>pom</packaging>

	<issueManagement>
		<system>JIRA</system>
		<url>http://jira.elasticpath.com</url>
	</issueManagement>

	<modules>
		<module>resources-api</module>
		<module>resources</module>
		<module>helix-resources</module>
		<module>repositories</module>
		<module>ext-commerce-engine-wrapper</module>
		<module>ext-cortex-webapp</module>
		<module>system-tests</module>
		<module>ext-system-tests</module>
		<module>ext-health-monitor</module>
	</modules>

	<properties>
		<bundle.environment>prod-bundles</bundle.environment>
		<!--In production environments bundle.location can be set via the modules.properties mechanism or by passing a system property to the app server. -->
		<bundle.location/>
		<!-- These archetype properties have to be outside the with-archetypes profile to be overridden by the build-server profile. -->
		<archetype-goal>install</archetype-goal>
		<archetype-invoker-build-server-profile-1/>
		<archetype-invoker-build-server-profile-2/>
		<archetype-invoker-snapshot-repository-id>cannot be blank</archetype-invoker-snapshot-repository-id>
		<!-- See http://jira.codehaus.org/browse/MINVOKER-118 -->
		<archetype-invoker-release-repository-id>cannot be blank</archetype-invoker-release-repository-id>
		<!-- See http://jira.codehaus.org/browse/MINVOKER-118 -->

		<war-plugin-directory>${project.build.directory}/${project.artifactId}-${project.version}/WEB-INF/plugins</war-plugin-directory>
		<war-bundle-directory>${project.build.directory}/${project.artifactId}-${project.version}/WEB-INF/bundles</war-bundle-directory>
		<war-bundle-directory-level-1>${war-bundle-directory}-level1</war-bundle-directory-level-1>
		<war-bundle-directory-level-2>${war-bundle-directory}-level2</war-bundle-directory-level-2>
		<war-bundle-directory-level-3>${war-bundle-directory}-level3</war-bundle-directory-level-3>
		<war-bundle-directory-level-4>${war-bundle-directory}-level4</war-bundle-directory-level-4>

		<!--Cortex settings -->
		<ep.cortex.host>localhost</ep.cortex.host>
		<ep.cortex.contextUrl>/cortex</ep.cortex.contextUrl>
		<ep.studio.contextUrl>/studio</ep.studio.contextUrl>
		<ep.cortex.uri.prefix/><!-- empty by default -->
		<ep.cortex.url>http://${ep.cortex.host}:${ep.cortex.port.http}${ep.cortex.contextUrl}</ep.cortex.url>

		<!-- Cortex Felix Settings-->
		<ep.cortex.felix.url>http://${ep.cortex.host}:${ep.cortex.port.http}${ep.cortex.contextUrl}/system/console/bundles/</ep.cortex.felix.url>

		<!-- Search Server Settings -->
		<ep.search.host>localhost</ep.search.host>
		<ep.search.contextUrl>/searchserver</ep.search.contextUrl>
		<ep.search.url>http://${ep.search.host}:${ep.search.port.http}${ep.search.contextUrl}</ep.search.url>

		<ep.jms.host>localhost</ep.jms.host>
		<ep.jms.port.tcp>61616</ep.jms.port.tcp>
		<ep.jms.type>org.apache.activemq.pool.PooledConnectionFactory</ep.jms.type>
		<ep.jms.factory>org.apache.activemq.jndi.JNDIReferenceFactory</ep.jms.factory>
		<ep.jndi.factory>org.apache.tomcat.jdbc.pool.DataSourceFactory</ep.jndi.factory>

		<ep.jms.url>tcp://${ep.jms.host}:${ep.jms.port.tcp}</ep.jms.url>

		<!-- Where your assets are located on your machine during development. -->
		<!-- This setting it put into your configured database by the snapitup-data artifact. -->
		<ep.local.asset.path>${user.home}/ep-assets</ep.local.asset.path>

		<ep.velocity.cache.seconds>-1</ep.velocity.cache.seconds>
		<ep.velocity.library.autoreload>false</ep.velocity.library.autoreload>
		<ep.product.attribute.filter.enable>true</ep.product.attribute.filter.enable>
		<ep.localeUrlTool.localeControllerUrl>locale.ep</ep.localeUrlTool.localeControllerUrl>

		<!-- Default webapp ports for deploying in a single Tomcat container -->
		<ep.search.tomcat.port.http>8080</ep.search.tomcat.port.http>
		<ep.cortex.tomcat.port.http>8080</ep.cortex.tomcat.port.http>
	</properties>

	<profiles>
		<profile>
			<id>ep-developer</id>
			<properties>
				<!-- The default developer configuration is to run tomcat on different ports for each webapp, and no https except for storefront (so no change of port needed) -->
				<ep.search.tomcat.port.http>8082</ep.search.tomcat.port.http>
				<ep.cortex.tomcat.port.http>9080</ep.cortex.tomcat.port.http>
			</properties>
		</profile>

		<profile>
			<id>tomcat-developer</id>
			<properties>
				<ep.search.port.http>${ep.search.tomcat.port.http}</ep.search.port.http>
				<ep.cortex.port.http>${ep.cortex.tomcat.port.http}</ep.cortex.port.http>
			</properties>
		</profile>

		<profile>
			<id>activemq-dev-jms</id>
			<properties>
				<env>default</env>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<!-- webapp -->
		<dependencies>
			<!-- We need this dependency here.-->
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jms_1.1_spec</artifactId>
				<version>${org.apache.geronimo.specs.version}</version>
			</dependency>
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-java</artifactId>
				<version>${io.cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-groovy</artifactId>
				<version>${cucumber-groovy.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-junit</artifactId>
				<version>${io.cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-core</artifactId>
				<version>${io.cucumber.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
					<configuration>
						<deployAtEnd>true</deployAtEnd>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<compilerArgs combine.self="override">
							<arg>-proc:none</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.elasticpath.tools</groupId>
					<artifactId>ep-core-tool</artifactId>
					<version>${dce.version}</version>
					<dependencies>
						<dependency>
							<groupId>${epdb.maven.groupId}</groupId>
							<artifactId>${epdb.maven.artifactId}</artifactId>
							<version>${epdb.maven.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.gmaven</groupId>
					<artifactId>gmaven-plugin</artifactId>
					<version>${gmaven.plugin.version}</version>
					<configuration>
						<providerSelection>1.8</providerSelection>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>${properties.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>maven-sling-plugin</artifactId>
					<version>${maven-sling-plugin.version}</version>
					<executions>
						<execution>
							<id>install-bundle</id>
							<goals>
								<goal>install</goal>
							</goals>
							<configuration>
								<slingUrl>${ep.cortex.felix.url}</slingUrl>
								<bundleStartLevel>5</bundleStartLevel>
								<refreshPackages>false</refreshPackages>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<repository>
			<id>ep-releases</id>
			<url>${ep.releases.repository.url}</url>
		</repository>
		<snapshotRepository>
			<id>ep-snapshots</id>
			<url>${ep.snapshots.repository.url}</url>
		</snapshotRepository>
	</distributionManagement>
</project>
