<?xml version="1.0" encoding="UTF-8"?>
<!--Copyright Â© 2013 Elastic Path Software Inc. All rights reserved.-->

<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_4.0.xsd">
	<display-name>Elastic Path Digital Commerce API REST Services</display-name>

	<!-- spring framework context configuration -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>WEB-INF/applicationContext-webapp.xml, classpath:spring/applicationContext.xml</param-value>
	</context-param>

	<!-- Spring listener has to be first -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>com.elasticpath.rest.relos.webapp.listener.SLF4JBridgeListener</listener-class>
	</listener>

	<listener>
		<!-- Start the embedded OSGI Framework. -->
		<listener-class>com.elasticpath.rest.relos.webapp.listener.KernelServletContextListener</listener-class>
	</listener>

	<listener>
		<!--
			Register the OSGI Framework with the HTTP servlet
			world so that the Felix ProxyServlet (below) can function.
		-->
		<listener-class>com.elasticpath.rest.relos.webapp.listener.BundleContextRegisteringServletListener</listener-class>
	</listener>

 	<servlet>
		<servlet-name>proxy</servlet-name>
		<servlet-class>org.apache.felix.http.proxy.ProxyServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>proxy</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>

	<!-- Health Monitoring servlet -->
	<servlet>
		<servlet-name>Status servlet</servlet-name>
		<servlet-class>com.elasticpath.repo.ext.health.monitor.ExtStatusCheckerServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>Status servlet</servlet-name>
		<url-pattern>/status/*</url-pattern>
	</servlet-mapping>

	<resource-ref>
		<description>DB Connection</description>
		<res-ref-name>jdbc/epjndi</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

	<resource-ref>
		<description>JMS Connection Factory</description>
		<res-ref-name>jms/JMSConnectionFactory</res-ref-name>
		<res-type>javax.jms.ConnectionFactory</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
</web-app>
