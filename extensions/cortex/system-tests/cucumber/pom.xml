<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.elasticpath.extensions</groupId>
		<artifactId>cortex-system-tests</artifactId>
		<version>0.0.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>cortex-cucumber-tests</artifactId>
	<version>0.0.0-SNAPSHOT</version>
	<name>EP âˆ· Cortex DCE Cucumber Integration Tests</name>

	<description>
		Elastic Path REST - Cortex DCE Cucumber Integration Tests.
	</description>

	<properties>
		<groovy.http-builder>0.7.1</groovy.http-builder>
		<fluent.relos.client.version>1.10.44</fluent.relos.client.version>

		<!--<h2database.version>1.3.175</h2database.version>-->
		<!--<cargo.plugin.version>1.2.4</cargo.plugin.version>-->

		<cargo.jvmargs.search>-ea</cargo.jvmargs.search>
		<cargo.jvmargs.cortex>-ea -XX:+HeapDumpOnOutOfMemoryError -Dfelix.fileinstall.dir=${project.build.testOutputDirectory}/cortex/system/config</cargo.jvmargs.cortex>
		<cargo.jvmargs.cortex.jmx>-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=6969 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false</cargo.jvmargs.cortex.jmx>
		<cargo.jvmargs.cortex.logback.threshold>-Dep.logback.console.threshold</cargo.jvmargs.cortex.logback.threshold>
		<cargo.jvmargs.ep.external.ehcache.xml.path>-Dep.external.ehcache.xml.path=${project.build.testOutputDirectory}/ehcache-cucumber.xml</cargo.jvmargs.ep.external.ehcache.xml.path>
		<!--<cargo.jvmargs.cortex.cache>-Dep.local.cache.timeout=60</cargo.jvmargs.cortex.cache>-->
		<!-- for debugging cortex itests-->
		<!--<cargo.jvmargs.cortex>-ea -XX:+HeapDumpOnOutOfMemoryError
			-Dfelix.fileinstall.dir=${project.build.testOutputDirectory}/cortex/system/config -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000</cargo.jvmargs.cortex>-->
		<ep.cortex.fixture.logger>INFO</ep.cortex.fixture.logger>

		<ep.rest.authtype>OAuth2</ep.rest.authtype>
		<ep.rest.baseurl>${ep.cortex.url}</ep.rest.baseurl>
		<ep.search.server.url>${ep.search.url}</ep.search.server.url>
		<ep.activemq.url>${ep.jms.url}</ep.activemq.url>

		<charset.encoding>UTF-8</charset.encoding>

	</properties>

	<profiles>
		<profile>
			<id>setup-local-integration-test</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<ep.cortex.port.http>${ep.cortex.itest.port.http}</ep.cortex.port.http>
				<ep.search.port.http>${ep.search.itest.port.http}</ep.search.port.http>
				<ep.jms.port.tcp>${ep.activemq.dynamic.itests.port}</ep.jms.port.tcp>
				<ep.activemq.configUri>broker:(${ep.activemq.url})?useJmx=false&amp;persistent=false&amp;useShutdownHook=false&amp;brokerName=${ep.jms.host}${ep.jms.port.tcp}</ep.activemq.configUri>
				<epdb.maven.groupId>com.h2database</epdb.maven.groupId>
				<epdb.maven.artifactId>h2</epdb.maven.artifactId>
				<epdb.maven.version>${h2database.version}</epdb.maven.version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2database.version}</version>
				</dependency>
				<dependency>
					<groupId>com.elasticpath.extensions</groupId>
					<artifactId>ext-search-webapp</artifactId>
					<version>${project.version}</version>
					<type>war</type>
				</dependency>
				<dependency>
					<groupId>com.elasticpath.extensions</groupId>
					<artifactId>ext-cortex-webapp</artifactId>
					<version>${project.version}</version>
					<type>war</type>
				</dependency>
				<dependency>
					<groupId>org.apache.activemq</groupId>
					<artifactId>activemq-pool</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.activemq</groupId>
					<artifactId>activemq-jms-pool</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.activemq</groupId>
					<artifactId>activemq-client</artifactId>
				</dependency>
				<dependency>
					<groupId>org.fusesource.hawtbuf</groupId>
					<artifactId>hawtbuf</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.camel</groupId>
					<artifactId>camel-jms</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.camel</groupId>
					<artifactId>camel-core</artifactId>
				</dependency>
				<dependency>
					<groupId>commons-pool</groupId>
					<artifactId>commons-pool</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-pool2</artifactId>
					<version>${org.apache.commons.pool2.version}</version>
				</dependency>
				<dependency>
					<groupId>org.apache.geronimo.specs</groupId>
					<artifactId>geronimo-jms_1.1_spec</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.geronimo.specs</groupId>
					<artifactId>geronimo-j2ee-management_1.1_spec</artifactId>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>jcl-over-slf4j</artifactId>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</dependency>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</dependency>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<!-- Randomly allocates an available port to each of the listed properties -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<portNames>
										<portName>ep.cortex.itest.port.http</portName>
										<portName>cargo.tomcat.ajp.port</portName>
										<portName>cargo.rmi.port</portName>
										<portName>cargo.tomcat.shutdown.port</portName>
										<portName>ep.activemq.dynamic.itests.port</portName>
										<portName>ep.search.itest.port.http</portName>
										<portName>search.cargo.tomcat.ajp.port</portName>
										<portName>search.cargo.rmi.port</portName>
										<portName>search.cargo.tomcat.shutdown.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Adds dependencies to bring in the In-Memory H2 database -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-database</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<skip>${skipAllTests}</skip>
									<artifactItems>
										<artifactItem>
											<groupId>com.elasticpath.extensions</groupId>
											<artifactId>cortex-test-h2-database</artifactId>
											<overWrite>true</overWrite>
											<type>zip</type>
											<outputDirectory>${project.build.directory}/database</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Sets up the In-Memory H2 database -->
					<plugin>
						<groupId>com.elasticpath.tools</groupId>
						<artifactId>ep-core-tool</artifactId>
						<configuration>
							<jdbcUrl>jdbc:h2:${project.build.directory}/database/CORTEXDB;AUTO_SERVER=TRUE;MVCC=TRUE</jdbcUrl>
							<jdbcDriverClass>org.h2.Driver</jdbcDriverClass>
							<jdbcPassword>sa</jdbcPassword>
							<jdbcUsername>sa</jdbcUsername>
							<jdbcConnectionPoolMinIdle>0</jdbcConnectionPoolMinIdle>
							<jdbcConnectionPoolMaxIdle>0</jdbcConnectionPoolMaxIdle>
							<skip>${skipAllTests}</skip>
						</configuration>
						<executions>
							<execution>
								<id>override-settings</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>bulk-set-settings</goal>
								</goals>
								<configuration>
									<settings>
										<setting>COMMERCE/SYSTEM/SEARCH/searchHost@default=${ep.search.server.url}</setting>
									</settings>
								</configuration>
							</execution>
							<execution>
								<id>build-indexes</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>request-reindex</goal>
								</goals>
								<configuration>
									<wait>true</wait>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Run a JMS broker locally -->
					<plugin>
						<groupId>org.apache.activemq.tooling</groupId>
						<artifactId>activemq-maven-plugin</artifactId>
						<version>${org.apache.activemq.tooling.version}</version>
						<executions>
							<execution>
								<id>activemq-embedded-tcp</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<skip>${skipAllTests}</skip>
									<fork>true</fork>
									<configUri>${ep.activemq.configUri}</configUri>
								</configuration>
							</execution>
							<execution>
								<id>stop-embedded-tcp</id>
								<goals>
									<goal>stop</goal>
								</goals>
								<phase>post-integration-test</phase>
								<configuration>
									<skip>${skipAllTests}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Spin up a Webapp Container housing Cortex using Cargo  -->
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>${cargo.plugin.version}</version>
						<executions>
							<execution>
								<id>start-dce-container</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<configuration>
										<home>${project.build.directory}/tomcat7x/container</home>
										<properties>
											<cargo.jvmargs>${cargo.jvmargs.cortex} ${cargo.jvmargs.cortex.jmx} ${cargo.jvmargs.cortex.logback.threshold} ${cargo.jvmargs.ep.external.ehcache.xml.path}</cargo.jvmargs>
											<cargo.servlet.port>${ep.cortex.itest.port.http}</cargo.servlet.port>
											<cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
											<cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>
											<cargo.tomcat.shutdown.port>${cargo.tomcat.shutdown.port}</cargo.tomcat.shutdown.port>
										</properties>
									</configuration>
									<deployables>
										<deployable>
											<groupId>com.elasticpath.extensions</groupId>
											<artifactId>ext-cortex-webapp</artifactId>
											<type>war</type>
											<properties>
												<context>${ep.cortex.contextUrl}</context>
											</properties>
										</deployable>
									</deployables>
								</configuration>
							</execution>
							<execution>
								<id>stop-dce-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
								<configuration>
									<configuration>
										<home>${project.build.directory}/tomcat7x/container</home>
										<properties>
											<cargo.jvmargs>${cargo.jvmargs.cortex}</cargo.jvmargs>
											<cargo.servlet.port>${ep.cortex.itest.port.http}</cargo.servlet.port>
											<cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
											<cargo.rmi.port>${cargo.rmi.port}</cargo.rmi.port>
											<cargo.tomcat.shutdown.port>${cargo.tomcat.shutdown.port}</cargo.tomcat.shutdown.port>
										</properties>
									</configuration>
								</configuration>
							</execution>
							<execution>
								<id>start-search-container</id>
								<phase>package</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<configuration>
										<home>${project.build.directory}/tomcat7x/search-container</home>
										<properties>
											<cargo.jvmargs>${cargo.jvmargs.search}</cargo.jvmargs>
											<cargo.servlet.port>${ep.search.itest.port.http}</cargo.servlet.port>
											<cargo.tomcat.ajp.port>${search.cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
											<cargo.rmi.port>${search.cargo.rmi.port}</cargo.rmi.port>
											<cargo.tomcat.shutdown.port>${search.cargo.tomcat.shutdown.port}</cargo.tomcat.shutdown.port>
										</properties>
									</configuration>
									<deployables>
										<deployable>
											<groupId>com.elasticpath.extensions</groupId>
											<artifactId>ext-search-webapp</artifactId>
											<type>war</type>
											<pingTimeout>600000</pingTimeout>
											<properties>
												<context>${ep.search.contextUrl}</context>
											</properties>
										</deployable>
									</deployables>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<skip>${skipAllTests}</skip>
							<!-- This project is not designed to run cargo standalone, use tomcat:run-war in the war project you want. -->
							<wait>false</wait>
							<container>
								<containerId>tomcat7x</containerId>
								<artifactInstaller>
									<groupId>org.apache.tomcat</groupId>
									<artifactId>tomcat</artifactId>
									<version>${tomcat.version}</version>
									<type>tar.gz</type>
								</artifactInstaller>
								<timeout>1200000</timeout>
								<dependencies>
									<!-- Required by H2 Datasource at container startup time. -->
									<dependency>
										<groupId>com.h2database</groupId>
										<artifactId>h2</artifactId>
									</dependency>

									<!-- Required by ActiveMQ JMS ConnectionFactory at container startup time. -->
									<dependency>
										<groupId>org.apache.activemq</groupId>
										<artifactId>activemq-pool</artifactId>
									</dependency>
									<dependency>
										<groupId>org.apache.activemq</groupId>
										<artifactId>activemq-jms-pool</artifactId>
									</dependency>
									<dependency>
										<groupId>org.apache.activemq</groupId>
										<artifactId>activemq-client</artifactId>
									</dependency>
									<dependency>
										<groupId>org.fusesource.hawtbuf</groupId>
										<artifactId>hawtbuf</artifactId>
									</dependency>
									<dependency>
										<groupId>org.apache.camel</groupId>
										<artifactId>camel-jms</artifactId>
									</dependency>
									<dependency>
										<groupId>org.apache.camel</groupId>
										<artifactId>camel-core</artifactId>
									</dependency>
									<dependency>
										<groupId>commons-pool</groupId>
										<artifactId>commons-pool</artifactId>
									</dependency>
									<dependency>
										<groupId>org.apache.commons</groupId>
										<artifactId>commons-pool2</artifactId>
									</dependency>
									<dependency>
										<groupId>org.apache.geronimo.specs</groupId>
										<artifactId>geronimo-jms_1.1_spec</artifactId>
									</dependency>
									<dependency>
										<groupId>org.apache.geronimo.specs</groupId>
										<artifactId>geronimo-j2ee-management_1.1_spec</artifactId>
									</dependency>

									<!-- Logging is required by ActiveMQ at container startup time.
										This is a bit unfortunate as it differs from our regular deployment
										where we deploy slf4j in cortex.war/WEB-INF/lib. -->
									<dependency>
										<groupId>org.slf4j</groupId>
										<artifactId>slf4j-api</artifactId>
									</dependency>
									<dependency>
										<groupId>org.slf4j</groupId>
										<artifactId>jcl-over-slf4j</artifactId>
									</dependency>
									<dependency>
										<groupId>ch.qos.logback</groupId>
										<artifactId>logback-classic</artifactId>
									</dependency>
									<dependency>
										<groupId>ch.qos.logback</groupId>
										<artifactId>logback-core</artifactId>
									</dependency>
								</dependencies>
								<systemProperties>
									<java.awt.headless>true</java.awt.headless>
									<h2.bindAddress>localhost</h2.bindAddress>
									<!-- Turn logging down out of the gate.  When slf4j starts at debug things get a bit spammy. -->
									<org.slf4j.simpleLogger.defaultLogLevel>WARN</org.slf4j.simpleLogger.defaultLogLevel>
								</systemProperties>
							</container>
							<configuration>
								<properties>
									<cargo.logging>medium</cargo.logging>
									<cargo.datasource.datasource>
										<![CDATA[cargo.datasource.url=jdbc:h2:${project.build.directory}/database/CORTEXDB;DB_CLOSE_DELAY=-1;AUTO_SERVER=TRUE;MVCC=TRUE|
									cargo.datasource.driver=org.h2.Driver|
									cargo.datasource.username=sa|
									cargo.datasource.password=sa|
									cargo.datasource.properties=scope=Shareable;maxActive=250;maxIdle=30;maxWait=10000;removeAbandoned=true;testWhileIdle=true;validationQuery=${epdb.validation.query};removeAbandoned=true;logAbandoned=true|
									cargo.datasource.jndi=jdbc/epjndi]]>
									</cargo.datasource.datasource>
									<cargo.resource.resource>
										cargo.resource.name=jms/JMSConnectionFactory|
										cargo.resource.type=${ep.jms.type}|
										cargo.resource.parameters=factory=${ep.jms.factory};brokerURL=${ep.activemq.url};maxConnections=100;maximumActiveSessionPerConnection=50;idleTimeout=10000
									</cargo.resource.resource>
								</properties>
								<files>
									<copy>
										<file>${project.basedir}/src/test/resources/tomcat7x/server.xml</file>
										<tofile>conf/server.xml</tofile>
										<configfile>true</configfile>
										<overwrite>true</overwrite>
									</copy>
									<copy>
										<file>${project.basedir}/src/main/filtered-resources/logback.xml</file>
										<tofile>common/classes/logback.xml</tofile>
										<configfile>true</configfile>
										<overwrite>true</overwrite>
									</copy>
								</files>
							</configuration>
						</configuration>
					</plugin>
					<!-- Pauses test execution until Cortex Webapp is ready. Uses an ant script to do this -->

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-deployment-target-properties</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="${skipAllTests}">
										<ant antfile="${basedir}/src/main/scripts/validate.xml"/>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>m2e-lifecycle-mapping</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>${lifecycle-mapping-plugin.version}</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>build-helper-maven-plugin</artifactId>
												<versionRange>[1.7,)</versionRange>
												<goals>
													<goal>reserve-network-port</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore/>
											</action>
										</pluginExecution>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>properties-maven-plugin</artifactId>
												<versionRange>[0,)</versionRange>
												<goals>
													<goal>set-system-properties</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore/>
											</action>
										</pluginExecution>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-dependency-plugin</artifactId>
												<versionRange>[1,)</versionRange>
												<goals>
													<goal>unpack</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore/>
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

	</profiles>

	<dependencies>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.elasticpath.rest.tests</groupId>
			<artifactId>fluent-relos-client</artifactId>
			<version>${fluent.relos.client.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.5.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-jms-pool</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-client</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.fusesource.hawtbuf</groupId>
			<artifactId>hawtbuf</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
		</dependency>
		<dependency>
			<groupId>com.elasticpath.rest</groupId>
			<artifactId>ep-rs-annotated-dispatch</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy.modules.http-builder</groupId>
			<artifactId>http-builder</artifactId>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-groovy</artifactId>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.elasticpath</groupId>
			<artifactId>ep-jms-test-support</artifactId>
			<version>${dce.version}</version>
		</dependency>
		<dependency>
			<groupId>com.elasticpath</groupId>
			<artifactId>ep-query-analyzer</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<includes>
						<include>**/com/elasticpath/**</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<includes>
					<include>**/com/elasticpath/**</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
					<execution>
						<id>attach-sources</id>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration combine.self="override">
					<compilerArgs>
						<arg>-Xlint:all</arg>
					</compilerArgs>
					<compilerId>groovy-eclipse-compiler</compilerId>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-compiler</artifactId>
						<version>2.9.2-04</version>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-batch</artifactId>
						<version>2.4.15-01</version>
					</dependency>
				</dependencies>
			</plugin>
			<!-- Configured for Cucumber -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<encoding>${charset.encoding}</encoding>
					<argLine>-Dfile.encoding=${charset.encoding}</argLine>
					<systemPropertyVariables>
						<ep.rest.baseurl>${ep.rest.baseurl}</ep.rest.baseurl>
						<ep.rest.authtype>${ep.rest.authtype}</ep.rest.authtype>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<skip>${skipCucumberTests}</skip>
							<systemPropertyVariables>
								<cucumber.options>${cucumber.options}</cucumber.options>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>ep-releases</id>
			<url>${ep.releases.repository.url}</url>
		</repository>
		<snapshotRepository>
			<id>ep-snapshots</id>
			<url>${ep.snapshots.repository.url}</url>
		</snapshotRepository>
	</distributionManagement>

</project>
