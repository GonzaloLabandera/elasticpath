<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		">

	<bean id="orderShipmentReleaseFailedEmailProducerTemplate" class="com.elasticpath.email.handler.order.producer.impl.OrderShipmentReleaseFailedEmailProducer"
		abstract="true">
		<property name="emailComposer" ref="emailComposer" />
		<property name="orderEmailPropertyHelper" ref="emailPropertyHelperOrder" />
		<property name="orderService" ref="orderService" />
	</bean>

	<bean id="orderShipmentReleaseFailedEmailProducer" parent="orderShipmentReleaseFailedEmailProducerTemplate" />

	<bean id="orderShipmentReleaseFailedEmailHandlingRouteBuilderTemplate" parent="abstractEventMessageTriggeredEmailRouteBuilder"
		  abstract="true">
		<property name="routeId" value="orderShipmentReleaseFailedEmailHandler" />
		<property name="incomingEndpoint">
			<bean parent="orderEventExternalEndpoint">
				<property name="camelContextId" value="ep-order-email-handler" />
				<property name="context" value="orderShipmentReleaseFailedEmailHandler"/>
			</bean>
		</property>
		<property name="outgoingEndpoint">
			<bean parent="emailSendingEndpoint">
				<property name="camelContextId" value="ep-order-email-handler" />
			</bean>
		</property>
		<property name="eventMessagePredicateFilter" ref="orderShipmentReleaseFailedEventTypePredicate" />
		<property name="emailProducer" ref="orderShipmentReleaseFailedEmailProducer" />
	</bean>

	<bean id="orderShipmentReleaseFailedEmailHandlingRouteBuilder" parent="orderShipmentReleaseFailedEmailHandlingRouteBuilderTemplate"/>

</beans>
