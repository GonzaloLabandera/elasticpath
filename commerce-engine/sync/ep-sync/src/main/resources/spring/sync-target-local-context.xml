<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		">

	<!--
	This element will substitute ${} placeholders found in the listed property files.
	If the placeholder is not found after searching locations, or JVM system properties, it will remain in the ${} form,
	(with no substitution performed) and as a result could cause spurious results at run-time.
	-->
	<context:property-placeholder ignore-resource-not-found="true" system-properties-mode="OVERRIDE"
		location="
			file:/etc/ep/ep.properties,
			file:/ep/conf/ep.properties,
			file:/ep/conf/ep.datasync.properties,
			file:${user.home}/ep/conf/ep.properties,
			file:${user.home}/ep/conf/ep.datasync.properties" />

	<!-- This element defines overrides of the format: beanName.property=value
	for existing bean properties. If items in these property files do not conform
	to format convention, they will not be overridden in run-time and as a result
	use the default value originally stated in the bean. -->
	<context:property-override
		ignore-resource-not-found="true" local-override="true"
		location="
			file:/etc/ep/ep.override.properties,
			file:/ep/conf/ep.override.properties,
			file:/ep/conf/ep.datasync.override.properties,
			file:${user.home}/ep/conf/ep.override.properties,
			file:${user.home}/ep/conf/ep.datasync.override.properties" />

	<import resource="classpath:spring/prototypes/prototypes.xml" />
	<import resource="classpath:spring/models/domainModel.xml" />

	<import resource="dataaccess/sync-dao.xml" />

	<import resource="classpath:spring/service/service.xml" />

	<bean id="eventMessageFactory" class="com.elasticpath.commons.beanframework.NoOpProxyFactoryBean">
		<property name="serviceInterface" value="com.elasticpath.messaging.factory.EventMessageFactory"/>
	</bean>

	<bean id="changeSetEventMessagePublisher" class="com.elasticpath.commons.beanframework.NoOpProxyFactoryBean">
		<property name="serviceInterface" value="com.elasticpath.messaging.EventMessagePublisher"/>
	</bean>

	<bean id="customerEventMessagePublisher" class="com.elasticpath.commons.beanframework.NoOpProxyFactoryBean">
		<property name="serviceInterface" value="com.elasticpath.messaging.EventMessagePublisher" />
	</bean>

	<bean id="orderEventMessagePublisher" class="com.elasticpath.commons.beanframework.NoOpProxyFactoryBean">
		<property name="serviceInterface" value="com.elasticpath.messaging.EventMessagePublisher"/>
	</bean>

	<!-- Suppress instantiating a caching bean for data sync by using an alias which forces use of the non-caching version -->
	<alias name="nonCachingProductCharacteristicsService" alias="cachingProductCharacteristicsService" />

	<!-- As service.xml is imported, the beans referenced by service.xml but not defined in that file should be defined here or in any xml file imported. -->
	<bean id="storeMessageSourceDelegate" class="com.elasticpath.commons.util.impl.StoreMessageSourceImpl" />

	<bean id="applicationInitialization" class="com.elasticpath.tools.sync.beanfactory.local.LocalPersistenceEngineInitialization" init-method="init">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSourceProperties" ref="dataSourceProperties" />
	</bean>
	<import resource="service/sync-configuration.xml" />

	<import resource="service/sync-merge-configuration.xml" />

	<import resource="service/sync-service.xml" />
	<import resource="classpath:spring/commons/util-config.xml" />
	<import resource="classpath:spring/commons/validators.xml" />

	<import resource="classpath:spring/dataaccess/openjpa/openjpa.xml" />

	<util:map id="persistencePropertyOverrides" key-type="java.lang.String">
		<entry key="openjpa.DataCacheManager" value="default" />

		<entry key="openjpa.DataCache" value="true(cacheSize=25000,softReferenceSize=0)" />
		<entry key="openjpa.DataCacheTimeout" value="1800000" />
		<entry key="openjpa.RemoteCommitProvider" value="sjvm" />
		<entry key="openjpa.QueryCompilationCache" value="true(cacheSize=25000,softReferenceSize=0)" />
		<entry key="openjpa.QueryCache" value="true(cacheSize=10000,softReferenceSize=0)" />
		<entry key="openjpa.jdbc.QuerySQLCache" value="false" />
		<entry key="openjpa.MetaDataRepository" value="Preload=false"/>
	</util:map>

	<alias name="basePersistenceUnitManager" alias="persistenceUnitManager"/>
	<bean id="entityManagerFactory" parent="abstractEntityManagerFactory"/>

	<import resource="classpath*:META-INF/elasticpath/conf/spring/plugin.xml"/>

	<import resource="classpath*:META-INF/conf/ep-dst-plugin-local.xml" />

	<!--
		Define non-shared cache manager for target context
	-->
	<bean id="applicationName" class="java.lang.String">
		<constructor-arg value="DataSyncTarget"/>
	</bean>

	<alias name="defaultCacheManager" alias="epCoreEhcacheManager"/>
	<alias name="defaultCacheManager" alias="epEhcacheManager"/>

	<bean id="defaultCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		  destroy-method="destroy">
		<property name="cacheManagerName" value="#{applicationName}-CacheManager"/>
		<property name="shared" value="false"/>
		<property name="configLocation" value="#{ehCacheConfigurationLoader.resource}"/>
	</bean>

	<bean id="ehCacheConfigurationLoader" class="com.elasticpath.commons.util.EhcacheConfigurationLoader">
		<property name="pathname" value="${ep.external.datasync.target.ehcache.xml.path:null}"/>
	</bean>

</beans>
