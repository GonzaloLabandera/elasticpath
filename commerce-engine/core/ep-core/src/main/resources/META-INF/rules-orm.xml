<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd" version="2.0">

    <!-- Named queries for EpRuleBaseImpl -->
		<named-query name="EP_RULE_BASE_FIND_BY_STORE_SCENARIO">
			<query>
				SELECT rb
				FROM EpRuleBaseImpl rb
				WHERE rb.store.uidPk = ?1
				AND rb.scenarioId = ?2
			</query>
		</named-query>
		<named-query name="EP_RULE_BASE_FIND_BY_CATALOG_SCENARIO">
			<query>
				SELECT rb
				FROM EpRuleBaseImpl rb
				WHERE rb.catalog.uidPk = ?1
				AND rb.scenarioId = ?2
			</query>
		</named-query>
		<named-query name="EP_RULE_BASE_FIND_BY_STORE_CATALOG_SCENARIO">
			<query>
				SELECT rb
				FROM EpRuleBaseImpl rb
				WHERE rb.store.uidPk = ?1
				AND rb.catalog.uidPk = ?2
				AND rb.scenarioId = ?3
			</query>
		</named-query>

    <!-- Named queries for PromotionRuleImpl -->
		<named-query name="RULE_FIND_BY_UIDS">
			<query>
				SELECT r
				FROM PromotionRuleImpl r
				WHERE r.uidPk in (:list)
			</query>
		</named-query>
		<named-query name="RULE_FIND_BY_NOT_UIDS_IN_STORE">
			<query>
				SELECT r
				FROM PromotionRuleImpl r
				WHERE r.uidPk not in (:list)
				AND r.store.uidPk in (:store_uids)
			</query>
		</named-query>
		<named-query name="RULE_FIND_IN_STORE_LIST">
			<query>
				SELECT r
				FROM PromotionRuleImpl r
				WHERE r.store.uidPk in (:list)
			</query>
		</named-query>
		<named-query name="RULE_SELECT_ACTIVE_COUNT_NUM">
			<query>
				SELECT count(r)
				FROM PromotionRuleImpl r
				WHERE (r.startDate is null or r.startDate &lt;= ?1 )
				AND ( r.endDate is null or r.endDate &gt;=?2 )
			</query>
		</named-query>
		<named-query name="RULE_FIND_BY_NAME">
			<query>
				SELECT r
				FROM PromotionRuleImpl r
				WHERE r.name = ?1
			</query>
		</named-query>
		<named-query name="RULE_UIDS_ALL">
			<query>
				SELECT r.uidPk
				FROM PromotionRuleImpl as r
			</query>
		</named-query>
		<named-query name="RULE_UIDS_SELECT_BY_MODIFIED_DATE">
			<query>
				SELECT r.uidPk
				FROM PromotionRuleImpl as r
				WHERE r.lastModifiedDate &gt;= ?1
			</query>
		</named-query>
		<named-query name="RULE_BASE_MODIFIED_DATE_BY_UID">
			<query>
				SELECT r.lastModifiedDate
				FROM EpRuleBaseImpl as r
				WHERE r.uidPk = ?1
			</query>
		</named-query>
		<named-query name="RULE_UIDS_SCOPE_CHANGED">
			<query>
				SELECT r.uidPk
				FROM PromotionRuleImpl r
				WHERE ((r.startDate &lt;= ?1
				AND r.startDate &gt;= ?2) OR (r.endDate &lt;= ?1
				AND r.endDate &gt;= ?2))
				AND r.ruleSet.scenario = ?3
			</query>
		</named-query>
		<named-query name="RULE_FIND_BY_CODE">
			<query>
				SELECT r
				FROM PromotionRuleImpl r
				WHERE r.code = ?1
			</query>
		</named-query>
		<named-query name="RULE_FIND_BY_CODES">
			<query>
				SELECT r
				FROM PromotionRuleImpl r
				WHERE r.code IN (:list)
			</query>
		</named-query>
		<named-query name="FIND_LUP_BY_RULECODE">
			<query>
				SELECT r.currentLupNumber
				FROM PromotionRuleImpl r
				WHERE r.code = ?1
			</query>
		</named-query>
		<named-query name="ACTIVE_RULEID_AND_SELLINGCONTEXT_FIND_BY_SCENARIO_AND_STORE">
			<query>
				SELECT new com.elasticpath.service.rules.SellingContextRuleSummary(rule.ruleSet.scenario, rule.uidPk, rule.sellingContext,
				rule.store,
				rule.catalog)
				FROM PromotionRuleImpl rule
				WHERE rule.enabled = true
				AND (rule.endDate is null OR rule.endDate &gt; CURRENT_TIMESTAMP)
				AND rule.ruleSet.scenario = ?1
				AND rule.store.code = ?2
			</query>
		</named-query>

		<named-query name="ACTIVE_RULEID_AND_SELLINGCONTEXT_FIND_BY_SCENARIO_AND_CATALOG">
			<query>
				SELECT new com.elasticpath.service.rules.SellingContextRuleSummary(rule.ruleSet.scenario, rule.uidPk, rule.sellingContext,
				rule.store, rule.catalog)
				FROM PromotionRuleImpl rule
				WHERE rule.enabled = true
				AND (rule.endDate is null OR rule.endDate &gt; CURRENT_TIMESTAMP)
				AND rule.ruleSet.scenario = ?1
				AND rule.catalog.code = ?2
			</query>
		</named-query>

	<named-query name="All_ACTIVE_RULEID_AND_SELLINGCONTEXT">
		<query>
			SELECT new com.elasticpath.service.rules.SellingContextRuleSummary(rule.ruleSet.scenario, rule.uidPk, rule.sellingContext,
			rule.store,
			rule.catalog)
			FROM PromotionRuleImpl rule
			WHERE rule.enabled = true
			AND (rule.endDate is null OR rule.endDate &gt; CURRENT_TIMESTAMP)
		</query>
	</named-query>

		<named-query name="RULE_FIND_BY_COUPON_CODE">
			<query>
				SELECT new com.elasticpath.domain.rules.impl.PromotionRuleImpl(r.uidPk, r.store.code, r.enabled, r.startDate,
				r.endDate,r.sellingContext, r.currentLupNumber)
				FROM PromotionRuleImpl r, CouponImpl c
				WHERE r.code = c.couponConfig.ruleCode
				AND c.couponCode = ?1
			</query>
		</named-query>

		<named-query name="RULE_LIMITED_USE_CONDITION_ID_FIND_BY_COUPON_CODE">
			<query>
				SELECT ruleElements.uidPk
				FROM PromotionRuleImpl r, CouponImpl c
				LEFT OUTER JOIN r.ruleElements ruleElements
				WHERE r.code = c.couponConfig.ruleCode
				AND ruleElements.type = 'limitedUseCouponCodeCondition'
				AND c.couponCode = ?1
			</query>
		</named-query>
		<!-- The same story, as for RULE_FIND_BY_COUPON_CODE,  applies to the next 2 queries -->
		<named-query name="RULE_MAP_BY_PROMO_CODES">
			<query>
				SELECT c.couponCode, new com.elasticpath.domain.rules.impl.PromotionRuleImpl(r.uidPk, r.store.code, r.enabled, r.startDate,
				r.endDate, r.sellingContext, r.currentLupNumber)
				FROM PromotionRuleImpl r, CouponImpl c
				WHERE r.code = c.couponConfig.ruleCode
				AND c.couponCode IN (:promoCodes)
			</query>
		</named-query>

		<named-query name="RULE_ID_FIND_BY_COUPON_CODE">
			<query>
				SELECT new com.elasticpath.domain.rules.impl.PromotionRuleImpl(r.uidPk)
				FROM PromotionRuleImpl r, CouponImpl c
				WHERE r.code = c.couponConfig.ruleCode
				AND c.couponCode = ?1
			</query>
		</named-query>

		<named-query name="RULE_ALLOWED_LIMIT_FIND_BY_RULE_ID">
			<query>
				SELECT params.value
				FROM PromotionRuleImpl r
				LEFT JOIN r.ruleElements ruleElements
				LEFT JOIN ruleElements.parameters params
				WHERE r.uidPk = ?1
				AND params.key='allowedLimit'
			</query>
		</named-query>

		<named-query name="RULE_CODE_BY_UID">
			<query>
				SELECT r.code
				FROM PromotionRuleImpl r
				WHERE r.uidPk = ?1
			</query>
		</named-query>

		<named-query name="RULE_CODE_BY_UIDS">
			<query>
				SELECT r.code
				FROM PromotionRuleImpl r
				WHERE r.uidPk IN (:list)
			</query>
		</named-query>

		<named-query name="RULES_BY_SCENARIO_AND_STORE">
			<query>
				SELECT r
				FROM PromotionRuleImpl r
				WHERE r.ruleSet.scenario = ?1
				AND UPPER(r.store.code) = UPPER(?2)
			</query>
		</named-query>
		<named-query name="RULES_MAPPED_BY_COUPON_CODE">
			<query>
				SELECT c.couponCode, r
				FROM PromotionRuleImpl r, CouponImpl c
				WHERE r.code = c.couponConfig.ruleCode
				AND c.couponCode IN (:list)
			</query>
		</named-query>
		<named-query name="PROMOTION_NAME_BY_GUID">
			<query>
				SELECT r.name
				FROM PromotionRuleImpl r
				WHERE r.code = ?1
			</query>
		</named-query>
		<named-query name="FIND_ALL_COUPON_ASSIGNMENT_PROMOS_FOR_A_UIDPK_LIST">
			<query>
				SELECT r.uidPk
				FROM PromotionRuleImpl r
				WHERE r.code IN (SELECT p.value
					FROM PromotionRuleImpl r, in(r.ruleElements) e, in(e.parameters) p
					WHERE p.key = ?1
					AND r.uidPk IN (:list))
			</query>
		</named-query>

    <!-- Named queries for RuleParameterImpl -->
		<named-query name="RULE_PARAMETER_VALUE_BY_KEY">
			<query>
				SELECT rp.value
				FROM RuleParameterImpl as rp
				WHERE rp.key = ?1
			</query>
		</named-query>

    <!-- Named queries for RuleSetImpl -->
		<named-query name="RULE_SET_SELECT_BY_MODIFIED_DATE">
			<query>
				SELECT rs
				FROM RuleSetImpl rs
				WHERE rs.lastModifiedDate &gt;= ?1
			</query>
		</named-query>
		<named-query name="RULESET_FIND_BY_SCENARIO">
			<query>
				SELECT rs
				FROM RuleSetImpl rs
				WHERE rs.scenario = ?1
			</query>
		</named-query>
		<named-query name="RULESET_FIND_BY_NAME">
			<query>
				SELECT rs
				FROM RuleSetImpl rs
				WHERE rs.name = ?1
			</query>
		</named-query>
		<named-query name="RULE_SET_UPDATE_LAST_MODIFIED_DATE">
			<query>
				UPDATE RuleSetImpl rs
				SET rs.lastModifiedDate = ?2
				WHERE rs.uidPk = ?1
			</query>
		</named-query>

    <!-- Named queries for CouponImpl -->
		<named-query name="COUPON_FIND_BY_COUPON_CODE">
			<query>
				SELECT c
				FROM CouponImpl c
				WHERE UPPER(c.couponCode) = UPPER(?1)
			</query>
		</named-query>
		<named-query name="COUPON_FIND_BY_RULE_CODE">
			<query>
				SELECT c
				FROM CouponImpl c
				WHERE c.couponConfig.ruleCode =?1
			</query>
		</named-query>

		<named-query name="COUPON_FIND_UNUSED_COUPON_FOR_RULE_CODE_AND_EMAIL">
			<query>
				SELECT c
				FROM CouponImpl c JOIN c.couponConfig cc
				WHERE cc.ruleCode = ?1
				AND cc.usageType = 'limitPerSpecifiedUser'
				AND NOT EXISTS (SELECT cu.useCount
				FROM CouponUsageImpl cu
				WHERE cu.coupon.uidPk = c.uidPk
				AND cu.customerEmailAddress = ?2)
				AND c.suspended = false
			</query>
		</named-query>
		<named-query name="COUPON_FIND_BY_RULE_CODE_FROM_COUPON_CODES">
			<query>
				SELECT c
				FROM CouponImpl c
				WHERE c.couponConfig.ruleCode = ?1
				AND c.couponCode IN (:list)
			</query>
		</named-query>
		<named-query name="COUPON_FIND_BY_RULE_UID_FROM_COUPON_CODES">
			<query>
				SELECT c
				FROM CouponImpl c, PromotionRuleImpl pr
				WHERE c.couponConfig.ruleCode = pr.code
				AND pr.uidPk = ?1
				AND c.couponCode IN (:list)
			</query>
		</named-query>
		<named-query name="COUPON_DELETE_BY_COUPON_CONFIG_GUID">
			<query>
				DELETE FROM CouponImpl c
				WHERE c.couponConfig.guid = ?1
			</query>
		</named-query>

	<!--FIXME this query esentially returns the same list from db -->
		<named-query name="COUPON_CODES_FIND_FROM_LIST">
			<query>
				SELECT c.couponCode
				FROM CouponImpl c
				WHERE c.couponCode IN (:list)
			</query>
		</named-query>
		<named-query name="COUPON_CODES_NOT_RULE_CODE_FIND_FROM_LIST">
			<query>
				<![CDATA[
				SELECT c.couponCode
				FROM CouponImpl c
				WHERE c.couponCode IN (:list)
				AND c.couponConfig.ruleCode <> ?1
				]]>
			</query>
		</named-query>
		<named-query name="COUPON_CODES_BY_COUPON_CODE_NOT_RULE_CODE">
			<query>
				<![CDATA[
				SELECT c.couponCode
				FROM CouponImpl c
				WHERE c.couponCode = ?1
				AND c.couponConfig.ruleCode <> ?2
				]]>
			</query>
		</named-query>
		<named-query name="COUPON_CODES_BY_RULE_CODE">
			<query>
				SELECT c.couponCode
				FROM CouponImpl c
				WHERE c.couponConfig.ruleCode = ?1
			</query>
		</named-query>
		<named-query name="COUPONS_FIND_BY_UIDS">
			<query>
				SELECT c
				FROM CouponImpl c
				WHERE c.uidPk IN (:list)
			</query>
		</named-query>
		<named-query name="COUPON_MAP_BY_CODE">
			<query>
				SELECT c.couponCode, c
				FROM CouponImpl c
				WHERE c.couponCode IN (:list)
			</query>
		</named-query>
		<named-query name="COUPON_LIKE_CODE_PREFIX_DESC">
			<query>
				SELECT c
				FROM CouponImpl c
				WHERE c.couponCode LIKE ?1 ORDER BY c.couponCode DESC
			</query>
		</named-query>

    <!-- Named queries for CouponUsageImpl -->
		<named-query name="COUPON_USAGE_FIND_BY_COUPON_CODE">
			<query>
				SELECT cu
				FROM CouponUsageImpl cu
				WHERE cu.coupon.couponCode = ?1
			</query>
		</named-query>
		<named-query name="COUPON_USECOUNT_FIND_BY_COUPON_CODE_AND_EMAIL_ADDRESS">
			<query>
				SELECT sum(cu.useCount)
				FROM CouponUsageImpl cu
				WHERE cu.coupon.couponCode = ?1
				AND cu.customerEmailAddress = ?2
			</query>
		</named-query>
		<named-query name="COUPON_USAGE_FIND_BY_RULE_CODE">
			<query>
				SELECT cu
				FROM CouponUsageImpl cu
				WHERE cu.coupon.couponConfig.ruleCode = ?1
			</query>
		</named-query>
		<named-query name="COUPON_USAGE_FIND_BY_COUPON_CODE_AND_EMAIL_ADDRESS">
			<query>
				SELECT cu
				FROM CouponUsageImpl cu
				WHERE cu.coupon.couponCode = ?1
				AND cu.customerEmailAddress = ?2
			</query>
		</named-query>
		<named-query name="COUPON_USAGE_FIND_BY_RULE_CODE_AND_EMAIL_ADDRESS">
			<query>
				SELECT cu
				FROM CouponUsageImpl cu
				WHERE cu.coupon.couponConfig.ruleCode = ?1
				AND cu.customerEmailAddress = ?2
			</query>
		</named-query>
		<named-query name="COUPON_USAGE_FIND_BY_EMAIL_ELIGIBLE_IN_STORE">
			<query>
				<![CDATA[
				SELECT cu
				FROM CouponUsageImpl cu, PromotionRuleImpl pr
				INNER JOIN cu.coupon c
				WHERE cu.customerEmailAddress = ?1
				AND (cu.limitedDurationEndDate IS NULL OR cu.limitedDurationEndDate >= ?2 )
				AND (cu.coupon.couponConfig.usageLimit = 0 OR cu.coupon.couponConfig.usageLimit > cu.useCount )
				AND pr.code = c.couponConfig.ruleCode
				AND pr.store.uidPk = ?3
				AND cu.suspendedInternal = false
				AND cu.coupon.suspended = false
				]]>
			</query>
		</named-query>
		<named-query name="COUPON_USAGE_FIND_FOR_COUPON_EMAIL_RULE_CODE">
			<query>
				<![CDATA[
				SELECT cu
				FROM CouponUsageImpl cu
				WHERE cu.coupon.couponCode = ?1
				AND cu.customerEmailAddress = ?2
				AND cu.coupon.couponConfig.ruleCode = ?3
				]]>
			</query>
		</named-query>
		<named-query name="RULES_USAGE_ALL">
			<query>
				<![CDATA[
				SELECT o.currency, s.code, ar.ruleUid, ar.ruleName, ar.ruleName, r.startDate, r.endDate, rs.scenario, sum(o.total), count(o.orderNumber), count(o.orderNumber)
				FROM OrderImpl o, StoreImpl s, PromotionRuleImpl r, RuleSetImpl rs
				INNER JOIN o.appliedRules ar
				WHERE s.code = o.storeCode
				AND o.status <> 'FAILED'
				AND s.uidPk IN (:list)
				AND r.uidPk = ar.ruleUid
				AND (o.currency = ?1 OR ?1 IS NULL)
				AND (o.createdDate >= ?2 OR ?2 IS NULL)
				AND (o.createdDate <= ?3 OR ?3 IS NULL)
				AND (rs.scenario = r.ruleSet.scenario AND (r.ruleSet.scenario = ?4 OR ?4 = 0))
				GROUP BY o.currency, s.code, ar.ruleUid, ar.ruleName, r.startDate, r.endDate, rs.scenario
				]]>
			</query>
		</named-query>
		<named-query name="RULES_USAGE_COUPONS_ONLY">
			<query>
				<![CDATA[
				SELECT o.currency, s.code, ar.ruleUid, ar.ruleName, ar.ruleName, r.startDate, r.endDate, rs.scenario, sum(o.total), count(o.orderNumber), count(o.orderNumber)
				FROM OrderImpl o, StoreImpl s, PromotionRuleImpl r, RuleSetImpl rs
				INNER JOIN o.appliedRules ar
				INNER JOIN ar.appliedCoupons ac
				WHERE s.code = o.storeCode
				AND o.status <> 'FAILED'
				AND s.uidPk IN (:list)
				AND r.uidPk = ar.ruleUid
				AND (o.currency = ?1 OR ?1 IS NULL)
				AND (o.createdDate >= ?2 OR ?2 IS NULL)
				AND (o.createdDate<= ?3 OR ?3 IS NULL)
				AND (rs.scenario = r.ruleSet.scenario
				AND (r.ruleSet.scenario = ?4 OR ?4 = 0))
				GROUP BY o.currency, s.code, ar.ruleUid, ar.ruleName, r.startDate, r.endDate, rs.scenario
				]]>
			</query>
		</named-query>
		<named-query name="RULES_USAGE_TOTAL_ORDERS">
			<query>
				<![CDATA[
				SELECT o.currency, s.code, count(o.orderNumber)
				FROM OrderImpl o, StoreImpl s
				WHERE s.code = o.storeCode
				AND o.status <> 'FAILED'
				AND s.uidPk IN (:list)
				AND (o.currency = ?1 OR ?1 IS NULL)
				AND (o.createdDate >= ?2 OR ?2 IS NULL)
				AND (o.createdDate<= ?3 OR ?3 IS NULL)
				GROUP BY o.currency, s.code
				]]>
			</query>
		</named-query>

		<named-query name="COUPON_USAGE_DELETE_BY_COUPON_CONFIG_GUID">
			<query>
				DELETE
				FROM CouponUsageImpl cu
				WHERE cu.coupon.couponConfig.guid = ?1
			</query>
		</named-query>
		<named-query name="COUPON_USAGE_FIND_BY_UIDS">
			<query>
				SELECT cu
				FROM CouponUsageImpl cu
				WHERE cu.uidPk IN (:list)
			</query>
		</named-query>

		<named-query name="PROMOTION_DETAILS">
			<query>
				<![CDATA[
				SELECT o.orderNumber, o.createdDate, o.customer.sharedId, ac.couponCode, o.currency, o.total
				FROM OrderImpl o, StoreImpl s, PromotionRuleImpl r, RuleSetImpl rs
				INNER JOIN o.appliedRules ar
				LEFT OUTER JOIN ar.appliedCoupons ac
				WHERE s.code = o.storeCode
				AND o.status <> 'FAILED'
				AND r.uidPk = ar.ruleUid
				AND s.uidPk = ?1
				AND (o.currency = ?2 OR ?2 IS NULL)
				AND (o.createdDate >= ?3 OR ?3 IS NULL)
				AND o.createdDate<= ?4
				AND (rs.scenario = r.ruleSet.scenario
				AND (r.ruleSet.scenario = 1))
				AND r.code = ?5
				AND (ac.couponCode = ?6 OR ?6 IS NULL)
				]]>
			</query>
		</named-query>

    <!-- Named queries for CouponConfigImpl -->
		<named-query name="COUPON_CONFIG_BY_RULE_CODE">
			<query>
				SELECT cc
				FROM CouponConfigImpl cc
				WHERE cc.ruleCode = ?1
			</query>
		</named-query>
		<named-query name="COUPON_CONFIG_BY_CODE">
			<query>
				SELECT cc
				FROM CouponConfigImpl cc
				WHERE cc.guid = ?1
			</query>
		</named-query>
		<named-query name="COUPON_CONFIG_GUID_BY_RULE_CODE">
			<query>
				SELECT cc.guid
				FROM CouponConfigImpl cc
				WHERE cc.ruleCode = ?1
			</query>
		</named-query>
		<named-query name="DISABLE_AUTO_APPLY_TO_CARTS_BY_COUPON_CODE_AND_EMAIL">
			<query>
				UPDATE CouponUsageImpl cu
				SET cu.autoApplyToCarts = false
				WHERE cu.autoApplyToCarts = true
				AND cu.coupon.couponCode = ?1
				AND cu.customerEmailAddress = ?2
			</query>
		</named-query>

</entity-mappings>

