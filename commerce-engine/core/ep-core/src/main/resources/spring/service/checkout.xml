<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) Elastic Path Software Inc., 2019
  -->

<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:extensibleList="http://www.elasticpath.com/schema/extensibleList"
		xmlns:settings="http://www.elasticpath.com/schema/settings"
		xsi:schemaLocation="
				http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
				http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
				http://www.elasticpath.com/schema/extensibleList http://www.elasticpath.com/schema/extensibleList/extensibleList.xsd
				http://www.elasticpath.com/schema/settings http://www.elasticpath.com/schema/settings/settings.xsd
		">

	<!-- !!!! DOCshippingServiceLevelService -->

	<bean id="orderFactory" class="com.elasticpath.service.shoppingcart.impl.OrderFactoryImpl">
		<property name="orderSkuFactory" ref="orderSkuFactory"/>
		<property name="productSkuLookup" ref="productSkuLookup"/>
		<property name="ruleService" ref="ruleService"/>
		<property name="beanFactory" ref="coreBeanFactory"/>
		<property name="orderService" ref="orderService"/>
		<property name="cartOrderService" ref="cartOrderService"/>
		<property name="timeService" ref="timeService"/>
		<property name="appliedRuleVisitor" ref="appliedRuleVisitor"/>
		<property name="discountCalculator" ref="discountApportioningCalculator"/>
	</bean>

	<bean id="checkoutEventHandler" class="com.elasticpath.service.shoppingcart.impl.CompositeCheckoutEventHandlerImpl">
		<property name="checkoutEventHandlers" ref="checkoutEventHandlers"/>
	</bean>

	<!-- Define list of checkout event handlers here. Note that this definition is overridden in serviceSF.xml -->
	<util:list id="checkoutEventHandlers">
	</util:list>

	<bean id="returnAndExchangeService" parent="txProxyTemplate">
		<property name="target" ref="returnAndExchangeServiceTarget"/>
	</bean>

	<bean id="returnAndExchangeServiceTargetTemplate" abstract="true"
		  class="com.elasticpath.service.order.impl.ReturnAndExchangeServiceImpl">
		<property name="persistenceEngine" ref="persistenceEngine"/>
		<property name="elasticPath" ref="elasticPath"/>
		<property name="timeService" ref="timeService"/>
		<property name="orderService" ref="orderService"/>
		<property name="checkoutService" ref="checkoutService"/>
		<property name="shippingOptionService" ref="shippingOptionService"/>
		<property name="productSkuLookup" ref="productSkuLookup"/>
		<property name="customerSessionService" ref="customerSessionService"/>
		<property name="shopperService" ref="shopperService"/>
		<property name="shoppingCartService" ref="shoppingCartService"/>
		<property name="fetchPlanHelper" ref="fetchPlanHelper"/>
		<property name="storeService" ref="storeService"/>
		<property name="returnTaxOperationService" ref="returnTaxOperationService"/>
		<property name="taxOperationService" ref="taxOperationService"/>
		<property name="eventMessageFactory" ref="eventMessageFactory"/>
		<property name="eventMessagePublisher" ref="orderEventMessagePublisher"/>
		<property name="orderShipmentHandlerFactory" ref="orderShipmentHandlerFactory"/>
        <property name="orderReturnValidator">
            <bean class="com.elasticpath.service.order.impl.CompositeOrderReturnValidatorImpl">
                <property name="validators">
                    <list>
                        <bean class="com.elasticpath.service.order.impl.CompositeOrderReturnValidatorImpl.OrderReturnSkuValidator"/>
                        <bean class="com.elasticpath.service.order.impl.CompositeOrderReturnValidatorImpl.OrderReturnQuantityValidator"/>
                        <bean class="com.elasticpath.service.order.impl.CompositeOrderReturnValidatorImpl.OrderReturnReturnableQuantityValidator"/>
                        <bean class="com.elasticpath.service.order.impl.CompositeOrderReturnValidatorImpl.OrderReturnRestockAmountValidator"/>
                        <bean class="com.elasticpath.service.order.impl.CompositeOrderReturnValidatorImpl.OrderReturnShippingCostValidator">
                            <property name="orderShipmentHandlerFactory" ref="orderShipmentHandlerFactory"/>
                        </bean>
                    </list>
                </property>
            </bean>
        </property>
        <property name="pricingSnapshotService" ref="pricingSnapshotService"/>
		<property name="taxSnapshotService" ref="taxSnapshotService"/>
		<property name="cartOrderService" ref="cartOrderService"/>
		<property name="cartOrderPaymentInstrumentService" ref="cartOrderPaymentInstrumentService"/>
	</bean>

	<bean id="returnAndExchangeServiceTarget" parent="returnAndExchangeServiceTargetTemplate"/>

	<!-- Checkout Services -->
	<bean id="checkoutService" parent="txProxyTemplate">
		<property name="target" ref="checkoutServiceDelegate"/>
	</bean>

	<!--  internal representation allows extension of checkoutEventHandlers -->
	<bean id="checkoutServiceDelegate" parent="abstractCheckoutServiceDelegate"/>

	<!-- !!!! DOCshippingServiceLevelService -->
	<bean id="abstractCheckoutServiceDelegate" abstract="true" class="com.elasticpath.service.shoppingcart.impl.CheckoutServiceImpl">
		<property name="shippingOptionService" ref="shippingOptionService"/>
		<property name="setupActionList" ref="setupActions"/>
		<property name="reversibleActionList" ref="reversibleActions"/>
		<property name="finalizeActionList" ref="finalizeActions"/>
		<property name="beanFactory" ref="coreBeanFactory"/>
		<property name="cartOrderService" ref="cartOrderService"/>
		<property name="postCaptureCheckoutService" ref="postCaptureCheckoutService"/>
	</bean>

	<bean id="abstractPostCaptureCheckoutServiceDelegate" abstract="true"
		  class="com.elasticpath.service.shoppingcart.actions.PostCaptureCheckoutServiceImpl">
		<property name="reversiblePostCaptureCheckoutActions" ref="reversiblePostHoldResolvedCaptureActions"/>
		<property name="reversibleActionList" ref="reversibleActions"/>
	</bean>

	<bean id="postCaptureCheckoutServiceDelegate" parent="abstractPostCaptureCheckoutServiceDelegate"/>

	<bean id="postCaptureCheckoutService" parent="txProxyTemplate">
		<property name="target" ref="postCaptureCheckoutServiceDelegate"/>
	</bean>

	<!-- Pre-capture Setup Checkout Actions -->
	<bean id="preCheckoutCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.PreCheckoutCheckoutAction">
		<property name="checkoutEventHandler" ref="checkoutEventHandler"/>
	</bean>

	<bean id="validationCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.ValidationCheckoutAction">
		<property name="purchaseCartValidationService" ref="purchaseCartValidationService"/>
	</bean>

	<bean id="updateCustomerCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.UpdateCustomerCheckoutAction">
		<property name="customerService" ref="customerService"/>
		<property name="shopperService" ref="shopperService"/>
	</bean>

	<extensibleList:create id="setupActionsParent"
						   overridableId="setupActions"
						   valueType="com.elasticpath.service.shoppingcart.actions.CheckoutAction">
		<ref bean="preCheckoutCheckoutAction" />
		<ref bean="validationCheckoutAction" />
		<ref bean="updateCustomerCheckoutAction" />
	</extensibleList:create>

	<!-- Pre-capture Reversible Checkout Actions -->
	<bean id="createNewOrderCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.CreateNewOrderCheckoutAction">
		<property name="orderFactory" ref="orderFactory"/>
		<property name="orderService" ref="orderService"/>
		<property name="eventMessageFactory" ref="eventMessageFactory"/>
		<property name="eventMessagePublisher" ref="orderEventMessagePublisher"/>
	</bean>

	<bean id="setOrderEventOriginatorCheckoutAction"
		  class="com.elasticpath.service.shoppingcart.actions.impl.SetOrderEventOriginatorCheckoutAction">
		<property name="eventOriginatorHelper" ref="eventOriginatorHelper"/>
	</bean>

	<bean id="populateOrderDataCheckoutAction"
		  class="com.elasticpath.service.shoppingcart.actions.impl.PopulateOrderDataCheckoutAction">
		<property name="xpfExtensionLookup" ref="xpfExtensionLookup"/>
		<property name="xpfShoppingCartConverter" ref="xpfShoppingCartConverter"/>
	</bean>

	<bean id="updateLimitedUsageNumbersCheckoutAction"
		  class="com.elasticpath.service.shoppingcart.actions.impl.UpdateLimitedUsageNumbersCheckoutAction">
		<property name="orderService" ref="orderService"/>
		<property name="couponUsageService" ref="couponUsageService"/>
	</bean>

	<bean id="updateOrderCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.UpdateOrderCheckoutAction">
		<property name="orderService" ref="orderService"/>
		<property name="checkoutEventHandler" ref="checkoutEventHandler"/>
	</bean>

	<bean id="createOrderPaymentInstrumentsCheckoutAction"
		  class="com.elasticpath.service.shoppingcart.actions.impl.CreateOrderPaymentInstrumentsCheckoutAction">
		<property name="orderPaymentInstrumentService" ref="orderPaymentInstrumentService"/>
		<property name="filteredPaymentInstrumentService" ref="filteredPaymentInstrumentService"/>
		<property name="orderPaymentApiCleanupService" ref="orderPaymentApiCleanupService"/>
		<property name="beanFactory" ref="coreBeanFactory"/>
	</bean>

	<bean id="authorizePaymentsCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.AuthorizePaymentsCheckoutAction">
		<property name="orderPaymentApiService" ref="orderPaymentApiService"/>
		<property name="orderPaymentService" ref="orderPaymentService"/>
	</bean>

	<bean id="evaluateOrderHoldStrategiesCheckoutAction"
		  class="com.elasticpath.service.shoppingcart.actions.impl.EvaluateOrderHoldStrategiesCheckoutAction">
		<property name="orderService" ref="orderService" />
		<property name="orderHoldService" ref="orderHoldService" />
		<property name="orderHoldStrategyXPFBridge" ref="orderHoldStrategyXPFBridge"/>
	</bean>

	<bean id="createNewOrderEventCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.CreateNewOrderEventCheckoutAction">
		<property name="eventMessageFactory" ref="eventMessageFactory"/>
		<property name="eventMessagePublisher" ref="orderEventMessagePublisher"/>
	</bean>

	<extensibleList:create id="reversibleActionsParent"
						   overridableId="reversibleActions"
						   valueType="com.elasticpath.service.shoppingcart.actions.ReversibleCheckoutAction">
		<ref bean="createNewOrderCheckoutAction" />
		<ref bean="setOrderEventOriginatorCheckoutAction"/>
		<ref bean="populateOrderDataCheckoutAction" />
		<ref bean="updateLimitedUsageNumbersCheckoutAction" />
		<ref bean="updateOrderCheckoutAction" />
		<ref bean="createOrderPaymentInstrumentsCheckoutAction"/>
		<ref bean="authorizePaymentsCheckoutAction" />
		<ref bean="evaluateOrderHoldStrategiesCheckoutAction"/>
		<ref bean="createNewOrderEventCheckoutAction" />
	</extensibleList:create>

	<!-- Pre-capture Finalize Checkout Actions -->
	<bean id="clearShoppingCartCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.ClearShoppingCartCheckoutAction">
		<property name="shoppingCartService" ref="shoppingCartService"/>
		<property name="cartOrderPaymentInstrumentService" ref="cartOrderPaymentInstrumentService"/>
	</bean>

	<bean id="postCheckoutCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.PostCheckoutCheckoutAction">
		<property name="checkoutEventHandler" ref="checkoutEventHandler"/>
	</bean>

	<bean id="logContextOverrideDateSetAction" class="com.elasticpath.service.shoppingcart.actions.impl.LogShoppingContextDateOverriddenAction">
		<property name="orderEventHelper" ref="orderEventHelper"/>
	</bean>

	<extensibleList:create id="finalizeActionsParent"
						   overridableId="finalizeActions"
						   valueType="com.elasticpath.service.shoppingcart.actions.FinalizeCheckoutAction">
		<ref bean="clearShoppingCartCheckoutAction" />
		<ref bean="postCheckoutCheckoutAction" />
		<ref bean="logContextOverrideDateSetAction" />
	</extensibleList:create>

	<!-- Post-capture Checkout Actions -->
	<bean id="processCouponCustomerAssignmentsCheckoutAction"
		  class="com.elasticpath.service.shoppingcart.actions.impl.ProcessCouponCustomerAssignmentsCheckoutAction">
		<property name="couponUsageService" ref="couponUsageService"/>
	</bean>

	<bean id="commitOrderTaxCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.CommitOrderTaxCheckoutAction">
		<property name="taxOperationService" ref="taxOperationService"/>
	</bean>

	<bean id="initiateFulfilmentCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.InitiateFulfilmentCheckoutAction">
		<property name="orderService" ref="orderService"/>
	</bean>

	<bean id="capturePaymentsCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.CapturePaymentsCheckoutAction">
		<property name="orderService" ref="orderService"/>
	</bean>

	<bean id="createGiftCertificatesCheckoutAction" class="com.elasticpath.service.shoppingcart.actions.impl.CreateGiftCertificatesCheckoutAction">
		<property name="giftCertificateService" ref="giftCertificateService"/>
		<property name="giftCertificateFactory" ref="giftCertificateFactory"/>
		<property name="eventMessageFactory" ref="eventMessageFactory"/>
		<property name="eventMessagePublisher" ref="giftCertificateEventMessagePublisher"/>
		<property name="productSkuLookup" ref="productSkuLookup"/>
		<property name="pricingSnapshotService" ref="pricingSnapshotService"/>
		<property name="storeService" ref="storeService"/>
		<property name="orderService" ref="orderService"/>
	</bean>

	<extensibleList:create id="reversiblePostHoldResolvedCaptureActionsParent"
						   overridableId="reversiblePostHoldResolvedCaptureActions"
						   valueType="com.elasticpath.service.shoppingcart.actions.ReversiblePostCaptureCheckoutAction">
		<ref bean="processCouponCustomerAssignmentsCheckoutAction"/>
		<ref bean="commitOrderTaxCheckoutAction" />
		<ref bean="initiateFulfilmentCheckoutAction" />
		<ref bean="capturePaymentsCheckoutAction" />
		<ref bean="createGiftCertificatesCheckoutAction" />
	</extensibleList:create>

	<settings:setting id="holdStrategyProvider" path="COMMERCE/SYSTEM/ONHOLD/holdAllOrdersForStore"/>
	<settings:setting id="holdPermissionProvider" path="COMMERCE/SYSTEM/ONHOLD/holdAllOrdersForStoreResolvePermission"/>

	<util:constant id="physicalShipmentType" static-field="com.elasticpath.domain.shipping.ShipmentType.PHYSICAL"/>
	<util:constant id="electronicShipmentType" static-field="com.elasticpath.domain.shipping.ShipmentType.ELECTRONIC"/>

	<bean id="orderShipmentHandlerFactory" class="com.elasticpath.commons.handlers.order.impl.OrderShipmentHandlerFactoryImpl">
		<property name="orderShipmentHandlerMap">
			<map>
				<entry key-ref="physicalShipmentType" value-ref="physcialOrderShipmentHandler"/>
				<entry key-ref="electronicShipmentType" value-ref="electronicOrderShipmentHandler"/>
			</map>
		</property>
	</bean>

	<bean id="physcialOrderShipmentHandler" class="com.elasticpath.commons.handlers.order.impl.PhysicalOrderShipmentHandler">
		<property name="productSkuLookup" ref="productSkuLookup"/>
	</bean>

	<bean id="electronicOrderShipmentHandler" class="com.elasticpath.commons.handlers.order.impl.ElectronicOrderShipmentHandler">
		<property name="productSkuLookup" ref="productSkuLookup"/>
	</bean>
</beans>
