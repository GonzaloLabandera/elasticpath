<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns="http://www.springframework.org/schema/beans"
		xsi:schemaLocation="
				http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<bean id="atomikosUserTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
		  init-method="init" destroy-method="shutdownForce">
		<constructor-arg>
			<props>
				<prop key="com.atomikos.icatch.log_base_dir">${ep.atomikos.log.base.dir:./}</prop>
			</props>
		</constructor-arg>
	</bean>

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		  init-method="init" destroy-method="close" depends-on="atomikosUserTransactionService">
		<property name="startupTransactionService" value="false"/>
		<!--  force transactions termination on close -->
		<property name="forceShutdown" value="false"/>
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="atomikosUserTransactionService">
		<!-- This property defines the programmatic transaction timeout.  This timeout is used when calling JpaSessionImpl.beginTransaction().
		     To override at the timeout at runtime, provide the system property "ep.atomikos.programmatic.transaction.timeout.seconds".  The value
		     is the number of seconds for the timeout.  For example, "-Dep.atomikos.programmatic.transaction.timeout.seconds=600"

		     NOTES:
		     1. This timeout value is not used for the implicit spring transactions.  That timeout is configured via the
		     "com.atomikos.icatch.default_jta_timeout" in transactions.properties.

		     2. If you change this value, you will likely need to override the setting com.atomikos.icatch.max_timeout to allow for an
		        extended timeout.  This timeout can be provided in a jta.properties file or via a system property.

		 -->
		<property name="transactionTimeout" value="${ep.atomikos.programmatic.transaction.timeout.seconds:300}"/>
	</bean>

	<bean id="atomikosJdbcDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		  init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="atomikosJdbcDataSource"/>
		<property name="xaDataSource" ref="xaDataSource"/>
		<property name="poolSize" value="${ep.atomikos.jdbc.data.source.poolSize:30}"/>
		<property name="maxLifetime" value="${ep.atomikos.jdbc.data.source.maxLifetime:28000}"/>
	</bean>

	<bean id="atomikosJmsConnectionFactory" class="com.elasticpath.jta.atomikos.AtomikosConnectionFactoryInterceptor"
		  init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="atomikosJmsConnectionFactory"/>
		<property name="localTransactionMode" value="false"/>
		<property name="xaConnectionFactory" ref="xaJmsConnectionFactory"/>
		<property name="poolSize" value="${ep.atomikos.jms.connection.factory.poolSize:100}"/>
	</bean>

</beans>
