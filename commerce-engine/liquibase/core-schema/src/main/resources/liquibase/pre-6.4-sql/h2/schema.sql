-----------------------------------------------------------------------------
-- JPA_GENERATED_KEYS
-----------------------------------------------------------------------------

CREATE TABLE JPA_GENERATED_KEYS
(
    ID VARCHAR(30) NOT NULL,
    LAST_VALUE BIGINT);


-----------------------------------------------------------------------------
-- TDIGITALASSETS
-----------------------------------------------------------------------------

CREATE TABLE TDIGITALASSETS
(
    UIDPK BIGINT NOT NULL,
    FILE_NAME VARCHAR(255) NOT NULL,
    EXPIRY_DAYS INTEGER,
    MAX_DOWNLOAD_TIMES INTEGER,
    PRIMARY KEY(UIDPK));

CREATE  INDEX I_DA_FILE_NAME ON TDIGITALASSETS (FILE_NAME);
-----------------------------------------------------------------------------
-- TTAXCODE
-----------------------------------------------------------------------------

CREATE TABLE TTAXCODE
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    CODE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID),
    UNIQUE (CODE));


-----------------------------------------------------------------------------
-- TTAXJURISDICTION
-----------------------------------------------------------------------------

CREATE TABLE TTAXJURISDICTION
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    REGION_CODE VARCHAR(255) NOT NULL,
    PRICE_CALCULATION_METH INTEGER default 0,
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TTAXCATEGORY
-----------------------------------------------------------------------------

CREATE TABLE TTAXCATEGORY
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    FIELD_MATCH_TYPE INTEGER,
    TAX_JURISDICTION_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (TAX_JURISDICTION_UID) REFERENCES TTAXJURISDICTION (UIDPK)
    ,
    UNIQUE (GUID));

CREATE  INDEX I_TAXCAT_TAXJUR_UID ON TTAXCATEGORY (TAX_JURISDICTION_UID);
-----------------------------------------------------------------------------
-- TTAXREGION
-----------------------------------------------------------------------------

CREATE TABLE TTAXREGION
(
    UIDPK BIGINT NOT NULL,
    REGION_NAME VARCHAR(255) NOT NULL,
    TAX_CATEGORY_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (TAX_CATEGORY_UID) REFERENCES TTAXCATEGORY (UIDPK)
    );

CREATE  INDEX I_TAXREG_TAXCAT_UID ON TTAXREGION (TAX_CATEGORY_UID);
-----------------------------------------------------------------------------
-- TTAXVALUE
-----------------------------------------------------------------------------

CREATE TABLE TTAXVALUE
(
    UIDPK BIGINT NOT NULL,
    TAX_REGION_UID BIGINT,
    TAX_CODE_UID BIGINT,
    VALUE DECIMAL(19,4),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (TAX_REGION_UID) REFERENCES TTAXREGION (UIDPK)
    ,
    FOREIGN KEY (TAX_CODE_UID) REFERENCES TTAXCODE (UIDPK)
    );

CREATE  INDEX I_TAXVAL_TAXREG_UID ON TTAXVALUE (TAX_REGION_UID);
CREATE  INDEX I_TAXVAL_TAXCODE_UID ON TTAXVALUE (TAX_CODE_UID);
-----------------------------------------------------------------------------
-- TCATALOG
-----------------------------------------------------------------------------

CREATE TABLE TCATALOG
(
    UIDPK BIGINT NOT NULL,
    MASTER INTEGER NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DEFAULT_LOCALE VARCHAR(20) NOT NULL,
    CATALOG_CODE VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (CATALOG_CODE));


-----------------------------------------------------------------------------
-- TATTRIBUTE
-----------------------------------------------------------------------------

CREATE TABLE TATTRIBUTE
(
    UIDPK BIGINT NOT NULL,
    ATTRIBUTE_KEY VARCHAR(255) NOT NULL,
    LOCALE_DEPENDANT INTEGER default 0 NOT NULL,
    ATTRIBUTE_TYPE INTEGER NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    REQUIRED INTEGER default 0,
    VALUE_LOOKUP_ENABLED INTEGER default 0,
    MULTI_VALUE_ENABLED INTEGER default 0,
    ATTRIBUTE_USAGE INTEGER NOT NULL,
    SYSTEM INTEGER default 0,
    CATALOG_UID BIGINT,
    ATTR_GLOBAL INTEGER NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (ATTRIBUTE_KEY));


-----------------------------------------------------------------------------
-- TSETTINGDEFINITION
-----------------------------------------------------------------------------

CREATE TABLE TSETTINGDEFINITION
(
    UIDPK BIGINT NOT NULL,
    PATH VARCHAR(255) NOT NULL,
    DEFAULT_VALUE CLOB,
    VALUE_TYPE VARCHAR(255) NOT NULL,
    DESCRIPTION CLOB,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    MAX_OVERRIDE_VALUES BIGINT default 0,
    PRIMARY KEY(UIDPK),
    UNIQUE (PATH));


-----------------------------------------------------------------------------
-- TSETTINGMETADATA
-----------------------------------------------------------------------------

CREATE TABLE TSETTINGMETADATA
(
    UIDPK BIGINT NOT NULL,
    SETTING_DEFINITION_UID BIGINT,
    METADATA_KEY VARCHAR(255) NOT NULL,
    VALUE VARCHAR(2000),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (SETTING_DEFINITION_UID) REFERENCES TSETTINGDEFINITION (UIDPK)
    );

CREATE  INDEX I_SETTINGMETADATA_DEF_UID ON TSETTINGMETADATA (SETTING_DEFINITION_UID);
-----------------------------------------------------------------------------
-- TSETTINGVALUE
-----------------------------------------------------------------------------

CREATE TABLE TSETTINGVALUE
(
    UIDPK BIGINT NOT NULL,
    SETTING_DEFINITION_UID BIGINT,
    CONTEXT VARCHAR(255),
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    CONTEXT_VALUE CLOB,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (SETTING_DEFINITION_UID) REFERENCES TSETTINGDEFINITION (UIDPK)
    );


-----------------------------------------------------------------------------
-- TSTORE
-----------------------------------------------------------------------------

CREATE TABLE TSTORE
(
    UIDPK BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    STORECODE VARCHAR(64) NOT NULL,
    DESCRIPTION CLOB,
    URL VARCHAR(255),
    ENABLED INTEGER default 0 NOT NULL,
    DEFAULT_LOCALE VARCHAR(20),
    DEFAULT_CURRENCY CHAR(3),
    SUB_COUNTRY VARCHAR(200),
    COUNTRY VARCHAR(200) NOT NULL,
    TIMEZONE VARCHAR(50) NOT NULL,
    STORE_TYPE CHAR(3) NOT NULL,
    CONTENT_ENCODING VARCHAR(20) default 'utf-8',
    CREDIT_CARD_CVV2_ENABLED INTEGER default 0 NOT NULL,
    CC_PAYER_AUTH_ENABLED INTEGER default 0 NOT NULL,
    DISPLAY_OUT_OF_STOCK INTEGER default 0 NOT NULL,
    STORE_FULL_CREDIT_CARDS INTEGER default 1 NOT NULL,
    EMAIL_SENDER_NAME VARCHAR(255),
    EMAIL_SENDER_ADDRESS VARCHAR(255),
    STORE_ADMIN_EMAIL VARCHAR(255),
    CATALOG_UID BIGINT,
    STORE_STATE INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    UNIQUE (NAME, STORECODE),
    UNIQUE (STORECODE));

CREATE  INDEX I_STORE_CATALOG_UID ON TSTORE (CATALOG_UID);
-----------------------------------------------------------------------------
-- TCUSTOMER
-----------------------------------------------------------------------------

CREATE TABLE TCUSTOMER
(
    UIDPK BIGINT NOT NULL,
    USER_ID VARCHAR(255) NOT NULL,
    PREF_BILL_ADDRESS_UID BIGINT,
    PREF_SHIP_ADDRESS_UID BIGINT,
    CREATION_DATE TIMESTAMP NOT NULL,
    LAST_EDIT_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    STATUS INTEGER NOT NULL,
    AUTHENTICATION_UID BIGINT,
    STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    UNIQUE (GUID));

CREATE  INDEX I_CUST_STORE_UID ON TCUSTOMER (STORE_UID);
CREATE  INDEX I_C_USERID ON TCUSTOMER (USER_ID);
CREATE  INDEX I_CUST_CR_DATE ON TCUSTOMER (CREATION_DATE);
-----------------------------------------------------------------------------
-- TCUSTOMERAUTHENTICATION
-----------------------------------------------------------------------------

CREATE TABLE TCUSTOMERAUTHENTICATION
(
    UIDPK BIGINT NOT NULL,
    PASSWORD VARCHAR(255),
    PRIMARY KEY(UIDPK));


-----------------------------------------------------------------------------
-- TCUSTOMERPROFILEVALUE
-----------------------------------------------------------------------------

CREATE TABLE TCUSTOMERPROFILEVALUE
(
    UIDPK BIGINT NOT NULL,
    ATTRIBUTE_UID BIGINT NOT NULL,
    ATTRIBUTE_TYPE INTEGER NOT NULL,
    LOCALIZED_ATTRIBUTE_KEY VARCHAR(255) NOT NULL,
    SHORT_TEXT_VALUE VARCHAR(255),
    LONG_TEXT_VALUE CLOB,
    INTEGER_VALUE INTEGER,
    DECIMAL_VALUE DECIMAL(19,2),
    BOOLEAN_VALUE INTEGER default 0,
    DATE_VALUE TIMESTAMP,
    CUSTOMER_UID BIGINT,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    ,
    FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    );

CREATE  INDEX I_CPV_ATTR_UID ON TCUSTOMERPROFILEVALUE (ATTRIBUTE_UID);
CREATE  INDEX I_CPV_CUID_ATTKEY ON TCUSTOMERPROFILEVALUE (CUSTOMER_UID, LOCALIZED_ATTRIBUTE_KEY);
CREATE  INDEX I_CPV_STV_ATTVALUE ON TCUSTOMERPROFILEVALUE (SHORT_TEXT_VALUE);
-----------------------------------------------------------------------------
-- TCUSTOMERDELETED
-----------------------------------------------------------------------------

CREATE TABLE TCUSTOMERDELETED
(
    UIDPK BIGINT NOT NULL,
    CUSTOMER_UID BIGINT NOT NULL,
    DELETED_DATE TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE  INDEX I_CUD_DELETED_DATE ON TCUSTOMERDELETED (DELETED_DATE);
-----------------------------------------------------------------------------
-- TADDRESS
-----------------------------------------------------------------------------

CREATE TABLE TADDRESS
(
    UIDPK BIGINT NOT NULL,
    LAST_NAME VARCHAR(100),
    FIRST_NAME VARCHAR(100),
    PHONE_NUMBER VARCHAR(50),
    FAX_NUMBER VARCHAR(50),
    STREET_1 VARCHAR(200),
    STREET_2 VARCHAR(200),
    CITY VARCHAR(200),
    SUB_COUNTRY VARCHAR(200),
    ZIP_POSTAL_CODE VARCHAR(50),
    COUNTRY VARCHAR(200),
    COMMERCIAL INTEGER default 0,
    GUID VARCHAR(64) NOT NULL,
    CUSTOMER_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    ,
    UNIQUE (GUID));

CREATE  INDEX I_ADDR_C_UID ON TADDRESS (CUSTOMER_UID);
-----------------------------------------------------------------------------
-- TCATALOGSUPPORTEDLOCALE
-----------------------------------------------------------------------------

CREATE TABLE TCATALOGSUPPORTEDLOCALE
(
    UIDPK BIGINT NOT NULL,
    LOCALE VARCHAR(255) NOT NULL,
    CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    );

CREATE  INDEX I_CATSUPLOC_CATALOG_UID ON TCATALOGSUPPORTEDLOCALE (CATALOG_UID);
-----------------------------------------------------------------------------
-- TCATEGORYTYPE
-----------------------------------------------------------------------------

CREATE TABLE TCATEGORYTYPE
(
    UIDPK BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    TEMPLATE VARCHAR(255) NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    UNIQUE (NAME),
    UNIQUE (GUID));

CREATE  INDEX I_CATTYPE_CATALOG_UID ON TCATEGORYTYPE (CATALOG_UID);
-----------------------------------------------------------------------------
-- TCATEGORY
-----------------------------------------------------------------------------

CREATE TABLE TCATEGORY
(
    UIDPK BIGINT NOT NULL,
    TYPE VARCHAR(255) NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    PARENT_CATEGORY_UID BIGINT,
    ORDERING INTEGER,
    CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    FOREIGN KEY (PARENT_CATEGORY_UID) REFERENCES TCATEGORY (UIDPK)
    );

CREATE  INDEX I_CAT_CATALOG_UID ON TCATEGORY (CATALOG_UID);
CREATE  INDEX I_CAT_PARENT_UID ON TCATEGORY (PARENT_CATEGORY_UID);
CREATE  INDEX I_C_MODIFY_DATE ON TCATEGORY (LAST_MODIFIED_DATE);
-----------------------------------------------------------------------------
-- TMASTERCATEGORY
-----------------------------------------------------------------------------

CREATE TABLE TMASTERCATEGORY
(
    UIDPK BIGINT NOT NULL,
    START_DATE TIMESTAMP NOT NULL,
    END_DATE TIMESTAMP,
    HIDDEN INTEGER default 0,
    CATEGORY_TYPE_UID BIGINT NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    VIRTUAL INTEGER,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATEGORY_TYPE_UID) REFERENCES TCATEGORYTYPE (UIDPK)
    ,
    UNIQUE (CODE));

CREATE  INDEX I_CAT_TYPE_UID ON TMASTERCATEGORY (CATEGORY_TYPE_UID);
CREATE  INDEX I_C_SE_DATE ON TMASTERCATEGORY (START_DATE, END_DATE);
-----------------------------------------------------------------------------
-- TLINKEDCATEGORY
-----------------------------------------------------------------------------

CREATE TABLE TLINKEDCATEGORY
(
    UIDPK BIGINT NOT NULL,
    MASTER_CATEGORY_UID BIGINT,
    INCLUDE INTEGER default 1,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (MASTER_CATEGORY_UID) REFERENCES TCATEGORY (UIDPK)
    );

CREATE  INDEX I_LCAT_MCAT_UID ON TLINKEDCATEGORY (MASTER_CATEGORY_UID);
-----------------------------------------------------------------------------
-- TCATEGORYDELETED
-----------------------------------------------------------------------------

CREATE TABLE TCATEGORYDELETED
(
    UIDPK BIGINT NOT NULL,
    CATEGORY_UID BIGINT NOT NULL,
    DELETED_DATE TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE  INDEX I_CAD_DELETED_DATE ON TCATEGORYDELETED (DELETED_DATE);
-----------------------------------------------------------------------------
-- TCATEGORYATTRIBUTEVALUE
-----------------------------------------------------------------------------

CREATE TABLE TCATEGORYATTRIBUTEVALUE
(
    UIDPK BIGINT NOT NULL,
    ATTRIBUTE_UID BIGINT NOT NULL,
    ATTRIBUTE_TYPE INTEGER NOT NULL,
    LOCALIZED_ATTRIBUTE_KEY VARCHAR(255) NOT NULL,
    SHORT_TEXT_VALUE VARCHAR(255),
    LONG_TEXT_VALUE CLOB,
    INTEGER_VALUE INTEGER,
    DECIMAL_VALUE DECIMAL(19,2),
    BOOLEAN_VALUE INTEGER default 0,
    DATE_VALUE TIMESTAMP,
    CATEGORY_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    );

CREATE  INDEX I_CAV_ATTR_UID ON TCATEGORYATTRIBUTEVALUE (ATTRIBUTE_UID);
CREATE  INDEX I_CAV_CAT_UID ON TCATEGORYATTRIBUTEVALUE (CATEGORY_UID);
-----------------------------------------------------------------------------
-- TCATEGORYLDF
-----------------------------------------------------------------------------

CREATE TABLE TCATEGORYLDF
(
    UIDPK BIGINT NOT NULL,
    CATEGORY_UID BIGINT NOT NULL,
    URL VARCHAR(255),
    KEY_WORDS VARCHAR(255),
    DESCRIPTION VARCHAR(255),
    TITLE VARCHAR(255),
    DISPLAY_NAME VARCHAR(255),
    LOCALE VARCHAR(20) NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE  INDEX I_CLDF_CAT_UID ON TCATEGORYLDF (CATEGORY_UID);
CREATE  INDEX I_CLDF_LOCALE_NAME ON TCATEGORYLDF (LOCALE, DISPLAY_NAME);
-----------------------------------------------------------------------------
-- TCATEGORYTYPEATTRIBUTE
-----------------------------------------------------------------------------

CREATE TABLE TCATEGORYTYPEATTRIBUTE
(
    UIDPK BIGINT NOT NULL,
    ORDERING INTEGER,
    ATTRIBUTE_UID BIGINT NOT NULL,
    CATEGORY_TYPE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    ,
    FOREIGN KEY (CATEGORY_TYPE_UID) REFERENCES TCATEGORYTYPE (UIDPK)
    );

CREATE  INDEX I_CTA_ATTR_UID ON TCATEGORYTYPEATTRIBUTE (ATTRIBUTE_UID);
CREATE  INDEX I_CTA_TYPE_UID ON TCATEGORYTYPEATTRIBUTE (CATEGORY_TYPE_UID);
-----------------------------------------------------------------------------
-- TCMUSER
-----------------------------------------------------------------------------

CREATE TABLE TCMUSER
(
    UIDPK BIGINT NOT NULL,
    USER_NAME VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    FIRST_NAME VARCHAR(100),
    LAST_NAME VARCHAR(100),
    PASSWORD VARCHAR(255) NOT NULL,
    CREATION_DATE TIMESTAMP NOT NULL,
    LAST_LOGIN_DATE TIMESTAMP,
    LAST_CHANGED_PASSWORD_DATE TIMESTAMP,
    FAILED_LOGIN_ATTEMPTS INTEGER default 0 NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    STATUS INTEGER default 4 NOT NULL,
    ALL_WAREHOUSE_ACCESS INTEGER default 1 NOT NULL,
    ALL_CATALOG_ACCESS INTEGER default 1 NOT NULL,
    ALL_STORE_ACCESS INTEGER default 1 NOT NULL,
    ALL_PRICELIST_ACCESS INTEGER default 1 NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (USER_NAME),
    UNIQUE (EMAIL),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TPASSWORDHISTORY
-----------------------------------------------------------------------------

CREATE TABLE TPASSWORDHISTORY
(
    UIDPK BIGINT NOT NULL,
    OLD_PASSWORD VARCHAR(255) NOT NULL,
    EXPIRATION_DATE TIMESTAMP NOT NULL,
    CM_USER_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CM_USER_UID) REFERENCES TCMUSER (UIDPK)
    );


-----------------------------------------------------------------------------
-- TUSERROLE
-----------------------------------------------------------------------------

CREATE TABLE TUSERROLE
(
    UIDPK BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (NAME),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TCMUSERROLEX
-----------------------------------------------------------------------------

CREATE TABLE TCMUSERROLEX
(
    CM_USER_UID BIGINT NOT NULL,
    USER_ROLE_UID BIGINT NOT NULL,
    PRIMARY KEY(CM_USER_UID,USER_ROLE_UID),
    FOREIGN KEY (USER_ROLE_UID) REFERENCES TUSERROLE (UIDPK)
    ,
    FOREIGN KEY (CM_USER_UID) REFERENCES TCMUSER (UIDPK)
    );

CREATE  INDEX I_CMUSER_ROLE_UID ON TCMUSERROLEX (USER_ROLE_UID);
CREATE  INDEX I_CMUSER_USER_UID ON TCMUSERROLEX (CM_USER_UID);
-----------------------------------------------------------------------------
-- TSHOPPER
-----------------------------------------------------------------------------

CREATE TABLE TSHOPPER
(
    UIDPK BIGINT NOT NULL,
    TYPE VARCHAR(255) default 'SHOPPER' NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    CUSTOMER_GUID VARCHAR(64),
    STORECODE VARCHAR(64),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CUSTOMER_GUID) REFERENCES TCUSTOMER (GUID)
    ,
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TCUSTOMERGROUP
-----------------------------------------------------------------------------

CREATE TABLE TCUSTOMERGROUP
(
    UIDPK BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (NAME),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TCUSTOMERGROUPROLEX
-----------------------------------------------------------------------------

CREATE TABLE TCUSTOMERGROUPROLEX
(
    UIDPK BIGINT NOT NULL,
    CUSTOMER_GROUP_UID BIGINT NOT NULL,
    CUSTOMER_ROLE VARCHAR(255),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CUSTOMER_GROUP_UID) REFERENCES TCUSTOMERGROUP (UIDPK)
    );

CREATE  INDEX I_CGRX_GROUP_UID ON TCUSTOMERGROUPROLEX (CUSTOMER_GROUP_UID);
-----------------------------------------------------------------------------
-- TCUSTOMERGROUPX
-----------------------------------------------------------------------------

CREATE TABLE TCUSTOMERGROUPX
(
    CUSTOMER_UID BIGINT NOT NULL,
    CUSTOMERGROUP_UID BIGINT NOT NULL,
    FOREIGN KEY (CUSTOMERGROUP_UID) REFERENCES TCUSTOMERGROUP (UIDPK)
    ,
    FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    );

CREATE  INDEX I_CGX_GROUP_UID ON TCUSTOMERGROUPX (CUSTOMERGROUP_UID);
CREATE  INDEX I_CGX_CUSTOMER_UID ON TCUSTOMERGROUPX (CUSTOMER_UID);
-----------------------------------------------------------------------------
-- TCUSTOMERSESSION
-----------------------------------------------------------------------------

CREATE TABLE TCUSTOMERSESSION
(
    UIDPK BIGINT NOT NULL,
    CREATION_DATE TIMESTAMP NOT NULL,
    LAST_ACCESSED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    SHOPPER_UID BIGINT,
    LOCALE VARCHAR(255),
    CURRENCY VARCHAR(3),
    GUID VARCHAR(64) NOT NULL,
    IP_ADDRESS VARCHAR(255),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (SHOPPER_UID) REFERENCES TSHOPPER (UIDPK)
    ,
    UNIQUE (GUID));

CREATE  INDEX I_CS_SHOPPER_UID ON TCUSTOMERSESSION (SHOPPER_UID);
CREATE  INDEX I_CS_ACS_DATE ON TCUSTOMERSESSION (LAST_ACCESSED_DATE);
CREATE  INDEX I_CS_CRT_DATE ON TCUSTOMERSESSION (CREATION_DATE);
-----------------------------------------------------------------------------
-- TCUSTOMERCREDITCARD
-----------------------------------------------------------------------------

CREATE TABLE TCUSTOMERCREDITCARD
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    CARD_TYPE VARCHAR(50) NOT NULL,
    CARD_HOLDER_NAME VARCHAR(100) NOT NULL,
    CARD_NUMBER VARCHAR(255) NOT NULL,
    EXPIRY_YEAR VARCHAR(4) NOT NULL,
    EXPIRY_MONTH VARCHAR(2) NOT NULL,
    START_YEAR VARCHAR(4),
    START_MONTH VARCHAR(2),
    ISSUE_NUMBER INTEGER,
    DEFAULT_CARD INTEGER,
    CUSTOMER_UID BIGINT NOT NULL,
    BILLING_ADDRESS_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    ,
    FOREIGN KEY (BILLING_ADDRESS_UID) REFERENCES TADDRESS (UIDPK)
    ,
    UNIQUE (GUID));

CREATE  INDEX I_CCC_CUSTOMER_UID ON TCUSTOMERCREDITCARD (CUSTOMER_UID);
CREATE  INDEX I_CCC_BA_UID ON TCUSTOMERCREDITCARD (BILLING_ADDRESS_UID);
-----------------------------------------------------------------------------
-- TWAREHOUSEADDRESS
-----------------------------------------------------------------------------

CREATE TABLE TWAREHOUSEADDRESS
(
    UIDPK BIGINT NOT NULL,
    STREET_1 VARCHAR(200) NOT NULL,
    STREET_2 VARCHAR(200),
    CITY VARCHAR(200) NOT NULL,
    SUB_COUNTRY VARCHAR(200),
    ZIP_POSTAL_CODE VARCHAR(50) NOT NULL,
    COUNTRY VARCHAR(200) NOT NULL,
    PRIMARY KEY(UIDPK));


-----------------------------------------------------------------------------
-- TWAREHOUSE
-----------------------------------------------------------------------------

CREATE TABLE TWAREHOUSE
(
    UIDPK BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    PICK_DELAY INTEGER,
    ADDRESS_UID BIGINT,
    CODE VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ADDRESS_UID) REFERENCES TWAREHOUSEADDRESS (UIDPK)
    ,
    UNIQUE (CODE));

CREATE  INDEX I_WAREHOUSE_ADDRESS_UID ON TWAREHOUSE (ADDRESS_UID);
-----------------------------------------------------------------------------
-- TIMPORTJOB
-----------------------------------------------------------------------------

CREATE TABLE TIMPORTJOB
(
    UIDPK BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    CSV_FILE_NAME VARCHAR(255) NOT NULL,
    COL_DELIMETER CHAR(1),
    TEXT_QUALIFIER CHAR(1),
    DATA_TYPE_NAME VARCHAR(255) NOT NULL,
    IMPORT_TYPE INTEGER NOT NULL,
    MAX_ALLOW_ERRORS INTEGER NOT NULL,
    CATALOG_UID BIGINT,
    STORE_UID BIGINT,
    WAREHOUSE_UID BIGINT,
    DEPENDENT_OBJ_GUID VARCHAR(64),
    GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (WAREHOUSE_UID) REFERENCES TWAREHOUSE (UIDPK)
    ,
    UNIQUE (NAME),
    UNIQUE (GUID));

CREATE  INDEX I_IMPORTJOB_CATALOG_UID ON TIMPORTJOB (CATALOG_UID);
CREATE  INDEX I_IMPORTJOB_STORE_UID ON TIMPORTJOB (STORE_UID);
CREATE  INDEX I_IMPORTJOB_WAREHOUSE_UID ON TIMPORTJOB (WAREHOUSE_UID);
-----------------------------------------------------------------------------
-- TIMPORTMAPPINGS
-----------------------------------------------------------------------------

CREATE TABLE TIMPORTMAPPINGS
(
    UIDPK BIGINT NOT NULL,
    IMPORT_JOB_UID BIGINT NOT NULL,
    COL_NUMBER INTEGER NOT NULL,
    IMPORT_FIELD_NAME VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (IMPORT_JOB_UID) REFERENCES TIMPORTJOB (UIDPK)
    );

CREATE  INDEX I_IMAP_JOB_UID ON TIMPORTMAPPINGS (IMPORT_JOB_UID);
-----------------------------------------------------------------------------
-- TORDERADDRESS
-----------------------------------------------------------------------------

CREATE TABLE TORDERADDRESS
(
    UIDPK BIGINT NOT NULL,
    LAST_NAME VARCHAR(100),
    FIRST_NAME VARCHAR(100),
    PHONE_NUMBER VARCHAR(50),
    FAX_NUMBER VARCHAR(50),
    STREET_1 VARCHAR(200),
    STREET_2 VARCHAR(200),
    CITY VARCHAR(200),
    SUB_COUNTRY VARCHAR(200),
    ZIP_POSTAL_CODE VARCHAR(50),
    COUNTRY VARCHAR(200),
    COMMERCIAL INTEGER default 0,
    GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID));

CREATE  INDEX I_ORDERADDRESS_FIRST_NAME ON TORDERADDRESS (FIRST_NAME );
CREATE  INDEX I_ORDERADDRESS_LAST_NAME ON TORDERADDRESS (LAST_NAME );
CREATE  INDEX I_ORDERADDRESS_ZIP_POSTAL_CODE ON TORDERADDRESS (ZIP_POSTAL_CODE );
CREATE  INDEX I_ORDERADDRESS_PHONE_NUMBER ON TORDERADDRESS (PHONE_NUMBER );
-----------------------------------------------------------------------------
-- TORDER
-----------------------------------------------------------------------------

CREATE TABLE TORDER
(
    UIDPK BIGINT NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    IP_ADDRESS VARCHAR(255),
    ORDER_BILLING_ADDRESS_UID BIGINT,
    TOTAL DECIMAL(19,2),
    STATUS VARCHAR(20),
    ORDER_NUMBER VARCHAR(64) NOT NULL,
    EXTERNAL_ORDER_NUMBER VARCHAR(64),
    CUSTOMER_UID BIGINT,
    LOCALE VARCHAR(5) NOT NULL,
    CURRENCY VARCHAR(3),
    STORE_UID BIGINT,
    CREATED_BY BIGINT,
    ORDER_SOURCE VARCHAR(100),
    EXCHANGE_ORDER INTEGER default 0,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (ORDER_BILLING_ADDRESS_UID) REFERENCES TORDERADDRESS (UIDPK)
    ,
    FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    ,
    UNIQUE (ORDER_NUMBER));

CREATE  INDEX I_O_STORE_UID ON TORDER (STORE_UID);
CREATE  INDEX I_O_OBA_UID ON TORDER (ORDER_BILLING_ADDRESS_UID);
CREATE  INDEX I_O_CUSTOMER_UID ON TORDER (CUSTOMER_UID);
CREATE  INDEX I_O_MODIFY_DATE ON TORDER (LAST_MODIFIED_DATE);
CREATE  INDEX I_O_CREATED_DATE ON TORDER (CREATED_DATE);
CREATE  INDEX I_O_STATUS ON TORDER (STATUS);
CREATE  INDEX I_O_TOTAL ON TORDER (CURRENCY, TOTAL);
-----------------------------------------------------------------------------
-- TORDERNUMBERGENERATOR
-----------------------------------------------------------------------------

CREATE TABLE TORDERNUMBERGENERATOR
(
    UIDPK BIGINT default 1 NOT NULL,
    NEXT_ORDER_NUMBER VARCHAR(100) NOT NULL,
    PRIMARY KEY(UIDPK));


-----------------------------------------------------------------------------
-- TORDERLOCK
-----------------------------------------------------------------------------

CREATE TABLE TORDERLOCK
(
    UIDPK BIGINT NOT NULL,
    ORDER_UID BIGINT NOT NULL,
    USER_UID BIGINT NOT NULL,
    CREATED_DATE BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    FOREIGN KEY (USER_UID) REFERENCES TCMUSER (UIDPK)
    ,
    UNIQUE (ORDER_UID));

CREATE  INDEX I_ORDERLOCK_USER_UID ON TORDERLOCK (USER_UID);
-----------------------------------------------------------------------------
-- TORDERAUDIT
-----------------------------------------------------------------------------

CREATE TABLE TORDERAUDIT
(
    UIDPK BIGINT NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    CREATED_BY BIGINT,
    DETAIL CLOB,
    ORDER_UID BIGINT,
    ORIGINATOR_TYPE VARCHAR(30) NOT NULL,
    TITLE VARCHAR(255) NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    FOREIGN KEY (CREATED_BY) REFERENCES TCMUSER (UIDPK)
    );

CREATE  INDEX I_ON_ORDER_UID ON TORDERAUDIT (ORDER_UID);
CREATE  INDEX I_ON_USER_UID ON TORDERAUDIT (CREATED_BY);
-----------------------------------------------------------------------------
-- TGIFTCERTIFICATE
-----------------------------------------------------------------------------

CREATE TABLE TGIFTCERTIFICATE
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    GIFT_CERTIFICATE_CODE VARCHAR(64),
    CREATED_DATE TIMESTAMP NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    RECIPIENT_NAME VARCHAR(255),
    SENDER_NAME VARCHAR(255),
    MESSAGE VARCHAR(255),
    THEME VARCHAR(255),
    PURCHASE_AMOUNT DECIMAL(19,2),
    CURRENCY VARCHAR(255),
    RECEPIENT_EMAIL VARCHAR(255),
    CUSTOMER_UID BIGINT,
    STORE_UID BIGINT NOT NULL,
    ORDER_GUID VARCHAR(64),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    ,
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    );

CREATE  INDEX I_GCERT_CUSTOMER_UID ON TGIFTCERTIFICATE (CUSTOMER_UID);
CREATE  INDEX I_GCERT_STORE_UID ON TGIFTCERTIFICATE (STORE_UID);
CREATE  INDEX I_P_GCERT_CODE ON TGIFTCERTIFICATE (GIFT_CERTIFICATE_CODE);
CREATE  INDEX I_ORDER_GUID ON TGIFTCERTIFICATE (ORDER_GUID);
-----------------------------------------------------------------------------
-- TSHIPPINGREGION
-----------------------------------------------------------------------------

CREATE TABLE TSHIPPINGREGION
(
    UIDPK BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    REGION_STR VARCHAR(2000),
    GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (NAME),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TSHIPPINGCOSTCALCULATIONMETHOD
-----------------------------------------------------------------------------

CREATE TABLE TSHIPPINGCOSTCALCULATIONMETHOD
(
    UIDPK BIGINT NOT NULL,
    TYPE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK));


-----------------------------------------------------------------------------
-- TSHIPPINGCOSTCALCULATIONPARAM
-----------------------------------------------------------------------------

CREATE TABLE TSHIPPINGCOSTCALCULATIONPARAM
(
    UIDPK BIGINT NOT NULL,
    PARAM_KEY VARCHAR(255) NOT NULL,
    VALUE VARCHAR(255) NOT NULL,
    DISPLAY_TEXT VARCHAR(255) NOT NULL,
    SCCM_UID BIGINT,
    CURRENCY CHAR(3),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (SCCM_UID) REFERENCES TSHIPPINGCOSTCALCULATIONMETHOD (UIDPK)
    );

CREATE  INDEX I_SCCP_SCCM_UID ON TSHIPPINGCOSTCALCULATIONPARAM (SCCM_UID);
-----------------------------------------------------------------------------
-- TSHIPPINGSERVICELEVEL
-----------------------------------------------------------------------------

CREATE TABLE TSHIPPINGSERVICELEVEL
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    SHIPPING_REGION_UID BIGINT NOT NULL,
    STORE_UID BIGINT NOT NULL,
    SCCM_UID BIGINT NOT NULL,
    CARRIER VARCHAR(255),
    CODE VARCHAR(64) NOT NULL,
    DEFAULT_COST DECIMAL(19,2),
    ENABLED INTEGER NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (SHIPPING_REGION_UID) REFERENCES TSHIPPINGREGION (UIDPK)
    ,
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (SCCM_UID) REFERENCES TSHIPPINGCOSTCALCULATIONMETHOD (UIDPK)
    ,
    UNIQUE (GUID),
    UNIQUE (CODE));

CREATE  INDEX I_SSL_STORE_UID ON TSHIPPINGSERVICELEVEL (STORE_UID);
CREATE  INDEX I_SSL_SR_UID ON TSHIPPINGSERVICELEVEL (SHIPPING_REGION_UID);
CREATE  INDEX I_SSL_SCCM_UID ON TSHIPPINGSERVICELEVEL (SCCM_UID);
CREATE  INDEX I_SSL_MODIFY_DATE ON TSHIPPINGSERVICELEVEL (LAST_MODIFIED_DATE);
-----------------------------------------------------------------------------
-- TPICKLIST
-----------------------------------------------------------------------------

CREATE TABLE TPICKLIST
(
    UIDPK BIGINT NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    WAREHOUSE_UID BIGINT,
    CREATED_BY BIGINT,
    ACTIVE INTEGER default 0,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (WAREHOUSE_UID) REFERENCES TWAREHOUSE (UIDPK)
    ,
    FOREIGN KEY (CREATED_BY) REFERENCES TCMUSER (UIDPK)
    );

CREATE  INDEX I_PL_WAREHOUSE_UID ON TPICKLIST (WAREHOUSE_UID);
CREATE  INDEX I_PL_CREATED_BY ON TPICKLIST (CREATED_BY);
-----------------------------------------------------------------------------
-- TORDERSHIPMENT
-----------------------------------------------------------------------------

CREATE TABLE TORDERSHIPMENT
(
    UIDPK BIGINT NOT NULL,
    TYPE VARCHAR(255) NOT NULL,
    STATUS VARCHAR(20),
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    SHIPMENT_DATE TIMESTAMP,
    CARRIER VARCHAR(255),
    SERVICE_LEVEL VARCHAR(255),
    TRACKING_CODE VARCHAR(255),
    ITEM_SUBTOTAL DECIMAL(19,2),
    BEFORE_TAX_SHIPPING_COST DECIMAL(19,2),
    ITEM_TAX DECIMAL(19,2),
    SUBTOTAL_DISCOUNT DECIMAL(19,2),
    SHIPPING_COST DECIMAL(19,2),
    SHIPPING_TAX DECIMAL(19,2),
    SHIPPING_SUBTOTAL DECIMAL(19,2),
    INCLUSIVE_TAX INTEGER,
    ORDER_ADDRESS_UID BIGINT,
    ORDER_UID BIGINT,
    SERVICE_LEVEL_UID BIGINT,
    PICKLIST_UID BIGINT,
    SHIPMENT_NUMBER VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ORDER_ADDRESS_UID) REFERENCES TORDERADDRESS (UIDPK)
    ,
    FOREIGN KEY (SERVICE_LEVEL_UID) REFERENCES TSHIPPINGSERVICELEVEL (UIDPK)
    ,
    FOREIGN KEY (ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    FOREIGN KEY (PICKLIST_UID) REFERENCES TPICKLIST (UIDPK)
    ,
    UNIQUE (SHIPMENT_NUMBER));

CREATE  INDEX I_OSHIP_SHIPLEVSERV ON TORDERSHIPMENT (SERVICE_LEVEL_UID);
CREATE  INDEX I_OSHIP_OA_UID ON TORDERSHIPMENT (ORDER_ADDRESS_UID);
CREATE  INDEX I_OSHIP_ORDER_UID ON TORDERSHIPMENT (ORDER_UID);
CREATE  INDEX I_OSHIP_PICK_LIST ON TORDERSHIPMENT (PICKLIST_UID);
CREATE  INDEX I_OSHIP_MDFY_DATE ON TORDERSHIPMENT (LAST_MODIFIED_DATE);
CREATE  INDEX I_OSHIP_STATUS ON TORDERSHIPMENT (STATUS);
-----------------------------------------------------------------------------
-- TORDERPAYMENT
-----------------------------------------------------------------------------

CREATE TABLE TORDERPAYMENT
(
    UIDPK BIGINT NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    CARD_TYPE VARCHAR(50),
    CARD_HOLDER_NAME VARCHAR(100),
    CARD_NUMBER VARCHAR(255),
    MASKED_CARD_NUMBER VARCHAR(255),
    EXPIRY_YEAR VARCHAR(4),
    EXPIRY_MONTH VARCHAR(2),
    START_DATE TIMESTAMP,
    ISSUE_NUMBER VARCHAR(100),
    PAYMENT_GATEWAY VARCHAR(100),
    AMOUNT DECIMAL(19,2),
    REFERENCE_ID VARCHAR(50),
    REQUEST_TOKEN VARCHAR(255),
    AUTHORIZATION_CODE VARCHAR(50),
    TRANSACTION_TYPE VARCHAR(25),
    CURRENCY VARCHAR(10),
    EMAIL VARCHAR(100),
    STATUS VARCHAR(20),
    ORDER_UID BIGINT,
    GIFTCERTIFICATE_UID BIGINT,
    ORDERSHIPMENT_UID BIGINT,
    PAYMENT_FOR_SUBSCRIPTIONS INTEGER,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    FOREIGN KEY (GIFTCERTIFICATE_UID) REFERENCES TGIFTCERTIFICATE (UIDPK)
    ,
    FOREIGN KEY (ORDERSHIPMENT_UID) REFERENCES TORDERSHIPMENT (UIDPK)
    );

CREATE  INDEX I_OP_GCERT_BY ON TORDERPAYMENT (GIFTCERTIFICATE_UID);
CREATE  INDEX I_OP_ORDERSHIPMENT_BY ON TORDERPAYMENT (ORDERSHIPMENT_UID);
CREATE  INDEX I_OP_ORDER_UID ON TORDERPAYMENT (ORDER_UID);
-----------------------------------------------------------------------------
-- TGIFTCERTIFICATETRANSACTION
-----------------------------------------------------------------------------

CREATE TABLE TGIFTCERTIFICATETRANSACTION
(
    UIDPK BIGINT NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    AMOUNT DECIMAL(19,2),
    AUTHORIZATION_CODE VARCHAR(50),
    TRANSACTION_TYPE VARCHAR(25),
    GIFTCERTIFICATE_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (GIFTCERTIFICATE_UID) REFERENCES TGIFTCERTIFICATE (UIDPK)
    );

CREATE  INDEX I_GCT_GCERT_BY ON TGIFTCERTIFICATETRANSACTION (GIFTCERTIFICATE_UID);
-----------------------------------------------------------------------------
-- TRMAGENERATOR
-----------------------------------------------------------------------------

CREATE TABLE TRMAGENERATOR
(
    UIDPK BIGINT default 1 NOT NULL,
    NEXT_RMA VARCHAR(100) NOT NULL,
    PRIMARY KEY(UIDPK));


-----------------------------------------------------------------------------
-- TORDERRETURN
-----------------------------------------------------------------------------

CREATE TABLE TORDERRETURN
(
    UIDPK BIGINT NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    RMA_CODE VARCHAR(255),
    RETURN_COMMENT VARCHAR(2000),
    ORDER_UID BIGINT,
    CREATED_BY BIGINT,
    STATUS VARCHAR(50),
    RETURN_TYPE VARCHAR(255),
    PHYSICAL_RETURN INTEGER default 0,
    EXCHANGE_ORDER_UID BIGINT,
    ORDER_PAYMENT_UID BIGINT,
    LESS_RESTOCK_AMOUNT DECIMAL(19,2),
    SHIPPING_COST DECIMAL(19,2) default 0 NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    RECEIVED_BY BIGINT,
    VERSION INTEGER,
    ORDER_RETURN_ADDRESS_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    FOREIGN KEY (CREATED_BY) REFERENCES TCMUSER (UIDPK)
    ,
    FOREIGN KEY (RECEIVED_BY) REFERENCES TCMUSER (UIDPK)
    ,
    FOREIGN KEY (EXCHANGE_ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    FOREIGN KEY (ORDER_RETURN_ADDRESS_UID) REFERENCES TORDERADDRESS (UIDPK)
    );

CREATE  INDEX I_OR_ORDER_UID ON TORDERRETURN (ORDER_UID);
CREATE  INDEX I_OR_CREATED_BY ON TORDERRETURN (CREATED_BY);
CREATE  INDEX I_OR_RECEIVED_BY ON TORDERRETURN (RECEIVED_BY);
CREATE  INDEX I_OR_EXCHANGE_ORDER_UID ON TORDERRETURN (EXCHANGE_ORDER_UID);
CREATE  INDEX I_OR_RETURN_ADDRESS ON TORDERRETURN (ORDER_RETURN_ADDRESS_UID);
CREATE  INDEX I_OR_RMA_CODE ON TORDERRETURN (RMA_CODE);
-----------------------------------------------------------------------------
-- TSHIPMENTTAX
-----------------------------------------------------------------------------

CREATE TABLE TSHIPMENTTAX
(
    UIDPK BIGINT NOT NULL,
    TAX_CATEGORY_NAME VARCHAR(255) NOT NULL,
    TAX_CATEGORY_DISPLAY_NAME VARCHAR(255) NOT NULL,
    VALUE DECIMAL(19,2),
    ORDER_SHIPMENT_UID BIGINT,
    ORDER_RETURN_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ORDER_SHIPMENT_UID) REFERENCES TORDERSHIPMENT (UIDPK)
    ,
    FOREIGN KEY (ORDER_RETURN_UID) REFERENCES TORDERRETURN (UIDPK)
    );

CREATE  INDEX I_ST_ORDER_SHIPMENT_UID ON TSHIPMENTTAX (ORDER_SHIPMENT_UID);
CREATE  INDEX I_ST_OR_UID ON TSHIPMENTTAX (ORDER_RETURN_UID);
-----------------------------------------------------------------------------
-- TPRODUCTTYPE
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTTYPE
(
    UIDPK BIGINT NOT NULL,
    WITH_MULTIPLE_SKUS INTEGER default 0 NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    TEMPLATE VARCHAR(255) NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    TAX_CODE_UID BIGINT NOT NULL,
    CATALOG_UID BIGINT NOT NULL,
    EXCLUDE_FROM_DISCOUNT INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    FOREIGN KEY (TAX_CODE_UID) REFERENCES TTAXCODE (UIDPK)
    ,
    UNIQUE (NAME),
    UNIQUE (GUID));

CREATE  INDEX I_PRODTYPE_CATALOG_UID ON TPRODUCTTYPE (CATALOG_UID);
CREATE  INDEX I_PRODTYPE_TAXCODE_UID ON TPRODUCTTYPE (TAX_CODE_UID);
-----------------------------------------------------------------------------
-- TBRAND
-----------------------------------------------------------------------------

CREATE TABLE TBRAND
(
    UIDPK BIGINT NOT NULL,
    CODE VARCHAR(255) NOT NULL,
    IMAGE_URL VARCHAR(255),
    CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    UNIQUE (CODE));

CREATE  INDEX I_B_CATALOG_UID ON TBRAND (CATALOG_UID);
-----------------------------------------------------------------------------
-- TPRODUCT
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCT
(
    UIDPK BIGINT NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    START_DATE TIMESTAMP NOT NULL,
    END_DATE TIMESTAMP,
    IMAGE VARCHAR(255),
    PRODUCT_TYPE_UID BIGINT NOT NULL,
    BRAND_UID BIGINT,
    DEFAULT_SKU_UID BIGINT,
    CODE VARCHAR(64) NOT NULL,
    MIN_QUANTITY INTEGER default 1 NOT NULL,
    EXPECTED_RELEASE_DATE TIMESTAMP,
    HIDDEN INTEGER default 0,
    SALES_COUNT INTEGER default 0,
    TAX_CODE_UID BIGINT,
    PRE_OR_BACK_ORDER_LIMIT INTEGER,
    AVAILABILITY_CRITERIA VARCHAR(30),
    TYPE VARCHAR(255),
    NOT_SOLD_SEPARATELY INTEGER default 0,
    CALCULATED INTEGER default 0,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (PRODUCT_TYPE_UID) REFERENCES TPRODUCTTYPE (UIDPK)
    ,
    FOREIGN KEY (BRAND_UID) REFERENCES TBRAND (UIDPK)
    ,
    FOREIGN KEY (TAX_CODE_UID) REFERENCES TTAXCODE (UIDPK)
    ,
    UNIQUE (CODE));

CREATE  INDEX I_P_TYPE_UID ON TPRODUCT (PRODUCT_TYPE_UID);
CREATE  INDEX I_P_BRAND_UID ON TPRODUCT (BRAND_UID);
CREATE  INDEX I_P_TAXCODE_UID ON TPRODUCT (TAX_CODE_UID);
CREATE  INDEX I_P_MODIFY_DATE ON TPRODUCT (LAST_MODIFIED_DATE);
CREATE  INDEX I_P_SE_DATE ON TPRODUCT (START_DATE, END_DATE);
-----------------------------------------------------------------------------
-- TPRODUCTATTRIBUTEVALUE
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTATTRIBUTEVALUE
(
    UIDPK BIGINT NOT NULL,
    ATTRIBUTE_UID BIGINT NOT NULL,
    ATTRIBUTE_TYPE INTEGER NOT NULL,
    LOCALIZED_ATTRIBUTE_KEY VARCHAR(255) NOT NULL,
    SHORT_TEXT_VALUE VARCHAR(255),
    LONG_TEXT_VALUE CLOB,
    INTEGER_VALUE INTEGER,
    DECIMAL_VALUE DECIMAL(19,2),
    BOOLEAN_VALUE INTEGER default 0,
    DATE_VALUE TIMESTAMP,
    PRODUCT_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    ,
    FOREIGN KEY (PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    );

CREATE  INDEX I_PAV_ATTR_UID ON TPRODUCTATTRIBUTEVALUE (ATTRIBUTE_UID);
CREATE  INDEX I_PAV_PROD_UID ON TPRODUCTATTRIBUTEVALUE (PRODUCT_UID);
-----------------------------------------------------------------------------
-- TPRODUCTCATEGORY
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTCATEGORY
(
    UIDPK BIGINT NOT NULL,
    PRODUCT_UID BIGINT NOT NULL,
    CATEGORY_UID BIGINT NOT NULL,
    FEAT_PRODUCT_ORDER INTEGER default 0,
    DEFAULT_CATEGORY INTEGER,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    FOREIGN KEY (CATEGORY_UID) REFERENCES TCATEGORY (UIDPK)
    ,
    UNIQUE (PRODUCT_UID, CATEGORY_UID));

CREATE  INDEX I_PC_PUID ON TPRODUCTCATEGORY (PRODUCT_UID);
CREATE  INDEX I_PC_CUID ON TPRODUCTCATEGORY (CATEGORY_UID);
-----------------------------------------------------------------------------
-- TPRODUCTLDF
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTLDF
(
    UIDPK BIGINT NOT NULL,
    PRODUCT_UID BIGINT NOT NULL,
    URL VARCHAR(255),
    KEY_WORDS VARCHAR(255),
    DESCRIPTION VARCHAR(255),
    TITLE VARCHAR(255),
    DISPLAY_NAME VARCHAR(255),
    LOCALE VARCHAR(20) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    );

CREATE  INDEX I_PLDF_PUID ON TPRODUCTLDF (PRODUCT_UID);
CREATE  INDEX I_PLDF_LOCALE_NAME ON TPRODUCTLDF (LOCALE, DISPLAY_NAME);
-----------------------------------------------------------------------------
-- TPRODUCTSKU
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTSKU
(
    UIDPK BIGINT NOT NULL,
    START_DATE TIMESTAMP NOT NULL,
    END_DATE TIMESTAMP,
    SKUCODE VARCHAR(255) NOT NULL,
    GUID VARCHAR(255) NOT NULL,
    IMAGE VARCHAR(255),
    PRODUCT_UID BIGINT NOT NULL,
    SHIPPABLE INTEGER default 1,
    WEIGHT DECIMAL(19,2) default 0,
    HEIGHT DECIMAL(19,2) default 0,
    WIDTH DECIMAL(19,2) default 0,
    LENGTH DECIMAL(19,2) default 0,
    PRE_OR_BACK_ORDERED_QUANTITY INTEGER,
    DIGITAL INTEGER default 0,
    DIGITAL_ASSET_UID BIGINT,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    FOREIGN KEY (DIGITAL_ASSET_UID) REFERENCES TDIGITALASSETS (UIDPK)
    ,
    UNIQUE (SKUCODE),
    UNIQUE (GUID));

CREATE  INDEX I_PS_PRODUCT_UID ON TPRODUCTSKU (PRODUCT_UID);
CREATE  INDEX I_PS_DIGASSET_UID ON TPRODUCTSKU (DIGITAL_ASSET_UID);
CREATE  INDEX I_PS_SE_DATE ON TPRODUCTSKU (START_DATE, END_DATE);
-----------------------------------------------------------------------------
-- TINVENTORY
-----------------------------------------------------------------------------

CREATE TABLE TINVENTORY
(
    UIDPK BIGINT NOT NULL,
    QUANTITY_ON_HAND INTEGER,
    RESERVED_QUANTITY INTEGER,
    REORDER_MINIMUM INTEGER default 0,
    REORDER_QUANTITY INTEGER default 0,
    RESTOCK_DATE TIMESTAMP,
    ALLOCATED_QUANTITY INTEGER,
    WAREHOUSE_UID BIGINT NOT NULL,
    PRODUCTSKU_SKUCODE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (WAREHOUSE_UID, PRODUCTSKU_SKUCODE));

CREATE  INDEX I_INVENTORY_WAREHOUSE_UID ON TINVENTORY (WAREHOUSE_UID);
CREATE  INDEX I_INVENTORY_SKUCODE ON TINVENTORY (PRODUCTSKU_SKUCODE);
-----------------------------------------------------------------------------
-- TINVENTORYJOURNAL
-----------------------------------------------------------------------------

CREATE TABLE TINVENTORYJOURNAL
(
    UIDPK BIGINT NOT NULL,
    ALLOCATED_QUANTITY_DELTA INTEGER NOT NULL,
    QUANTITY_ON_HAND_DELTA INTEGER NOT NULL,
    SKUCODE VARCHAR(255) NOT NULL,
    WAREHOUSE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE  INDEX I_INV_JOURNAL_SKU_WAREHOUSE ON TINVENTORYJOURNAL (SKUCODE, WAREHOUSE_UID);
-----------------------------------------------------------------------------
-- TINVENTORYJOURNALLOCK
-----------------------------------------------------------------------------

CREATE TABLE TINVENTORYJOURNALLOCK
(
    UIDPK BIGINT NOT NULL,
    SKUCODE VARCHAR(255) NOT NULL,
    WAREHOUSE_UID BIGINT NOT NULL,
    LOCKCOUNT INTEGER NOT NULL,
    VERSION INTEGER NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (SKUCODE, WAREHOUSE_UID));


-----------------------------------------------------------------------------
-- TORDERSKU
-----------------------------------------------------------------------------

CREATE TABLE TORDERSKU
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    PARENT_ITEM_UID BIGINT,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    SKUCODE VARCHAR(255) NOT NULL,
    TAXCODE VARCHAR(255) NOT NULL,
    PRODUCT_SKU_UID BIGINT,
    ORDER_SHIPMENT_UID BIGINT,
    QUANTITY INTEGER,
    DISPLAY_NAME VARCHAR(255) NOT NULL,
    AMOUNT DECIMAL(19,2),
    TAX_AMOUNT DECIMAL(19,2),
    LIST_UNIT_PRICE DECIMAL(19,2),
    SALE_UNIT_PRICE DECIMAL(19,2),
    PROMO_UNIT_PRICE DECIMAL(19,2),
    UNIT_PRICE DECIMAL(19,2),
    DISCOUNT_AMOUNT DECIMAL(19,2),
    DISPLAY_SKU_OPTIONS VARCHAR(255),
    IMAGE VARCHAR(255),
    WEIGHT INTEGER default 0,
    DIGITAL_ASSET_UID BIGINT,
    ALLOCATED_QUANTITY BIGINT,
    CURRENCY VARCHAR(3),
    ORDERING INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ORDER_SHIPMENT_UID) REFERENCES TORDERSHIPMENT (UIDPK)
    ,
    FOREIGN KEY (PARENT_ITEM_UID) REFERENCES TORDERSKU (UIDPK)
    ,
    FOREIGN KEY (PRODUCT_SKU_UID) REFERENCES TPRODUCTSKU (UIDPK)
    ,
    UNIQUE (GUID));

CREATE  INDEX I_OS_SHIPMENT_UID ON TORDERSKU (ORDER_SHIPMENT_UID);
CREATE  INDEX I_OS_PARENT_ITEM_UID ON TORDERSKU (PARENT_ITEM_UID);
CREATE  INDEX I_OS_PRODUCT_SKU_UID ON TORDERSKU (PRODUCT_SKU_UID);
CREATE  INDEX I_OSHIP_PRODUCTSKU ON TORDERSKU (SKUCODE);
CREATE  INDEX I_OS_DIGITALASSET_UID ON TORDERSKU (DIGITAL_ASSET_UID);
-----------------------------------------------------------------------------
-- TORDERRETURNSKU
-----------------------------------------------------------------------------

CREATE TABLE TORDERRETURNSKU
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    ORDER_SKU_UID BIGINT,
    ORDER_RETURN_UID BIGINT,
    QUANTITY INTEGER,
    RETURN_AMOUNT DECIMAL(19,2),
    RECEIVED_QUANTITY INTEGER,
    RECEIVED_STATE VARCHAR(255),
    RETURN_REASON VARCHAR(255),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ORDER_RETURN_UID) REFERENCES TORDERRETURN (UIDPK)
    ,
    FOREIGN KEY (ORDER_SKU_UID) REFERENCES TORDERSKU (UIDPK)
    );

CREATE  INDEX I_ORS_OR_UID ON TORDERRETURNSKU (ORDER_RETURN_UID);
CREATE  INDEX I_ORS_OS_UID ON TORDERRETURNSKU (ORDER_SKU_UID);
-----------------------------------------------------------------------------
-- TPRODUCTASSOCIATION
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTASSOCIATION
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    ASSOCIATION_TYPE INTEGER NOT NULL,
    SOURCE_PRODUCT_UID BIGINT NOT NULL,
    TARGET_PRODUCT_UID BIGINT NOT NULL,
    CATALOG_UID BIGINT,
    START_DATE TIMESTAMP NOT NULL,
    END_DATE TIMESTAMP,
    DEFAULT_QUANTITY INTEGER default 1 NOT NULL,
    SOURCE_PRODUCT_DEPENDENT INTEGER default 0,
    ORDERING INTEGER default 0,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (SOURCE_PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    FOREIGN KEY (TARGET_PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    );

CREATE  INDEX I_PA_SRCPROD_UID ON TPRODUCTASSOCIATION (SOURCE_PRODUCT_UID);
CREATE  INDEX I_PA_TGTPROD_UID ON TPRODUCTASSOCIATION (TARGET_PRODUCT_UID);
CREATE  INDEX I_PA_CATALOG_UID ON TPRODUCTASSOCIATION (CATALOG_UID);
CREATE  INDEX I_PR_SE_DATE ON TPRODUCTASSOCIATION (START_DATE, END_DATE);
-----------------------------------------------------------------------------
-- TPRODUCTSKUATTRIBUTEVALUE
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTSKUATTRIBUTEVALUE
(
    UIDPK BIGINT NOT NULL,
    ATTRIBUTE_UID BIGINT NOT NULL,
    ATTRIBUTE_TYPE INTEGER NOT NULL,
    LOCALIZED_ATTRIBUTE_KEY VARCHAR(255) NOT NULL,
    SHORT_TEXT_VALUE VARCHAR(255),
    LONG_TEXT_VALUE CLOB,
    INTEGER_VALUE INTEGER,
    DECIMAL_VALUE DECIMAL(19,2),
    BOOLEAN_VALUE INTEGER default 0,
    DATE_VALUE TIMESTAMP,
    PRODUCT_SKU_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (PRODUCT_SKU_UID) REFERENCES TPRODUCTSKU (UIDPK)
    ,
    FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    );

CREATE  INDEX I_PSAV_SKU_UID ON TPRODUCTSKUATTRIBUTEVALUE (PRODUCT_SKU_UID);
CREATE  INDEX I_PSAV_ATTR_UID ON TPRODUCTSKUATTRIBUTEVALUE (ATTRIBUTE_UID);
-----------------------------------------------------------------------------
-- TPRODUCTTYPEATTRIBUTE
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTTYPEATTRIBUTE
(
    UIDPK BIGINT NOT NULL,
    ORDERING INTEGER,
    ATTRIBUTE_UID BIGINT NOT NULL,
    PRODUCT_TYPE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    ,
    FOREIGN KEY (PRODUCT_TYPE_UID) REFERENCES TPRODUCTTYPE (UIDPK)
    );

CREATE  INDEX I_PTA_ATTR_UID ON TPRODUCTTYPEATTRIBUTE (ATTRIBUTE_UID);
CREATE  INDEX I_PTA_TYPE_UID ON TPRODUCTTYPEATTRIBUTE (PRODUCT_TYPE_UID);
-----------------------------------------------------------------------------
-- TPRODUCTTYPESKUATTRIBUTE
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTTYPESKUATTRIBUTE
(
    UIDPK BIGINT NOT NULL,
    ORDERING INTEGER,
    ATTRIBUTE_UID BIGINT NOT NULL,
    PRODUCT_TYPE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    ,
    FOREIGN KEY (PRODUCT_TYPE_UID) REFERENCES TPRODUCTTYPE (UIDPK)
    );

CREATE  INDEX I_PTSA_ATTR_UID ON TPRODUCTTYPESKUATTRIBUTE (ATTRIBUTE_UID);
CREATE  INDEX I_PTSA_TYPE_UID ON TPRODUCTTYPESKUATTRIBUTE (PRODUCT_TYPE_UID);
-----------------------------------------------------------------------------
-- TSELLINGCONTEXT
-----------------------------------------------------------------------------

CREATE TABLE TSELLINGCONTEXT
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    PRIORITY INTEGER NOT NULL,
    TYPE VARCHAR(100) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TRULESET
-----------------------------------------------------------------------------

CREATE TABLE TRULESET
(
    UIDPK BIGINT NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    SCENARIO INTEGER NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (NAME));


-----------------------------------------------------------------------------
-- TRULE
-----------------------------------------------------------------------------

CREATE TABLE TRULE
(
    UIDPK BIGINT NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    RULECODE VARCHAR(64) NOT NULL,
    START_DATE TIMESTAMP,
    END_DATE TIMESTAMP,
    ELIGIBILITY_OPERATOR INTEGER default 0,
    CONDITION_OPERATOR INTEGER default 0,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    RULE_SET_UID BIGINT,
    STORE_UID BIGINT,
    CATALOG_UID BIGINT,
    CM_USER_UID BIGINT,
    ENABLED INTEGER NOT NULL,
    CURRENT_LUP_NUMBER BIGINT,
    SELLING_CTX_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (SELLING_CTX_UID) REFERENCES TSELLINGCONTEXT (UIDPK)
    ,
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    FOREIGN KEY (RULE_SET_UID) REFERENCES TRULESET (UIDPK)
    ,
    UNIQUE (NAME),
    UNIQUE (RULECODE));

CREATE  INDEX I_R_SET_STORE_UID ON TRULE (STORE_UID);
CREATE  INDEX I_R_SET_CATALOG_UID ON TRULE (CATALOG_UID);
CREATE  INDEX I_R_SET_UID ON TRULE (RULE_SET_UID);
CREATE  INDEX I_R_SE_DATE ON TRULE (START_DATE, END_DATE);
-----------------------------------------------------------------------------
-- TRULEELEMENT
-----------------------------------------------------------------------------

CREATE TABLE TRULEELEMENT
(
    UIDPK BIGINT NOT NULL,
    TYPE VARCHAR(255) NOT NULL,
    KIND VARCHAR(255) NOT NULL,
    RULE_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (RULE_UID) REFERENCES TRULE (UIDPK)
    );

CREATE  INDEX I_RE_RULE_UID ON TRULEELEMENT (RULE_UID);
-----------------------------------------------------------------------------
-- TRULEEXCEPTION
-----------------------------------------------------------------------------

CREATE TABLE TRULEEXCEPTION
(
    UIDPK BIGINT NOT NULL,
    TYPE VARCHAR(255) NOT NULL,
    RULE_ELEMENT_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (RULE_ELEMENT_UID) REFERENCES TRULEELEMENT (UIDPK)
    );

CREATE  INDEX I_REXP_RE_UID ON TRULEEXCEPTION (RULE_ELEMENT_UID);
-----------------------------------------------------------------------------
-- TRULEPARAMETER
-----------------------------------------------------------------------------

CREATE TABLE TRULEPARAMETER
(
    UIDPK BIGINT NOT NULL,
    PARAM_KEY VARCHAR(255) NOT NULL,
    PARAM_VALUE VARCHAR(255) NOT NULL,
    DISPLAY_TEXT VARCHAR(255),
    RULE_ELEMENT_UID BIGINT,
    RULE_EXCEPTION_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (RULE_ELEMENT_UID) REFERENCES TRULEELEMENT (UIDPK)
    ,
    FOREIGN KEY (RULE_EXCEPTION_UID) REFERENCES TRULEEXCEPTION (UIDPK)
    );

CREATE  INDEX I_RP_RE_UID ON TRULEPARAMETER (RULE_ELEMENT_UID);
CREATE  INDEX I_RP_REXP_UID ON TRULEPARAMETER (RULE_EXCEPTION_UID);
-----------------------------------------------------------------------------
-- TSHOPPINGCART
-----------------------------------------------------------------------------

CREATE TABLE TSHOPPINGCART
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(100) NOT NULL,
    STORE_UID BIGINT NOT NULL,
    SHOPPER_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (SHOPPER_UID) REFERENCES TSHOPPER (UIDPK)
    ,
    UNIQUE (GUID));

CREATE  INDEX I_SHOPCART_STORE_UID ON TSHOPPINGCART (STORE_UID);
CREATE  INDEX I_SHOPCART_SHOPPER_UID ON TSHOPPINGCART (SHOPPER_UID);
-----------------------------------------------------------------------------
-- TCARTITEM
-----------------------------------------------------------------------------

CREATE TABLE TCARTITEM
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    SKU_UID BIGINT NOT NULL,
    QUANTITY INTEGER NOT NULL,
    CURRENCY VARCHAR(3),
    LIST_UNIT_PRICE DECIMAL(19,2),
    SALE_UNIT_PRICE DECIMAL(19,2),
    PROMO_UNIT_PRICE DECIMAL(19,2),
    DISCOUNT_AMOUNT DECIMAL(19,2),
    TAX_AMOUNT DECIMAL(19,2),
    PARENT_ITEM_UID BIGINT,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    ORDERING INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (PARENT_ITEM_UID) REFERENCES TCARTITEM (UIDPK)
    ,
    FOREIGN KEY (SKU_UID) REFERENCES TPRODUCTSKU (UIDPK)
    );

CREATE  INDEX I_CARTI_SKU_UID ON TCARTITEM (SKU_UID);
CREATE  INDEX I_CARTITEM_GUID ON TCARTITEM (GUID);
CREATE  INDEX I_CARTITEM_PARENT_ITEM_UID ON TCARTITEM (PARENT_ITEM_UID);
-----------------------------------------------------------------------------
-- TSHOPPINGITEMRECURRINGPRICE
-----------------------------------------------------------------------------

CREATE TABLE TSHOPPINGITEMRECURRINGPRICE
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    PAYMENT_SCHEDULE_NAME VARCHAR(255) NOT NULL,
    FREQ_AMOUNT DECIMAL(19,8) NOT NULL,
    FREQ_UNIT VARCHAR(255) NOT NULL,
    DURATION_AMOUNT DECIMAL(19,8),
    DURATION_UNIT VARCHAR(255),
    CARTITEM_UID BIGINT,
    ORDERSKU_UID BIGINT,
    LIST_UNIT_PRICE DECIMAL(19,2),
    SALE_UNIT_PRICE DECIMAL(19,2),
    PROMO_UNIT_PRICE DECIMAL(19,2),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CARTITEM_UID) REFERENCES TCARTITEM (UIDPK)
    ,
    FOREIGN KEY (ORDERSKU_UID) REFERENCES TORDERSKU (UIDPK)
    );

CREATE  INDEX I_SIRP_CARTITEM_UID ON TSHOPPINGITEMRECURRINGPRICE (CARTITEM_UID);
CREATE  INDEX I_SIRP_ORDERSKU_UID ON TSHOPPINGITEMRECURRINGPRICE (ORDERSKU_UID);
-----------------------------------------------------------------------------
-- TUSERROLEPERMISSIONX
-----------------------------------------------------------------------------

CREATE TABLE TUSERROLEPERMISSIONX
(
    UIDPK BIGINT NOT NULL,
    ROLE_UID BIGINT NOT NULL,
    USER_PERMISSION VARCHAR(255),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ROLE_UID) REFERENCES TUSERROLE (UIDPK)
    );

CREATE  INDEX I_URPXI_ROLE_UID ON TUSERROLEPERMISSIONX (ROLE_UID);
-----------------------------------------------------------------------------
-- TSKUOPTION
-----------------------------------------------------------------------------

CREATE TABLE TSKUOPTION
(
    UIDPK BIGINT NOT NULL,
    OPTION_KEY VARCHAR(100) NOT NULL,
    CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    UNIQUE (OPTION_KEY));

CREATE  INDEX I_SKUOPT_CATALOG_UID ON TSKUOPTION (CATALOG_UID);
-----------------------------------------------------------------------------
-- TSKUOPTIONVALUE
-----------------------------------------------------------------------------

CREATE TABLE TSKUOPTIONVALUE
(
    UIDPK BIGINT NOT NULL,
    OPTION_VALUE_KEY VARCHAR(255) NOT NULL,
    ORDERING INTEGER,
    SKU_OPTION_UID BIGINT NOT NULL,
    IMAGE VARCHAR(255),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (SKU_OPTION_UID) REFERENCES TSKUOPTION (UIDPK)
    ,
    UNIQUE (OPTION_VALUE_KEY));

CREATE  INDEX I_SOV_SO_UID ON TSKUOPTIONVALUE (SKU_OPTION_UID);
-----------------------------------------------------------------------------
-- TPRODUCTTYPESKUOPTION
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTTYPESKUOPTION
(
    PRODUCT_TYPE_UID BIGINT NOT NULL,
    SKU_OPTION_UID BIGINT NOT NULL,
    FOREIGN KEY (PRODUCT_TYPE_UID) REFERENCES TPRODUCTTYPE (UIDPK)
    ,
    FOREIGN KEY (SKU_OPTION_UID) REFERENCES TSKUOPTION (UIDPK)
    );

CREATE  INDEX I_PTSO_PT_UID ON TPRODUCTTYPESKUOPTION (PRODUCT_TYPE_UID);
CREATE  INDEX I_PTSO_SO_UID ON TPRODUCTTYPESKUOPTION (SKU_OPTION_UID);
-----------------------------------------------------------------------------
-- TPRODUCTSKUOPTIONVALUE
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTSKUOPTIONVALUE
(
    UIDPK BIGINT NOT NULL,
    PRODUCT_SKU_UID BIGINT NOT NULL,
    OPTION_KEY VARCHAR(100) NOT NULL,
    OPTION_VALUE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (PRODUCT_SKU_UID) REFERENCES TPRODUCTSKU (UIDPK)
    ,
    FOREIGN KEY (OPTION_VALUE_UID) REFERENCES TSKUOPTIONVALUE (UIDPK)
    );

CREATE  INDEX I_PSSO_PS_UID ON TPRODUCTSKUOPTIONVALUE (PRODUCT_SKU_UID);
CREATE  INDEX I_PSSO_SKUOV_UID ON TPRODUCTSKUOPTIONVALUE (OPTION_VALUE_UID);
-----------------------------------------------------------------------------
-- TPRODUCTDELETED
-----------------------------------------------------------------------------

CREATE TABLE TPRODUCTDELETED
(
    UIDPK BIGINT NOT NULL,
    PRODUCT_UID BIGINT NOT NULL,
    DELETED_DATE TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE  INDEX I_PD_DELETED_DATE ON TPRODUCTDELETED (DELETED_DATE);
-----------------------------------------------------------------------------
-- TOBJECTDELETED
-----------------------------------------------------------------------------

CREATE TABLE TOBJECTDELETED
(
    UIDPK BIGINT NOT NULL,
    OBJECT_TYPE VARCHAR(255) NOT NULL,
    OBJECT_UID BIGINT NOT NULL,
    DELETED_DATE TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE  INDEX I_OD_DELETED_DATE ON TOBJECTDELETED (DELETED_DATE);
-----------------------------------------------------------------------------
-- TLOCALIZEDPROPERTIES
-----------------------------------------------------------------------------

CREATE TABLE TLOCALIZEDPROPERTIES
(
    UIDPK BIGINT NOT NULL,
    OBJECT_UID BIGINT,
    LOCALIZED_PROPERTY_KEY VARCHAR(255) NOT NULL,
    VALUE VARCHAR(255) NOT NULL,
    TYPE VARCHAR(31) NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE  INDEX I_LP_OBJECT_UID ON TLOCALIZEDPROPERTIES (OBJECT_UID);
-----------------------------------------------------------------------------
-- TDIGITALASSETAUDIT
-----------------------------------------------------------------------------

CREATE TABLE TDIGITALASSETAUDIT
(
    UIDPK BIGINT NOT NULL,
    ORDERSKU_UID BIGINT NOT NULL,
    DIGITALASSET_UID BIGINT NOT NULL,
    DOWNLOAD_TIME TIMESTAMP NOT NULL,
    IP_ADDRESS VARCHAR(255),
    PRIMARY KEY(UIDPK));


-----------------------------------------------------------------------------
-- TAPPLIEDRULE
-----------------------------------------------------------------------------

CREATE TABLE TAPPLIEDRULE
(
    UIDPK BIGINT NOT NULL,
    ORDER_UID BIGINT NOT NULL,
    RULE_UID BIGINT NOT NULL,
    RULE_NAME VARCHAR(255) NOT NULL,
    RULE_CODE CLOB NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE  INDEX I_TAR_ORDER_UID ON TAPPLIEDRULE (ORDER_UID);
CREATE  INDEX I_TAR_RULE_UID ON TAPPLIEDRULE (RULE_UID);
-----------------------------------------------------------------------------
-- TAPPLIEDRULECOUPONCODE
-----------------------------------------------------------------------------

CREATE TABLE TAPPLIEDRULECOUPONCODE
(
    UIDPK BIGINT NOT NULL,
    APPLIED_RULE_UID BIGINT NOT NULL,
    COUPONCODE VARCHAR(255) NOT NULL,
    USECOUNT INTEGER default 0,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (APPLIED_RULE_UID) REFERENCES TAPPLIEDRULE (UIDPK)
    );


-----------------------------------------------------------------------------
-- TTOPSELLER
-----------------------------------------------------------------------------

CREATE TABLE TTOPSELLER
(
    UIDPK BIGINT NOT NULL,
    CATEGORY_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (CATEGORY_UID));


-----------------------------------------------------------------------------
-- TTOPSELLERPRODUCTS
-----------------------------------------------------------------------------

CREATE TABLE TTOPSELLERPRODUCTS
(
    UIDPK BIGINT NOT NULL,
    TOP_SELLER_UID BIGINT NOT NULL,
    PRODUCT_UID BIGINT NOT NULL,
    SALES_COUNT INTEGER NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (TOP_SELLER_UID) REFERENCES TTOPSELLER (UIDPK)
    ,
    UNIQUE (TOP_SELLER_UID, PRODUCT_UID));

CREATE  INDEX I_TSP_TS_UID ON TTOPSELLERPRODUCTS (TOP_SELLER_UID);
-----------------------------------------------------------------------------
-- TSFSEARCHLOG
-----------------------------------------------------------------------------

CREATE TABLE TSFSEARCHLOG
(
    UIDPK BIGINT NOT NULL,
    SEARCH_TIME TIMESTAMP NOT NULL,
    KEYWORDS VARCHAR(255),
    RESULT_COUNT INTEGER NOT NULL,
    SUGGESTIONS_GENERATED INTEGER default 0,
    CATEGORY_RESTRICTION BIGINT default 0 NOT NULL,
    PRIMARY KEY(UIDPK));


-----------------------------------------------------------------------------
-- TSTOREWAREHOUSE
-----------------------------------------------------------------------------

CREATE TABLE TSTOREWAREHOUSE
(
    STORE_UID BIGINT NOT NULL,
    WAREHOUSE_UID BIGINT NOT NULL,
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (WAREHOUSE_UID) REFERENCES TWAREHOUSE (UIDPK)
    );

CREATE  INDEX I_WAREHOUSE_WH_UID ON TSTOREWAREHOUSE (WAREHOUSE_UID);
CREATE  INDEX I_WAREHOUSE_STORE_UID ON TSTOREWAREHOUSE (STORE_UID);
-----------------------------------------------------------------------------
-- TSTORECREDITCARDTYPE
-----------------------------------------------------------------------------

CREATE TABLE TSTORECREDITCARDTYPE
(
    UIDPK BIGINT NOT NULL,
    TYPE VARCHAR(255),
    STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    );

CREATE  INDEX I_CREDITCARDTYPES_STORE_UID ON TSTORECREDITCARDTYPE (STORE_UID);
-----------------------------------------------------------------------------
-- TSTORETAXCODE
-----------------------------------------------------------------------------

CREATE TABLE TSTORETAXCODE
(
    STORE_UID BIGINT NOT NULL,
    TAXCODE_UID BIGINT NOT NULL,
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (TAXCODE_UID) REFERENCES TTAXCODE (UIDPK)
    );

CREATE  INDEX I_TAXCODE_TAXCODE_UID ON TSTORETAXCODE (TAXCODE_UID);
CREATE  INDEX I_TAXCODE_STORE_UID ON TSTORETAXCODE (STORE_UID);
-----------------------------------------------------------------------------
-- TSTORETAXJURISDICTION
-----------------------------------------------------------------------------

CREATE TABLE TSTORETAXJURISDICTION
(
    STORE_UID BIGINT NOT NULL,
    TAXJURISDICTION_UID BIGINT NOT NULL,
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (TAXJURISDICTION_UID) REFERENCES TTAXJURISDICTION (UIDPK)
    );

CREATE  INDEX I_TAXJURISDICTION_JUR_UID ON TSTORETAXJURISDICTION (TAXJURISDICTION_UID);
CREATE  INDEX I_TAXJURISDICTION_STORE_UID ON TSTORETAXJURISDICTION (STORE_UID);
-----------------------------------------------------------------------------
-- TPAYMENTGATEWAY
-----------------------------------------------------------------------------

CREATE TABLE TPAYMENTGATEWAY
(
    UIDPK BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    TYPE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (NAME));


-----------------------------------------------------------------------------
-- TSTOREPAYMENTGATEWAY
-----------------------------------------------------------------------------

CREATE TABLE TSTOREPAYMENTGATEWAY
(
    STORE_UID BIGINT NOT NULL,
    GATEWAY_UID BIGINT NOT NULL,
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (GATEWAY_UID) REFERENCES TPAYMENTGATEWAY (UIDPK)
    );

CREATE  INDEX I_PAYMENTGATEWAY_PGW ON TSTOREPAYMENTGATEWAY (GATEWAY_UID);
CREATE  INDEX I_PAYMENTGATEWAY_STORE ON TSTOREPAYMENTGATEWAY (STORE_UID);
-----------------------------------------------------------------------------
-- TPAYMENTGATEWAYPROPERTIES
-----------------------------------------------------------------------------

CREATE TABLE TPAYMENTGATEWAYPROPERTIES
(
    UIDPK BIGINT NOT NULL,
    PROPKEY VARCHAR(255) NOT NULL,
    PROPVALUE VARCHAR(255),
    PAYMENTGATEWAY_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (PAYMENTGATEWAY_UID) REFERENCES TPAYMENTGATEWAY (UIDPK)
    );

CREATE  INDEX I_PGPROPS_PG_UID ON TPAYMENTGATEWAYPROPERTIES (PAYMENTGATEWAY_UID);
-----------------------------------------------------------------------------
-- TSTORECATALOG
-----------------------------------------------------------------------------

CREATE TABLE TSTORECATALOG
(
    UIDPK BIGINT NOT NULL,
    STORE_UID BIGINT NOT NULL,
    CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    );

CREATE  INDEX I_STORECAT_CATALOG_UID ON TSTORECATALOG (CATALOG_UID);
CREATE  INDEX I_STORECAT_STORE_UID ON TSTORECATALOG (STORE_UID);
-----------------------------------------------------------------------------
-- TCMUSERSTORE
-----------------------------------------------------------------------------

CREATE TABLE TCMUSERSTORE
(
    USER_UID BIGINT NOT NULL,
    STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(USER_UID,STORE_UID),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (USER_UID) REFERENCES TCMUSER (UIDPK)
    );

CREATE  INDEX I_CMUSERSTORE_STORE_UID ON TCMUSERSTORE (STORE_UID);
CREATE  INDEX I_CMUSERSTORE__USER_UID ON TCMUSERSTORE (USER_UID);
-----------------------------------------------------------------------------
-- TCMUSERWAREHOUSE
-----------------------------------------------------------------------------

CREATE TABLE TCMUSERWAREHOUSE
(
    USER_UID BIGINT NOT NULL,
    WAREHOUSE_UID BIGINT NOT NULL,
    PRIMARY KEY(USER_UID,WAREHOUSE_UID),
    FOREIGN KEY (WAREHOUSE_UID) REFERENCES TWAREHOUSE (UIDPK)
    ,
    FOREIGN KEY (USER_UID) REFERENCES TCMUSER (UIDPK)
    );

CREATE  INDEX I_CMUSERWH_WAREHOUSE_UID ON TCMUSERWAREHOUSE (WAREHOUSE_UID);
CREATE  INDEX I_CMUSERWH__USER_UID ON TCMUSERWAREHOUSE (USER_UID);
-----------------------------------------------------------------------------
-- TCMUSERCATALOG
-----------------------------------------------------------------------------

CREATE TABLE TCMUSERCATALOG
(
    USER_UID BIGINT NOT NULL,
    CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(USER_UID,CATALOG_UID),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    FOREIGN KEY (USER_UID) REFERENCES TCMUSER (UIDPK)
    );

CREATE  INDEX I_CMUSERCATALOG_CATALOG_UID ON TCMUSERCATALOG (CATALOG_UID);
CREATE  INDEX I_CMUSERCATALOG__USER_UID ON TCMUSERCATALOG (USER_UID);
-----------------------------------------------------------------------------
-- TSTOREASSOCIATION
-----------------------------------------------------------------------------

CREATE TABLE TSTOREASSOCIATION
(
    STORE_UID BIGINT NOT NULL,
    ASSOCIATED_STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(STORE_UID,ASSOCIATED_STORE_UID),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (ASSOCIATED_STORE_UID) REFERENCES TSTORE (UIDPK)
    );

CREATE  INDEX I_STORE_ASSOCIATE_UID ON TSTOREASSOCIATION (STORE_UID);
CREATE  INDEX I_STORE_ASSOCIATION_UID ON TSTOREASSOCIATION (ASSOCIATED_STORE_UID);
-----------------------------------------------------------------------------
-- TSYNONYMGROUPS
-----------------------------------------------------------------------------

CREATE TABLE TSYNONYMGROUPS
(
    UIDPK BIGINT NOT NULL,
    CONCEPT_TERM VARCHAR(255) NOT NULL,
    LOCALE VARCHAR(20) NOT NULL,
    CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    );

CREATE  INDEX I_SYNONYMGR_CATLOG_UID ON TSYNONYMGROUPS (CATALOG_UID);
-----------------------------------------------------------------------------
-- TSYNONYM
-----------------------------------------------------------------------------

CREATE TABLE TSYNONYM
(
    UIDPK BIGINT NOT NULL,
    SYNONYM_UID BIGINT NOT NULL,
    SYNONYM_WORD VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (SYNONYM_UID) REFERENCES TSYNONYMGROUPS (UIDPK)
    );

CREATE  INDEX I_SYNONYM_SYNONYMGR_UID ON TSYNONYM (SYNONYM_UID);
-----------------------------------------------------------------------------
-- TINDEXNOTIFY
-----------------------------------------------------------------------------

CREATE TABLE TINDEXNOTIFY
(
    UIDPK BIGINT NOT NULL,
    INDEX_TYPE VARCHAR(100) NOT NULL,
    UPDATE_TYPE VARCHAR(64) NOT NULL,
    AFFECTED_UID BIGINT,
    ENTITY_TYPE VARCHAR(64),
    QUERY_STRING CLOB,
    PRIMARY KEY(UIDPK));


-----------------------------------------------------------------------------
-- TRULESTORAGE
-----------------------------------------------------------------------------

CREATE TABLE TRULESTORAGE
(
    UIDPK BIGINT NOT NULL,
    STORE_UID BIGINT,
    CATALOG_UID BIGINT,
    SCENARIO INTEGER NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    RULEBASE BLOB NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    );

CREATE  INDEX I_RS_STRE_UID ON TRULESTORAGE (STORE_UID);
CREATE  INDEX I_RS_CAT_UID ON TRULESTORAGE (CATALOG_UID);
-----------------------------------------------------------------------------
-- TADVANCEDSEARCHQUERY
-----------------------------------------------------------------------------

CREATE TABLE TADVANCEDSEARCHQUERY
(
    UIDPK BIGINT NOT NULL,
    QUERY_ID BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION CLOB,
    QUERY_VISIBILITY VARCHAR(20) NOT NULL,
    OWNER_ID BIGINT,
    QUERY_TYPE VARCHAR(20) NOT NULL,
    QUERY_CONTENT CLOB,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (OWNER_ID) REFERENCES TCMUSER (UIDPK)
    );

CREATE  INDEX I_ON_OWNER_UID ON TADVANCEDSEARCHQUERY (OWNER_ID);
-----------------------------------------------------------------------------
-- TSTORESUPPORTEDCURRENCY
-----------------------------------------------------------------------------

CREATE TABLE TSTORESUPPORTEDCURRENCY
(
    UIDPK BIGINT NOT NULL,
    CURRENCY VARCHAR(255) NOT NULL,
    STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    );

CREATE  INDEX I_STORESUPCURR_STORE_UID ON TSTORESUPPORTEDCURRENCY (STORE_UID);
-----------------------------------------------------------------------------
-- TSTORESUPPORTEDLOCALE
-----------------------------------------------------------------------------

CREATE TABLE TSTORESUPPORTEDLOCALE
(
    UIDPK BIGINT NOT NULL,
    LOCALE VARCHAR(255) NOT NULL,
    STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    );

CREATE  INDEX I_STORESUPLOC_STORE_UID ON TSTORESUPPORTEDLOCALE (STORE_UID);
-----------------------------------------------------------------------------
-- TINDEXBUILDSTATUS
-----------------------------------------------------------------------------

CREATE TABLE TINDEXBUILDSTATUS
(
    UIDPK BIGINT NOT NULL,
    INDEX_TYPE VARCHAR(100) NOT NULL,
    LAST_BUILD_DATE TIMESTAMP,
    INDEX_STATUS VARCHAR(100) default 'MISSING' NOT NULL,
    TOTAL_RECORDS INTEGER default -1,
    PROCESSED_RECORDS INTEGER default -1,
    OPERATION_START_DATE TIMESTAMP,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK));


-----------------------------------------------------------------------------
-- TPRICELIST
-----------------------------------------------------------------------------

CREATE TABLE TPRICELIST
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    CURRENCY VARCHAR(255) NOT NULL,
    DESCRIPTION CLOB,
    HIDDEN INTEGER default 0,
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID),
    UNIQUE (NAME));


-----------------------------------------------------------------------------
-- TBASEAMOUNT
-----------------------------------------------------------------------------

CREATE TABLE TBASEAMOUNT
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    OBJECT_GUID VARCHAR(64) NOT NULL,
    OBJECT_TYPE VARCHAR(100) NOT NULL,
    QUANTITY DECIMAL(19,2) NOT NULL,
    LIST DECIMAL(19,2),
    SALE DECIMAL(19,2),
    PRICE_LIST_GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (PRICE_LIST_GUID) REFERENCES TPRICELIST (GUID)
    ,
    UNIQUE (OBJECT_GUID, OBJECT_TYPE, QUANTITY, PRICE_LIST_GUID),
    UNIQUE (GUID));

CREATE  INDEX I_TBASEAMOUNT_FK_GUID ON TBASEAMOUNT (PRICE_LIST_GUID);
CREATE  INDEX I_TBASEAMOUNT_OBJECTS ON TBASEAMOUNT (PRICE_LIST_GUID, OBJECT_GUID);
-----------------------------------------------------------------------------
-- TOBJECTGROUPMEMBER
-----------------------------------------------------------------------------

CREATE TABLE TOBJECTGROUPMEMBER
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    OBJECT_GROUP_ID VARCHAR(64) NOT NULL,
    OBJECT_TYPE VARCHAR(100) NOT NULL,
    OBJECT_IDENTIFIER VARCHAR(100) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (OBJECT_GROUP_ID, OBJECT_TYPE, OBJECT_IDENTIFIER),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TCHANGESET
-----------------------------------------------------------------------------

CREATE TABLE TCHANGESET
(
    UIDPK BIGINT NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    OBJECT_GROUP_ID VARCHAR(64) NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    CREATED_BY_USER_GUID VARCHAR(64) NOT NULL,
    STATE_CODE VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (OBJECT_GROUP_ID));


-----------------------------------------------------------------------------
-- TOBJECTMETADATA
-----------------------------------------------------------------------------

CREATE TABLE TOBJECTMETADATA
(
    UIDPK BIGINT NOT NULL,
    OBJECT_GROUP_MEMBER_UID BIGINT NOT NULL,
    METADATA_KEY VARCHAR(255) NOT NULL,
    METADATA_VALUE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (OBJECT_GROUP_MEMBER_UID) REFERENCES TOBJECTGROUPMEMBER (UIDPK)
    );

CREATE  INDEX I_TOBJECTMETADATA_MBR_UID ON TOBJECTMETADATA (OBJECT_GROUP_MEMBER_UID);
-----------------------------------------------------------------------------
-- TCHANGESETUSER
-----------------------------------------------------------------------------

CREATE TABLE TCHANGESETUSER
(
    UIDPK BIGINT NOT NULL,
    USER_GUID VARCHAR(255) NOT NULL,
    CHANGESET_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CHANGESET_UID) REFERENCES TCHANGESET (UIDPK)
    );

CREATE  INDEX I_TCHANGESETUSER_CS_UID ON TCHANGESETUSER (CHANGESET_UID);
CREATE  INDEX I_TCHANGESETUSER_USER_GUID ON TCHANGESETUSER (USER_GUID);
-----------------------------------------------------------------------------
-- TTAGDICTIONARY
-----------------------------------------------------------------------------

CREATE TABLE TTAGDICTIONARY
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    PURPOSE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TTAGCONDITION
-----------------------------------------------------------------------------

CREATE TABLE TTAGCONDITION
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(4000),
    CONDITION_STRING VARCHAR(4000) NOT NULL,
    TAGDICTIONARY_GUID VARCHAR(64),
    NAMED INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID));

CREATE  INDEX I_TAGDICTIONARY_FK ON TTAGCONDITION (TAGDICTIONARY_GUID);
-----------------------------------------------------------------------------
-- TSELLINGCONTEXTCONDITION
-----------------------------------------------------------------------------

CREATE TABLE TSELLINGCONTEXTCONDITION
(
    SELLING_CONTEXT_UID BIGINT NOT NULL,
    CONDITION_GUID VARCHAR(64) NOT NULL,
    FOREIGN KEY (SELLING_CONTEXT_UID) REFERENCES TSELLINGCONTEXT (UIDPK)
    );


-----------------------------------------------------------------------------
-- TCSDYNAMICCONTENT
-----------------------------------------------------------------------------

CREATE TABLE TCSDYNAMICCONTENT
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    CONTENT_WRAPPER_ID VARCHAR(255) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(4000),
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID),
    UNIQUE (NAME));


-----------------------------------------------------------------------------
-- TCSDYNAMICCONTENTDELIVERY
-----------------------------------------------------------------------------

CREATE TABLE TCSDYNAMICCONTENTDELIVERY
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    PRIORITY INTEGER NOT NULL,
    CSDC_CONTENT_UID BIGINT NOT NULL,
    SELLING_CONTEXT_GUID VARCHAR(64),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CSDC_CONTENT_UID) REFERENCES TCSDYNAMICCONTENT (UIDPK)
    ,
    FOREIGN KEY (SELLING_CONTEXT_GUID) REFERENCES TSELLINGCONTEXT (GUID)
    ,
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TCSCONTENTSPACE
-----------------------------------------------------------------------------

CREATE TABLE TCSCONTENTSPACE
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    TARGET_ID VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID),
    UNIQUE (TARGET_ID));


-----------------------------------------------------------------------------
-- TCSPARAMETERVALUE
-----------------------------------------------------------------------------

CREATE TABLE TCSPARAMETERVALUE
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    CSDYNAMICCONTENT_UID BIGINT NOT NULL,
    PARAMETER_NAME VARCHAR(255) NOT NULL,
    LOCALIZABLE INTEGER default 0 NOT NULL,
    DESCRIPTION VARCHAR(4000),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CSDYNAMICCONTENT_UID) REFERENCES TCSDYNAMICCONTENT (UIDPK)
    ,
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TCSPARAMETERVALUELDF
-----------------------------------------------------------------------------

CREATE TABLE TCSPARAMETERVALUELDF
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    LOCALE VARCHAR(20) NOT NULL,
    LDVALUE VARCHAR(4000) NOT NULL,
    CSPARAMETERVALUE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CSPARAMETERVALUE_UID) REFERENCES TCSPARAMETERVALUE (UIDPK)
    ,
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TCSDYNAMICCONTENTSPACE
-----------------------------------------------------------------------------

CREATE TABLE TCSDYNAMICCONTENTSPACE
(
    DC_DELIVERY_UID BIGINT NOT NULL,
    DC_CONTENTSPACE_UID BIGINT NOT NULL,
    FOREIGN KEY (DC_DELIVERY_UID) REFERENCES TCSDYNAMICCONTENTDELIVERY (UIDPK)
    ,
    FOREIGN KEY (DC_CONTENTSPACE_UID) REFERENCES TCSCONTENTSPACE (UIDPK)
    ,
    UNIQUE (DC_DELIVERY_UID, DC_CONTENTSPACE_UID));


-----------------------------------------------------------------------------
-- TCHANGETRANSACTION
-----------------------------------------------------------------------------

CREATE TABLE TCHANGETRANSACTION
(
    UIDPK BIGINT NOT NULL,
    TRANSACTION_ID VARCHAR(255) NOT NULL,
    CHANGE_DATE TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK));


-----------------------------------------------------------------------------
-- TCHANGETRANSACTIONMETADATA
-----------------------------------------------------------------------------

CREATE TABLE TCHANGETRANSACTIONMETADATA
(
    UIDPK BIGINT NOT NULL,
    CHANGE_TRANSACTION_UID BIGINT NOT NULL,
    METADATA_KEY VARCHAR(255) NOT NULL,
    METADATA_VALUE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CHANGE_TRANSACTION_UID) REFERENCES TCHANGETRANSACTION (UIDPK)
    );


-----------------------------------------------------------------------------
-- TCHANGEOPERATION
-----------------------------------------------------------------------------

CREATE TABLE TCHANGEOPERATION
(
    UIDPK BIGINT NOT NULL,
    OPERATION_ORDER INTEGER NOT NULL,
    ROOT_OBJECT_NAME VARCHAR(255),
    ROOT_OBJECT_UID BIGINT,
    ROOT_OBJECT_GUID VARCHAR(255),
    CHANGE_TYPE VARCHAR(255) NOT NULL,
    CHANGE_TRANSACTION_UID BIGINT NOT NULL,
    QUERY_STRING VARCHAR(1000),
    QUERY_PARAMETERS VARCHAR(255),
    TYPE VARCHAR(20),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CHANGE_TRANSACTION_UID) REFERENCES TCHANGETRANSACTION (UIDPK)
    );


-----------------------------------------------------------------------------
-- TTAGVALUETYPE
-----------------------------------------------------------------------------

CREATE TABLE TTAGVALUETYPE
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    JAVA_TYPE VARCHAR(50),
    UI_PICKER_KEY VARCHAR(50),
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TTAGGROUP
-----------------------------------------------------------------------------

CREATE TABLE TTAGGROUP
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TTAGDEFINITION
-----------------------------------------------------------------------------

CREATE TABLE TTAGDEFINITION
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    TAGVALUETYPE_GUID VARCHAR(64) NOT NULL,
    TAGGROUP_UID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (TAGVALUETYPE_GUID) REFERENCES TTAGVALUETYPE (GUID)
    ,
    FOREIGN KEY (TAGGROUP_UID) REFERENCES TTAGGROUP (UIDPK)
    ,
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TTAGALLOWEDVALUE
-----------------------------------------------------------------------------

CREATE TABLE TTAGALLOWEDVALUE
(
    UIDPK BIGINT NOT NULL,
    VALUE VARCHAR(255) NOT NULL,
    TAGVALUETYPE_GUID VARCHAR(64) NOT NULL,
    DESCRIPTION VARCHAR(4000),
    ORDERING INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (TAGVALUETYPE_GUID) REFERENCES TTAGVALUETYPE (GUID)
    ,
    UNIQUE (VALUE, TAGVALUETYPE_GUID),
    UNIQUE (ORDERING, TAGVALUETYPE_GUID));


-----------------------------------------------------------------------------
-- TDATACHANGED
-----------------------------------------------------------------------------

CREATE TABLE TDATACHANGED
(
    UIDPK BIGINT NOT NULL,
    CHANGE_TYPE VARCHAR(255) NOT NULL,
    FIELD_NAME VARCHAR(255),
    FIELD_OLD_VALUE CLOB,
    FIELD_NEW_VALUE CLOB,
    OBJECT_NAME VARCHAR(255),
    OBJECT_UID BIGINT,
    OBJECT_GUID VARCHAR(255),
    CHANGE_OPERATION_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CHANGE_OPERATION_UID) REFERENCES TCHANGEOPERATION (UIDPK)
    );


-----------------------------------------------------------------------------
-- TTAGDICTIONARYTAGDEFINITION
-----------------------------------------------------------------------------

CREATE TABLE TTAGDICTIONARYTAGDEFINITION
(
    TAGDICTIONARY_GUID VARCHAR(64) NOT NULL,
    TAGDEFINITION_GUID VARCHAR(64) NOT NULL,
    UNIQUE (TAGDICTIONARY_GUID, TAGDEFINITION_GUID));


-----------------------------------------------------------------------------
-- TTAGOPERATOR
-----------------------------------------------------------------------------

CREATE TABLE TTAGOPERATOR
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TTAGVALUETYPEOPERATOR
-----------------------------------------------------------------------------

CREATE TABLE TTAGVALUETYPEOPERATOR
(
    TAGVALUETYPE_GUID VARCHAR(64) NOT NULL,
    TAGOPERATOR_GUID VARCHAR(64) NOT NULL,
    FOREIGN KEY (TAGOPERATOR_GUID) REFERENCES TTAGOPERATOR (GUID)
    ,
    FOREIGN KEY (TAGVALUETYPE_GUID) REFERENCES TTAGVALUETYPE (GUID)
    ,
    UNIQUE (TAGVALUETYPE_GUID, TAGOPERATOR_GUID));


-----------------------------------------------------------------------------
-- TVALIDATIONCONSTRAINTS
-----------------------------------------------------------------------------

CREATE TABLE TVALIDATIONCONSTRAINTS
(
    UIDPK BIGINT NOT NULL,
    OBJECT_UID BIGINT,
    ERROR_MESSAGE_KEY VARCHAR(255) NOT NULL,
    VALIDATION_CONSTRAINT VARCHAR(4000) NOT NULL,
    TYPE VARCHAR(31) NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE  INDEX I_VC_OBJECT_UID ON TVALIDATIONCONSTRAINTS (OBJECT_UID);
-----------------------------------------------------------------------------
-- TBUNDLECONSTITUENTX
-----------------------------------------------------------------------------

CREATE TABLE TBUNDLECONSTITUENTX
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    BUNDLE_UID BIGINT NOT NULL,
    CONSTITUENT_UID BIGINT,
    CONSTITUENT_SKU_UID BIGINT,
    QUANTITY INTEGER default 1 NOT NULL,
    ORDERING INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (BUNDLE_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    FOREIGN KEY (CONSTITUENT_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    FOREIGN KEY (CONSTITUENT_SKU_UID) REFERENCES TPRODUCTSKU (UIDPK)
    ,
    UNIQUE (GUID));

CREATE  INDEX I_BCX_BUNDLE_UID ON TBUNDLECONSTITUENTX (BUNDLE_UID);
CREATE  INDEX I_BCX_CONSTITUENT_UID ON TBUNDLECONSTITUENTX (CONSTITUENT_UID);
CREATE  INDEX I_BCX_CONSTITUENT_SKU_UID ON TBUNDLECONSTITUENTX (CONSTITUENT_SKU_UID);
-----------------------------------------------------------------------------
-- TPRICEADJUSTMENT
-----------------------------------------------------------------------------

CREATE TABLE TPRICEADJUSTMENT
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    CONSTITUENT_GUID VARCHAR(64) NOT NULL,
    AMOUNT DECIMAL(19,2),
    PRICE_LIST_GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CONSTITUENT_GUID) REFERENCES TBUNDLECONSTITUENTX (GUID)
    ,
    UNIQUE (GUID));

CREATE  INDEX I_TPRICEADJUSTMENT_FK_PL_GUID ON TPRICEADJUSTMENT (PRICE_LIST_GUID);
CREATE  INDEX I_TPRICEADJUSTMENT_FK_BCX_GUID ON TPRICEADJUSTMENT (CONSTITUENT_GUID);
CREATE  INDEX I_TPRICEADJUSTMENT_KEYS ON TPRICEADJUSTMENT (PRICE_LIST_GUID, CONSTITUENT_GUID);
-----------------------------------------------------------------------------
-- TBUNDLESELECTIONRULE
-----------------------------------------------------------------------------

CREATE TABLE TBUNDLESELECTIONRULE
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    PARAMETER INTEGER NOT NULL,
    BUNDLE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (BUNDLE_UID) REFERENCES TPRODUCT (UIDPK)
    );

CREATE  INDEX I_BSR_BUNDLE_UID ON TBUNDLESELECTIONRULE (BUNDLE_UID);
-----------------------------------------------------------------------------
-- TSHOPPINGITEMDATA
-----------------------------------------------------------------------------

CREATE TABLE TSHOPPINGITEMDATA
(
    UIDPK BIGINT NOT NULL,
    ITEM_KEY CLOB NOT NULL,
    ITEM_VALUE CLOB,
    CARTITEM_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CARTITEM_UID) REFERENCES TCARTITEM (UIDPK)
    );

CREATE  INDEX I_CARTITEM_UID ON TSHOPPINGITEMDATA (CARTITEM_UID);
-----------------------------------------------------------------------------
-- TORDERITEMDATA
-----------------------------------------------------------------------------

CREATE TABLE TORDERITEMDATA
(
    UIDPK BIGINT NOT NULL,
    ITEM_KEY CLOB NOT NULL,
    ITEM_VALUE CLOB,
    ORDERSKU_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (ORDERSKU_UID) REFERENCES TORDERSKU (UIDPK)
    );

CREATE  INDEX I_ORDERSKU_UID ON TORDERITEMDATA (ORDERSKU_UID);
-----------------------------------------------------------------------------
-- TPRICELISTASSIGNMENT
-----------------------------------------------------------------------------

CREATE TABLE TPRICELISTASSIGNMENT
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(4000),
    PRIORITY INTEGER default 1 NOT NULL,
    CATALOG_UID BIGINT NOT NULL,
    PRLISTDSCR_UID BIGINT NOT NULL,
    SELLING_CTX_UID BIGINT,
    HIDDEN INTEGER default 0,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    FOREIGN KEY (PRLISTDSCR_UID) REFERENCES TPRICELIST (UIDPK)
    ,
    FOREIGN KEY (SELLING_CTX_UID) REFERENCES TSELLINGCONTEXT (UIDPK)
    ,
    UNIQUE (GUID),
    UNIQUE (NAME));

CREATE  INDEX I_CATALOG_UID ON TPRICELISTASSIGNMENT (CATALOG_UID);
CREATE  INDEX I_PRLISTDSCR_UID ON TPRICELISTASSIGNMENT (PRLISTDSCR_UID);
-----------------------------------------------------------------------------
-- TIMPORTNOTIFICATION
-----------------------------------------------------------------------------

CREATE TABLE TIMPORTNOTIFICATION
(
    UIDPK BIGINT NOT NULL,
    REQUEST_ID VARCHAR(64) NOT NULL,
    ACTION VARCHAR(64) NOT NULL,
    IMPORT_JOB_UID BIGINT NOT NULL,
    DATE_CREATED TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    CMUSER_UID BIGINT NOT NULL,
    NOTIFICATION_STATE VARCHAR(64) NOT NULL,
    CHANGESET_GUID VARCHAR(64),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (IMPORT_JOB_UID) REFERENCES TIMPORTJOB (UIDPK)
    ,
    FOREIGN KEY (CMUSER_UID) REFERENCES TCMUSER (UIDPK)
    );

CREATE  INDEX I_IN_IMPORTJOB_FK ON TIMPORTNOTIFICATION (IMPORT_JOB_UID);
CREATE  INDEX I_IN_CMUSER_FK ON TIMPORTNOTIFICATION (CMUSER_UID);
-----------------------------------------------------------------------------
-- TIMPORTNOTIFICATIONMETADATA
-----------------------------------------------------------------------------

CREATE TABLE TIMPORTNOTIFICATIONMETADATA
(
    UIDPK BIGINT NOT NULL,
    METADATA_KEY VARCHAR(255),
    METADATA_VALUE VARCHAR(255),
    IMPORT_NOTIFICATION_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (IMPORT_NOTIFICATION_UID) REFERENCES TIMPORTNOTIFICATION (UIDPK)
    );

CREATE  INDEX I_INM_IMPORTNOTIFICATION_FK ON TIMPORTNOTIFICATIONMETADATA (IMPORT_NOTIFICATION_UID);
-----------------------------------------------------------------------------
-- TIMPORTJOBSTATUS
-----------------------------------------------------------------------------

CREATE TABLE TIMPORTJOBSTATUS
(
    UIDPK BIGINT NOT NULL,
    PROCESS_ID VARCHAR(64) NOT NULL,
    IMPORT_JOB_UID BIGINT NOT NULL,
    CMUSER_UID BIGINT NOT NULL,
    START_DATE TIMESTAMP,
    END_DATE TIMESTAMP,
    TOTAL_ROWS INTEGER,
    FAILED_ROWS INTEGER,
    CURRENT_ROW INTEGER,
    STATE VARCHAR(64) NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (IMPORT_JOB_UID) REFERENCES TIMPORTJOB (UIDPK)
    ,
    FOREIGN KEY (CMUSER_UID) REFERENCES TCMUSER (UIDPK)
    );

CREATE  INDEX I_IJS_IMPORTJOB_FK ON TIMPORTJOBSTATUS (IMPORT_JOB_UID);
CREATE  INDEX I_IJS_CMUSER_FK ON TIMPORTJOBSTATUS (CMUSER_UID);
-----------------------------------------------------------------------------
-- TIMPORTBADROW
-----------------------------------------------------------------------------

CREATE TABLE TIMPORTBADROW
(
    UIDPK BIGINT NOT NULL,
    IMPORT_JOB_STATUS_UID BIGINT NOT NULL,
    ROW_NUMBER INTEGER NOT NULL,
    ROW_DATA CLOB NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (IMPORT_JOB_STATUS_UID) REFERENCES TIMPORTJOBSTATUS (UIDPK)
    );

CREATE  INDEX I_IBR_IMPORTJOBSTATUS_FK ON TIMPORTBADROW (IMPORT_JOB_STATUS_UID);
-----------------------------------------------------------------------------
-- TIMPORTFAULT
-----------------------------------------------------------------------------

CREATE TABLE TIMPORTFAULT
(
    UIDPK BIGINT NOT NULL,
    IMPORT_BAD_ROW_UID BIGINT NOT NULL,
    LEVEL_NUMBER INTEGER,
    CODE VARCHAR(255),
    SOURCE_MESSAGE CLOB,
    ARGS VARCHAR(255),
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (IMPORT_BAD_ROW_UID) REFERENCES TIMPORTBADROW (UIDPK)
    );

CREATE  INDEX I_IF_IMPORTBADROW_FK ON TIMPORTFAULT (IMPORT_BAD_ROW_UID);
-----------------------------------------------------------------------------
-- TCMUSERPRICELIST
-----------------------------------------------------------------------------

CREATE TABLE TCMUSERPRICELIST
(
    USER_UID BIGINT NOT NULL,
    PRICELIST_GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(USER_UID,PRICELIST_GUID),
    FOREIGN KEY (PRICELIST_GUID) REFERENCES TPRICELIST (GUID)
    ,
    FOREIGN KEY (USER_UID) REFERENCES TCMUSER (UIDPK)
    );

CREATE  INDEX I_CMUSERPL_GUID ON TCMUSERPRICELIST (PRICELIST_GUID);
CREATE  INDEX I_CMUSERPL_USER_UID ON TCMUSERPRICELIST (USER_UID);
-----------------------------------------------------------------------------
-- TCOUPONCONFIG
-----------------------------------------------------------------------------

CREATE TABLE TCOUPONCONFIG
(
    UIDPK BIGINT NOT NULL,
    RULECODE VARCHAR(64) NOT NULL,
    USAGE_LIMIT INTEGER NOT NULL,
    USAGE_TYPE VARCHAR(255) NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    LIMITED_DURATION INTEGER default 0 NOT NULL,
    DURATION_DAYS INTEGER,
    MULTI_USE_PER_ORDER INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (RULECODE) REFERENCES TRULE (RULECODE)
    ,
    UNIQUE (GUID),
    UNIQUE (RULECODE));


-----------------------------------------------------------------------------
-- TCOUPON
-----------------------------------------------------------------------------

CREATE TABLE TCOUPON
(
    UIDPK BIGINT NOT NULL,
    COUPONCODE VARCHAR(255) NOT NULL,
    COUPON_CONFIG_UID BIGINT NOT NULL,
    SUSPENDED INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (COUPON_CONFIG_UID) REFERENCES TCOUPONCONFIG (UIDPK)
    ,
    UNIQUE (COUPONCODE));


-----------------------------------------------------------------------------
-- TCOUPONUSAGE
-----------------------------------------------------------------------------

CREATE TABLE TCOUPONUSAGE
(
    UIDPK BIGINT NOT NULL,
    COUPON_UID BIGINT NOT NULL,
    USECOUNT INTEGER NOT NULL,
    ACTIVE_IN_CART INTEGER default 0 NOT NULL,
    CUSTOMER_EMAIL_ADDRESS VARCHAR(255) NOT NULL,
    LIMITED_DURATION_END_DATE TIMESTAMP,
    SUSPENDED INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (COUPON_UID) REFERENCES TCOUPON (UIDPK)
    ,
    UNIQUE (COUPON_UID, CUSTOMER_EMAIL_ADDRESS));


-----------------------------------------------------------------------------
-- TWISHLIST
-----------------------------------------------------------------------------

CREATE TABLE TWISHLIST
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(100) NOT NULL,
    STORECODE VARCHAR(64),
    SHOPPER_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (SHOPPER_UID) REFERENCES TSHOPPER (UIDPK)
    ,
    FOREIGN KEY (STORECODE) REFERENCES TSTORE (STORECODE)
    ,
    UNIQUE (GUID));

CREATE  INDEX I_TWISHLIST_SHOPPER_UID ON TWISHLIST (SHOPPER_UID);
-----------------------------------------------------------------------------
-- TWISHLISTITEMS
-----------------------------------------------------------------------------

CREATE TABLE TWISHLISTITEMS
(
    WISHLIST_UID BIGINT NOT NULL,
    ITEM_UID BIGINT NOT NULL,
    PRIMARY KEY(WISHLIST_UID,ITEM_UID),
    FOREIGN KEY (WISHLIST_UID) REFERENCES TWISHLIST (UIDPK)
    ,
    FOREIGN KEY (ITEM_UID) REFERENCES TCARTITEM (UIDPK)
    );


-----------------------------------------------------------------------------
-- TSHOPPINGCARTITEMS
-----------------------------------------------------------------------------

CREATE TABLE TSHOPPINGCARTITEMS
(
    SHOPPING_CART_UID BIGINT NOT NULL,
    ITEM_UID BIGINT NOT NULL);

CREATE  INDEX I_TSCI_CART_UID ON TSHOPPINGCARTITEMS (SHOPPING_CART_UID);
-----------------------------------------------------------------------------
-- TCAMPAIGN
-----------------------------------------------------------------------------

CREATE TABLE TCAMPAIGN
(
    UIDPK BIGINT NOT NULL,
    THIRD_PARTY_ID VARCHAR(255) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    START_DATE TIMESTAMP,
    END_DATE TIMESTAMP,
    STATE INTEGER default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (NAME),
    UNIQUE (THIRD_PARTY_ID));


-----------------------------------------------------------------------------
-- TEXPERIENCE
-----------------------------------------------------------------------------

CREATE TABLE TEXPERIENCE
(
    UIDPK BIGINT NOT NULL,
    THIRD_PARTY_ID VARCHAR(255) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    GUID VARCHAR(100) NOT NULL,
    CAMPAIGN_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (CAMPAIGN_UID) REFERENCES TCAMPAIGN (UIDPK)
    ,
    UNIQUE (GUID));


-----------------------------------------------------------------------------
-- TMARKETTESTINGOFFER
-----------------------------------------------------------------------------

CREATE TABLE TMARKETTESTINGOFFER
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(100) NOT NULL,
    NAME VARCHAR(255),
    STORE_UID BIGINT,
    OFFER_VALUE_ENTITY_UID BIGINT,
    OFFER_TYPE VARCHAR(255),
    LAST_SYNC_DATE TIMESTAMP,
    OFFER_TYPE_NAME VARCHAR(255),
    CAMPAIGN_STATE INTEGER default 1 NOT NULL,
    EXTERNAL_ID BIGINT,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    UNIQUE (GUID),
    UNIQUE (NAME));


-----------------------------------------------------------------------------
-- TEXPERIENCEOFFERLOCATION
-----------------------------------------------------------------------------

CREATE TABLE TEXPERIENCEOFFERLOCATION
(
    UIDPK BIGINT NOT NULL,
    EXPERIENCE_UID BIGINT NOT NULL,
    OFFER_UID BIGINT NOT NULL,
    OFFER_LOCATION VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    FOREIGN KEY (EXPERIENCE_UID) REFERENCES TEXPERIENCE (UIDPK)
    ,
    FOREIGN KEY (OFFER_UID) REFERENCES TMARKETTESTINGOFFER (UIDPK)
    ,
    UNIQUE (EXPERIENCE_UID, OFFER_UID, OFFER_LOCATION));


-----------------------------------------------------------------------------
-- TCARTORDER
-----------------------------------------------------------------------------

CREATE TABLE TCARTORDER
(
    UIDPK BIGINT NOT NULL,
    GUID VARCHAR(64) NOT NULL,
    BILLING_GUID VARCHAR(64),
    SHOPPINGCART_GUID VARCHAR(100) NOT NULL,
    PRIMARY KEY(UIDPK),
    UNIQUE (GUID),
    UNIQUE (SHOPPINGCART_GUID));


-----------------------------------------------------------------------------
-- TOAUTHACCESSTOKEN
-----------------------------------------------------------------------------

CREATE TABLE TOAUTHACCESSTOKEN
(
    UIDPK BIGINT NOT NULL,
    TOKEN_ID VARCHAR(255) NOT NULL,
    EXPIRY_DATE TIMESTAMP NOT NULL,
    TOKEN_TYPE VARCHAR(255) NOT NULL,
    USERNAME VARCHAR(255) NOT NULL,
    CREDENTIALS VARCHAR(255) NOT NULL,
    STORECODE VARCHAR(255) NOT NULL,
    CLIENT_ID VARCHAR(255) NOT NULL,
    CLIENT_SECRET VARCHAR(255),
    PRIMARY KEY(UIDPK),
    UNIQUE (TOKEN_ID));

CREATE  INDEX I_TOAT_EXPIRY_DATE ON TOAUTHACCESSTOKEN (EXPIRY_DATE);
