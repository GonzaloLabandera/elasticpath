CREATE TABLE JPA_GENERATED_KEYS (
        ID VARCHAR(30) NOT NULL,
        LAST_VALUE BIGINT NULL);

CREATE TABLE TDIGITALASSETS (
        UIDPK BIGINT NOT NULL,
        FILE_NAME VARCHAR(255) NOT NULL,
        EXPIRY_DAYS INT,
        MAX_DOWNLOAD_TIMES INT,
    PRIMARY KEY(UIDPK));
CREATE INDEX I_DA_FILE_NAME ON TDIGITALASSETS (FILE_NAME);

CREATE TABLE TTAXCODE (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        CODE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TTAXCODE_GUID_UNIQUE UNIQUE (GUID),
    CONSTRAINT TTAXCODE_CODE_UNIQUE UNIQUE (CODE));

CREATE TABLE TTAXJURISDICTION (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        REGION_CODE VARCHAR(255) NOT NULL,
        PRICE_CALCULATION_METH BOOLEAN default false,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TTAXJURISDICTION_GUID_UNIQUE UNIQUE (GUID));

CREATE TABLE TTAXCATEGORY (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        FIELD_MATCH_TYPE INT,
        TAX_JURISDICTION_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TTAXCATEGORY_FK_1 FOREIGN KEY (TAX_JURISDICTION_UID) REFERENCES TTAXJURISDICTION (UIDPK)
    ,
    CONSTRAINT TTAXCATEGORY_GUID_UNIQUE UNIQUE (GUID));
CREATE INDEX I_TAXCAT_TAXJUR_UID ON TTAXCATEGORY (TAX_JURISDICTION_UID);

CREATE TABLE TTAXREGION (
        UIDPK BIGINT NOT NULL,
        REGION_NAME VARCHAR(255) NOT NULL,
        TAX_CATEGORY_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TTAXREGION_FK_1 FOREIGN KEY (TAX_CATEGORY_UID) REFERENCES TTAXCATEGORY (UIDPK)
    );
CREATE INDEX I_TAXREG_TAXCAT_UID ON TTAXREGION (TAX_CATEGORY_UID);

CREATE TABLE TTAXVALUE (
        UIDPK BIGINT NOT NULL,
        TAX_REGION_UID BIGINT,
        TAX_CODE_UID BIGINT,
        VALUE DECIMAL(19,4),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TTAXVALUE_FK_1 FOREIGN KEY (TAX_REGION_UID) REFERENCES TTAXREGION (UIDPK)
    ,
    CONSTRAINT TTAXVALUE_FK_2 FOREIGN KEY (TAX_CODE_UID) REFERENCES TTAXCODE (UIDPK)
    );
CREATE INDEX I_TAXVAL_TAXREG_UID ON TTAXVALUE (TAX_REGION_UID);
CREATE INDEX I_TAXVAL_TAXCODE_UID ON TTAXVALUE (TAX_CODE_UID);

CREATE TABLE TCATALOG (
        UIDPK BIGINT NOT NULL,
        MASTER BOOLEAN NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        DEFAULT_LOCALE VARCHAR(20) NOT NULL,
        CATALOG_CODE VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCATALOG_CANDIDATE_KEYS UNIQUE (CATALOG_CODE));

CREATE TABLE TATTRIBUTE (
        UIDPK BIGINT NOT NULL,
        ATTRIBUTE_KEY VARCHAR(255) NOT NULL,
        LOCALE_DEPENDANT BOOLEAN default false NOT NULL,
        ATTRIBUTE_TYPE INT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        REQUIRED BOOLEAN default false,
        VALUE_LOOKUP_ENABLED BOOLEAN default false,
        MULTI_VALUE_ENABLED INTEGER default 0,
        ATTRIBUTE_USAGE INT NOT NULL,
        SYSTEM BOOLEAN default false,
        CATALOG_UID BIGINT,
        ATTR_GLOBAL BOOLEAN NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TATTRIBUTE_UNIQUE UNIQUE (ATTRIBUTE_KEY));

CREATE TABLE TSETTINGDEFINITION (
        UIDPK BIGINT NOT NULL,
        PATH VARCHAR(255) NOT NULL,
        DEFAULT_VALUE TEXT,
        VALUE_TYPE VARCHAR(255) NOT NULL,
        DESCRIPTION TEXT,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        MAX_OVERRIDE_VALUES BIGINT default 0,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSETTINGDEFINITION_UNIQUE UNIQUE (PATH));

CREATE TABLE TSETTINGMETADATA (
        UIDPK BIGINT NOT NULL,
        SETTING_DEFINITION_UID BIGINT,
        METADATA_KEY VARCHAR(255) NOT NULL,
        VALUE VARCHAR(2000),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSETTINGMETADATA_FK_1 FOREIGN KEY (SETTING_DEFINITION_UID) REFERENCES TSETTINGDEFINITION (UIDPK)
    );
CREATE INDEX I_SETTINGMETADATA_DEF_UID ON TSETTINGMETADATA (SETTING_DEFINITION_UID);

CREATE TABLE TSETTINGVALUE (
        UIDPK BIGINT NOT NULL,
        SETTING_DEFINITION_UID BIGINT,
        CONTEXT VARCHAR(255),
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        CONTEXT_VALUE TEXT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSETTINGVALUE_FK_1 FOREIGN KEY (SETTING_DEFINITION_UID) REFERENCES TSETTINGDEFINITION (UIDPK)
    );

CREATE TABLE TSTORE (
        UIDPK BIGINT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        STORECODE VARCHAR(64) NOT NULL,
        DESCRIPTION TEXT,
        URL VARCHAR(255),
        ENABLED BOOLEAN default false NOT NULL,
        DEFAULT_LOCALE VARCHAR(20),
        DEFAULT_CURRENCY CHAR(3),
        SUB_COUNTRY VARCHAR(200),
        COUNTRY VARCHAR(200) NOT NULL,
        TIMEZONE VARCHAR(50) NOT NULL,
        STORE_TYPE CHAR(3) NOT NULL,
        CONTENT_ENCODING VARCHAR(20) default 'utf-8',
        CREDIT_CARD_CVV2_ENABLED BOOLEAN default false NOT NULL,
        CC_PAYER_AUTH_ENABLED BOOLEAN default false NOT NULL,
        DISPLAY_OUT_OF_STOCK BOOLEAN default false NOT NULL,
        STORE_FULL_CREDIT_CARDS BOOLEAN default true NOT NULL,
        EMAIL_SENDER_NAME VARCHAR(255),
        EMAIL_SENDER_ADDRESS VARCHAR(255),
        STORE_ADMIN_EMAIL VARCHAR(255),
        CATALOG_UID BIGINT,
        STORE_STATE INT default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSTORE_FK_1 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    CONSTRAINT TSTORE_CANDIDATE_KEYS UNIQUE (NAME, STORECODE),
    CONSTRAINT TSTORECODE_UNIQUE UNIQUE (STORECODE));
CREATE INDEX I_STORE_CATALOG_UID ON TSTORE (CATALOG_UID);

CREATE TABLE TCUSTOMER (
        UIDPK BIGINT NOT NULL,
        USER_ID VARCHAR(255) NOT NULL,
        PREF_BILL_ADDRESS_UID BIGINT,
        PREF_SHIP_ADDRESS_UID BIGINT,
        CREATION_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        LAST_EDIT_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        STATUS INT NOT NULL,
        AUTHENTICATION_UID BIGINT,
        STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCUSTOMER_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TCUSTOMER_UNIQUE UNIQUE (GUID));
CREATE INDEX I_CUST_STORE_UID ON TCUSTOMER (STORE_UID);
CREATE INDEX I_C_USERID ON TCUSTOMER (USER_ID);
CREATE INDEX I_CUST_CR_DATE ON TCUSTOMER (CREATION_DATE);

CREATE TABLE TCUSTOMERAUTHENTICATION (
        UIDPK BIGINT NOT NULL,
        PASSWORD VARCHAR(255),
    PRIMARY KEY(UIDPK));

CREATE TABLE TCUSTOMERPROFILEVALUE (
        UIDPK BIGINT NOT NULL,
        ATTRIBUTE_UID BIGINT NOT NULL,
        ATTRIBUTE_TYPE INT NOT NULL,
        LOCALIZED_ATTRIBUTE_KEY VARCHAR(255) NOT NULL,
        SHORT_TEXT_VALUE VARCHAR(255),
        LONG_TEXT_VALUE TEXT,
        INTEGER_VALUE INT,
        DECIMAL_VALUE DECIMAL(19,2),
        BOOLEAN_VALUE BOOLEAN default false,
        DATE_VALUE TIMESTAMP WITH TIME ZONE,
        CUSTOMER_UID BIGINT,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCUSTOMERPROFILEVALUE_FK_1 FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    ,
    CONSTRAINT TCUSTOMERPROFILEVALUE_FK_2 FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    );
CREATE INDEX I_CPV_ATTR_UID ON TCUSTOMERPROFILEVALUE (ATTRIBUTE_UID);
CREATE INDEX I_CPV_CUID_ATTKEY ON TCUSTOMERPROFILEVALUE (CUSTOMER_UID, LOCALIZED_ATTRIBUTE_KEY);
CREATE INDEX I_CPV_STV_ATTVALUE ON TCUSTOMERPROFILEVALUE (SHORT_TEXT_VALUE);

CREATE TABLE TCUSTOMERDELETED (
        UIDPK BIGINT NOT NULL,
        CUSTOMER_UID BIGINT NOT NULL,
        DELETED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
    PRIMARY KEY(UIDPK));
CREATE INDEX I_CUD_DELETED_DATE ON TCUSTOMERDELETED (DELETED_DATE);

CREATE TABLE TADDRESS (
        UIDPK BIGINT NOT NULL,
        LAST_NAME VARCHAR(100),
        FIRST_NAME VARCHAR(100),
        PHONE_NUMBER VARCHAR(50),
        FAX_NUMBER VARCHAR(50),
        STREET_1 VARCHAR(200),
        STREET_2 VARCHAR(200),
        CITY VARCHAR(200),
        SUB_COUNTRY VARCHAR(200),
        ZIP_POSTAL_CODE VARCHAR(50),
        COUNTRY VARCHAR(200),
        COMMERCIAL BOOLEAN default false,
        GUID VARCHAR(64) NOT NULL,
        CUSTOMER_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TADDRESS_FK_1 FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    ,
    CONSTRAINT TADDRESS_UNIQUE UNIQUE (GUID));
CREATE INDEX I_ADDR_C_UID ON TADDRESS (CUSTOMER_UID);

CREATE TABLE TCATALOGSUPPORTEDLOCALE (
        UIDPK BIGINT NOT NULL,
        LOCALE VARCHAR(255) NOT NULL,
        CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCATALOGSUPPORTEDLOCALE_FK_1 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    );
CREATE INDEX I_CATSUPLOC_CATALOG_UID ON TCATALOGSUPPORTEDLOCALE (CATALOG_UID);

CREATE TABLE TCATEGORYTYPE (
        UIDPK BIGINT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        TEMPLATE VARCHAR(255) NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCATEGORYTYPE_FK_1 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    CONSTRAINT TCATEGORYTYPE_UNIQUE UNIQUE (NAME),
    CONSTRAINT TCATEGORYTYPE_GUID_UNIQUE UNIQUE (GUID));
CREATE INDEX I_CATTYPE_CATALOG_UID ON TCATEGORYTYPE (CATALOG_UID);

CREATE TABLE TCATEGORY (
        UIDPK BIGINT NOT NULL,
        TYPE VARCHAR(255) NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        PARENT_CATEGORY_UID BIGINT,
        ORDERING INT,
        CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCATEGORY_FK_1 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    CONSTRAINT TCATEGORY_FK_2 FOREIGN KEY (PARENT_CATEGORY_UID) REFERENCES TCATEGORY (UIDPK)
    );
CREATE INDEX I_CAT_CATALOG_UID ON TCATEGORY (CATALOG_UID);
CREATE INDEX I_CAT_PARENT_UID ON TCATEGORY (PARENT_CATEGORY_UID);
CREATE INDEX I_C_MODIFY_DATE ON TCATEGORY (LAST_MODIFIED_DATE);

CREATE TABLE TMASTERCATEGORY (
        UIDPK BIGINT NOT NULL,
        START_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        END_DATE TIMESTAMP WITH TIME ZONE,
        HIDDEN BOOLEAN default false,
        CATEGORY_TYPE_UID BIGINT NOT NULL,
        CODE VARCHAR(64) NOT NULL,
        IS_VIRTUAL BOOLEAN,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TMASTERCATEGORY_FK_1 FOREIGN KEY (CATEGORY_TYPE_UID) REFERENCES TCATEGORYTYPE (UIDPK)
    ,
    CONSTRAINT TCATEGORY_UNIQUE UNIQUE (CODE));
CREATE INDEX I_CAT_TYPE_UID ON TMASTERCATEGORY (CATEGORY_TYPE_UID);
CREATE INDEX I_C_SE_DATE ON TMASTERCATEGORY (START_DATE, END_DATE);

CREATE TABLE TLINKEDCATEGORY (
        UIDPK BIGINT NOT NULL,
        MASTER_CATEGORY_UID BIGINT,
        INCLUDE BOOLEAN default true,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TLINKEDCATEGORY_FK_1 FOREIGN KEY (MASTER_CATEGORY_UID) REFERENCES TCATEGORY (UIDPK)
    );
CREATE INDEX I_LCAT_MCAT_UID ON TLINKEDCATEGORY (MASTER_CATEGORY_UID);

CREATE TABLE TCATEGORYDELETED (
        UIDPK BIGINT NOT NULL,
        CATEGORY_UID BIGINT NOT NULL,
        DELETED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
    PRIMARY KEY(UIDPK));
CREATE INDEX I_CAD_DELETED_DATE ON TCATEGORYDELETED (DELETED_DATE);

CREATE TABLE TCATEGORYATTRIBUTEVALUE (
        UIDPK BIGINT NOT NULL,
        ATTRIBUTE_UID BIGINT NOT NULL,
        ATTRIBUTE_TYPE INT NOT NULL,
        LOCALIZED_ATTRIBUTE_KEY VARCHAR(255) NOT NULL,
        SHORT_TEXT_VALUE VARCHAR(255),
        LONG_TEXT_VALUE TEXT,
        INTEGER_VALUE INT,
        DECIMAL_VALUE DECIMAL(19,2),
        BOOLEAN_VALUE BOOLEAN default false,
        DATE_VALUE TIMESTAMP WITH TIME ZONE,
        CATEGORY_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCATEGORYATTRIBUTEVALUE_FK_1 FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    );
CREATE INDEX I_CAV_ATTR_UID ON TCATEGORYATTRIBUTEVALUE (ATTRIBUTE_UID);
CREATE INDEX I_CAV_CAT_UID ON TCATEGORYATTRIBUTEVALUE (CATEGORY_UID);

CREATE TABLE TCATEGORYLDF (
        UIDPK BIGINT NOT NULL,
        CATEGORY_UID BIGINT NOT NULL,
        URL VARCHAR(255),
        KEY_WORDS VARCHAR(255),
        DESCRIPTION VARCHAR(255),
        TITLE VARCHAR(255),
        DISPLAY_NAME VARCHAR(255),
        LOCALE VARCHAR(20) NOT NULL,
    PRIMARY KEY(UIDPK));
CREATE INDEX I_CLDF_CAT_UID ON TCATEGORYLDF (CATEGORY_UID);
CREATE INDEX I_CLDF_LOCALE_NAME ON TCATEGORYLDF (LOCALE, DISPLAY_NAME);

CREATE TABLE TCATEGORYTYPEATTRIBUTE (
        UIDPK BIGINT NOT NULL,
        ORDERING INT,
        ATTRIBUTE_UID BIGINT NOT NULL,
        CATEGORY_TYPE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCATEGORYTYPEATTRIBUTE_FK_1 FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    ,
    CONSTRAINT TCATEGORYTYPEATTRIBUTE_FK_2 FOREIGN KEY (CATEGORY_TYPE_UID) REFERENCES TCATEGORYTYPE (UIDPK)
    );
CREATE INDEX I_CTA_ATTR_UID ON TCATEGORYTYPEATTRIBUTE (ATTRIBUTE_UID);
CREATE INDEX I_CTA_TYPE_UID ON TCATEGORYTYPEATTRIBUTE (CATEGORY_TYPE_UID);

CREATE TABLE TCMUSER (
        UIDPK BIGINT NOT NULL,
        USER_NAME VARCHAR(255) NOT NULL,
        EMAIL VARCHAR(255) NOT NULL,
        FIRST_NAME VARCHAR(100),
        LAST_NAME VARCHAR(100),
        PASSWORD VARCHAR(255) NOT NULL,
        CREATION_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        LAST_LOGIN_DATE TIMESTAMP WITH TIME ZONE,
        LAST_CHANGED_PASSWORD_DATE TIMESTAMP WITH TIME ZONE,
        FAILED_LOGIN_ATTEMPTS INT default 0 NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        STATUS INT default 4 NOT NULL,
        ALL_WAREHOUSE_ACCESS BOOLEAN default true NOT NULL,
        ALL_CATALOG_ACCESS BOOLEAN default true NOT NULL,
        ALL_STORE_ACCESS BOOLEAN default true NOT NULL,
        ALL_PRICELIST_ACCESS BOOLEAN default true NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCMUSER_UNIQUE UNIQUE (USER_NAME),
    CONSTRAINT TCMUSER_EMAIL_UNIQUE UNIQUE (EMAIL),
    CONSTRAINT TCMUSER_GUID_UNIQUE UNIQUE (GUID));

CREATE TABLE TPASSWORDHISTORY (
        UIDPK BIGINT NOT NULL,
        OLD_PASSWORD VARCHAR(255) NOT NULL,
        EXPIRATION_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        CM_USER_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPASSWORDHISTORY_FK_1 FOREIGN KEY (CM_USER_UID) REFERENCES TCMUSER (UIDPK)
    );

CREATE TABLE TUSERROLE (
        UIDPK BIGINT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        DESCRIPTION VARCHAR(255),
        GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TUSERROLE_UNIQUE UNIQUE (NAME),
    CONSTRAINT TUSERROLE_GUID_UNIQUE UNIQUE (GUID));

CREATE TABLE TCMUSERROLEX (
        CM_USER_UID BIGINT NOT NULL,
        USER_ROLE_UID BIGINT NOT NULL,
    PRIMARY KEY(CM_USER_UID,USER_ROLE_UID),
    CONSTRAINT TCMUSERROLEX_FK_1 FOREIGN KEY (USER_ROLE_UID) REFERENCES TUSERROLE (UIDPK)
    ,
    CONSTRAINT TCMUSERROLEX_FK_2 FOREIGN KEY (CM_USER_UID) REFERENCES TCMUSER (UIDPK)
    );
CREATE INDEX I_CMUSER_ROLE_UID ON TCMUSERROLEX (USER_ROLE_UID);
CREATE INDEX I_CMUSER_USER_UID ON TCMUSERROLEX (CM_USER_UID);

CREATE TABLE TSHOPPER (
        UIDPK BIGINT NOT NULL,
        TYPE VARCHAR(255) default 'SHOPPER' NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        CUSTOMER_GUID VARCHAR(64),
        STORECODE VARCHAR(64),
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_CUSTOMER FOREIGN KEY (CUSTOMER_GUID) REFERENCES TCUSTOMER (GUID)
    ,
    CONSTRAINT TSHOPPER_GUID_UNIQUE UNIQUE (GUID));

CREATE TABLE TCUSTOMERGROUP (
        UIDPK BIGINT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCUSTOMERGROUP_UNIQUE UNIQUE (NAME),
    CONSTRAINT TCUSTOMERGROUP_GUID_UNIQUE UNIQUE (GUID));

CREATE TABLE TCUSTOMERGROUPROLEX (
        UIDPK BIGINT NOT NULL,
        CUSTOMER_GROUP_UID BIGINT NOT NULL,
        CUSTOMER_ROLE VARCHAR(255),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCUSTOMERGROUPROLEX_FK_1 FOREIGN KEY (CUSTOMER_GROUP_UID) REFERENCES TCUSTOMERGROUP (UIDPK)
    );
CREATE INDEX I_CGRX_GROUP_UID ON TCUSTOMERGROUPROLEX (CUSTOMER_GROUP_UID);

CREATE TABLE TCUSTOMERGROUPX (
        CUSTOMER_UID BIGINT NOT NULL,
        CUSTOMERGROUP_UID BIGINT NOT NULL,
    CONSTRAINT TCUSTOMERGROUPX_FK_1 FOREIGN KEY (CUSTOMERGROUP_UID) REFERENCES TCUSTOMERGROUP (UIDPK)
    ,
    CONSTRAINT TCUSTOMERGROUPX_FK_2 FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    );
CREATE INDEX I_CGX_GROUP_UID ON TCUSTOMERGROUPX (CUSTOMERGROUP_UID);
CREATE INDEX I_CGX_CUSTOMER_UID ON TCUSTOMERGROUPX (CUSTOMER_UID);

CREATE TABLE TCUSTOMERSESSION (
        UIDPK BIGINT NOT NULL,
        CREATION_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        LAST_ACCESSED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        SHOPPER_UID BIGINT,
        LOCALE VARCHAR(255),
        CURRENCY VARCHAR(3),
        GUID VARCHAR(64) NOT NULL,
        IP_ADDRESS VARCHAR(255),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCUSTOMERSESSION_FK_1 FOREIGN KEY (SHOPPER_UID) REFERENCES TSHOPPER (UIDPK)
    ,
    CONSTRAINT TCUSTOMERSESSION_UNIQUE UNIQUE (GUID));
CREATE INDEX I_CS_SHOPPER_UID ON TCUSTOMERSESSION (SHOPPER_UID);
CREATE INDEX I_CS_ACS_DATE ON TCUSTOMERSESSION (LAST_ACCESSED_DATE);
CREATE INDEX I_CS_CRT_DATE ON TCUSTOMERSESSION (CREATION_DATE);

CREATE TABLE TCUSTOMERCREDITCARD (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        CARD_TYPE VARCHAR(50) NOT NULL,
        CARD_HOLDER_NAME VARCHAR(100) NOT NULL,
        CARD_NUMBER VARCHAR(255) NOT NULL,
        EXPIRY_YEAR VARCHAR(4) NOT NULL,
        EXPIRY_MONTH VARCHAR(2) NOT NULL,
        START_YEAR VARCHAR(4),
        START_MONTH VARCHAR(2),
        ISSUE_NUMBER INT,
        DEFAULT_CARD INTEGER,
        CUSTOMER_UID BIGINT NOT NULL,
        BILLING_ADDRESS_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCUSTOMERCREDITCARD_FK_1 FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    ,
    CONSTRAINT TCUSTOMERCREDITCARD_FK_2 FOREIGN KEY (BILLING_ADDRESS_UID) REFERENCES TADDRESS (UIDPK)
    ,
    CONSTRAINT TCUSTCCRD_GUID_UNIQUE UNIQUE (GUID));
CREATE INDEX I_CCC_CUSTOMER_UID ON TCUSTOMERCREDITCARD (CUSTOMER_UID);
CREATE INDEX I_CCC_BA_UID ON TCUSTOMERCREDITCARD (BILLING_ADDRESS_UID);

CREATE TABLE TWAREHOUSEADDRESS (
        UIDPK BIGINT NOT NULL,
        STREET_1 VARCHAR(200) NOT NULL,
        STREET_2 VARCHAR(200),
        CITY VARCHAR(200) NOT NULL,
        SUB_COUNTRY VARCHAR(200),
        ZIP_POSTAL_CODE VARCHAR(50) NOT NULL,
        COUNTRY VARCHAR(200) NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE TABLE TWAREHOUSE (
        UIDPK BIGINT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        PICK_DELAY INT,
        ADDRESS_UID BIGINT,
        CODE VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TWAREHOUSE_FK_1 FOREIGN KEY (ADDRESS_UID) REFERENCES TWAREHOUSEADDRESS (UIDPK)
    ,
    CONSTRAINT TWAREHOUSE_CODE_UNIQUE UNIQUE (CODE));
CREATE INDEX I_WAREHOUSE_ADDRESS_UID ON TWAREHOUSE (ADDRESS_UID);

CREATE TABLE TIMPORTJOB (
        UIDPK BIGINT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        CSV_FILE_NAME VARCHAR(255) NOT NULL,
        COL_DELIMETER CHAR(1),
        TEXT_QUALIFIER CHAR(1),
        DATA_TYPE_NAME VARCHAR(255) NOT NULL,
        IMPORT_TYPE INT NOT NULL,
        MAX_ALLOW_ERRORS INT NOT NULL,
        CATALOG_UID BIGINT,
        STORE_UID BIGINT,
        WAREHOUSE_UID BIGINT,
        DEPENDENT_OBJ_GUID VARCHAR(64),
        GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TIMPORTJOB_FK_1 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    CONSTRAINT TIMPORTJOB_FK_2 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TIMPORTJOB_FK_3 FOREIGN KEY (WAREHOUSE_UID) REFERENCES TWAREHOUSE (UIDPK)
    ,
    CONSTRAINT TIMPORTJOB_UNIQUE UNIQUE (NAME),
    CONSTRAINT TIMPORTJOB_GUID_UNIQUE UNIQUE (GUID));
CREATE INDEX I_IMPORTJOB_CATALOG_UID ON TIMPORTJOB (CATALOG_UID);
CREATE INDEX I_IMPORTJOB_STORE_UID ON TIMPORTJOB (STORE_UID);
CREATE INDEX I_IMPORTJOB_WAREHOUSE_UID ON TIMPORTJOB (WAREHOUSE_UID);

CREATE TABLE TIMPORTMAPPINGS (
        UIDPK BIGINT NOT NULL,
        IMPORT_JOB_UID BIGINT NOT NULL,
        COL_NUMBER INT NOT NULL,
        IMPORT_FIELD_NAME VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TIMPORTMAPPINGS_FK_1 FOREIGN KEY (IMPORT_JOB_UID) REFERENCES TIMPORTJOB (UIDPK)
    );
CREATE INDEX I_IMAP_JOB_UID ON TIMPORTMAPPINGS (IMPORT_JOB_UID);

CREATE TABLE TORDERADDRESS (
        UIDPK BIGINT NOT NULL,
        LAST_NAME VARCHAR(100),
        FIRST_NAME VARCHAR(100),
        PHONE_NUMBER VARCHAR(50),
        FAX_NUMBER VARCHAR(50),
        STREET_1 VARCHAR(200),
        STREET_2 VARCHAR(200),
        CITY VARCHAR(200),
        SUB_COUNTRY VARCHAR(200),
        ZIP_POSTAL_CODE VARCHAR(50),
        COUNTRY VARCHAR(200),
        COMMERCIAL BOOLEAN default false,
        GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TORDERADDRESS_UNIQUE UNIQUE (GUID));
CREATE INDEX I_ORDERADDRESS_FIRST_NAME ON TORDERADDRESS (FIRST_NAME );
CREATE INDEX I_ORDERADDRESS_LAST_NAME ON TORDERADDRESS (LAST_NAME );
CREATE INDEX I_ORDERADDRESS_ZIP_POSTAL_CODE ON TORDERADDRESS (ZIP_POSTAL_CODE );
CREATE INDEX I_ORDERADDRESS_PHONE_NUMBER ON TORDERADDRESS (PHONE_NUMBER );

CREATE TABLE TORDER (
        UIDPK BIGINT NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        CREATED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        IP_ADDRESS VARCHAR(255),
        ORDER_BILLING_ADDRESS_UID BIGINT,
        TOTAL DECIMAL(19,2),
        STATUS VARCHAR(20),
        ORDER_NUMBER VARCHAR(64) NOT NULL,
        EXTERNAL_ORDER_NUMBER VARCHAR(64),
        CUSTOMER_UID BIGINT,
        LOCALE VARCHAR(5) NOT NULL,
        CURRENCY VARCHAR(3),
        STORE_UID BIGINT,
        CREATED_BY BIGINT,
        ORDER_SOURCE VARCHAR(100),
        EXCHANGE_ORDER BOOLEAN default false,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TORDER_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TORDER_FK_2 FOREIGN KEY (ORDER_BILLING_ADDRESS_UID) REFERENCES TORDERADDRESS (UIDPK)
    ,
    CONSTRAINT TORDER_FK_3 FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    ,
    CONSTRAINT TORDER_UNIQUE UNIQUE (ORDER_NUMBER));
CREATE INDEX I_O_STORE_UID ON TORDER (STORE_UID);
CREATE INDEX I_O_OBA_UID ON TORDER (ORDER_BILLING_ADDRESS_UID);
CREATE INDEX I_O_CUSTOMER_UID ON TORDER (CUSTOMER_UID);
CREATE INDEX I_O_MODIFY_DATE ON TORDER (LAST_MODIFIED_DATE);
CREATE INDEX I_O_CREATED_DATE ON TORDER (CREATED_DATE);
CREATE INDEX I_O_STATUS ON TORDER (STATUS);
CREATE INDEX I_O_TOTAL ON TORDER (CURRENCY, TOTAL);

CREATE TABLE TORDERNUMBERGENERATOR (
        UIDPK BIGINT default 1 NOT NULL,
        NEXT_ORDER_NUMBER VARCHAR(100) NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE TABLE TORDERLOCK (
        UIDPK BIGINT NOT NULL,
        ORDER_UID BIGINT NOT NULL,
        USER_UID BIGINT NOT NULL,
        CREATED_DATE BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TORDERLOCK_FK_1 FOREIGN KEY (ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    CONSTRAINT TORDERLOCK_FK_2 FOREIGN KEY (USER_UID) REFERENCES TCMUSER (UIDPK)
    ,
    CONSTRAINT TORDERLOCK_UNIQUE UNIQUE (ORDER_UID));
CREATE INDEX I_ORDERLOCK_USER_UID ON TORDERLOCK (USER_UID);

CREATE TABLE TORDERAUDIT (
        UIDPK BIGINT NOT NULL,
        CREATED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        CREATED_BY BIGINT,
        DETAIL TEXT,
        ORDER_UID BIGINT,
        ORIGINATOR_TYPE VARCHAR(30) NOT NULL,
        TITLE VARCHAR(255) NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TORDERAUDIT_FK_1 FOREIGN KEY (ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    CONSTRAINT TORDERAUDIT_FK_2 FOREIGN KEY (CREATED_BY) REFERENCES TCMUSER (UIDPK)
    );
CREATE INDEX I_ON_ORDER_UID ON TORDERAUDIT (ORDER_UID);
CREATE INDEX I_ON_USER_UID ON TORDERAUDIT (CREATED_BY);

CREATE TABLE TGIFTCERTIFICATE (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        GIFT_CERTIFICATE_CODE VARCHAR(64),
        CREATED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        RECIPIENT_NAME VARCHAR(255),
        SENDER_NAME VARCHAR(255),
        MESSAGE VARCHAR(255),
        THEME VARCHAR(255),
        PURCHASE_AMOUNT DECIMAL(19,2),
        CURRENCY VARCHAR(255),
        RECEPIENT_EMAIL VARCHAR(255),
        CUSTOMER_UID BIGINT,
        STORE_UID BIGINT NOT NULL,
        ORDER_GUID VARCHAR(64),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TGIFTCERTIFICATE_FK_1 FOREIGN KEY (CUSTOMER_UID) REFERENCES TCUSTOMER (UIDPK)
    ,
    CONSTRAINT TGIFTCERTIFICATE_FK_2 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    );
CREATE INDEX I_GCERT_CUSTOMER_UID ON TGIFTCERTIFICATE (CUSTOMER_UID);
CREATE INDEX I_GCERT_STORE_UID ON TGIFTCERTIFICATE (STORE_UID);
CREATE INDEX I_P_GCERT_CODE ON TGIFTCERTIFICATE (GIFT_CERTIFICATE_CODE);
CREATE INDEX I_ORDER_GUID ON TGIFTCERTIFICATE (ORDER_GUID);

CREATE TABLE TSHIPPINGREGION (
        UIDPK BIGINT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        REGION_STR VARCHAR(2000),
        GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSHIPPINGREGION_UNIQUE UNIQUE (NAME),
    CONSTRAINT TSHIPPINGREGION_GUID_UNIQUE UNIQUE (GUID));

CREATE TABLE TSHIPPINGCOSTCALCULATIONMETHOD (
        UIDPK BIGINT NOT NULL,
        TYPE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE TABLE TSHIPPINGCOSTCALCULATIONPARAM (
        UIDPK BIGINT NOT NULL,
        PARAM_KEY VARCHAR(255) NOT NULL,
        VALUE VARCHAR(255) NOT NULL,
        DISPLAY_TEXT VARCHAR(255) NOT NULL,
        SCCM_UID BIGINT,
        CURRENCY CHAR(3),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSHIPPINGCOSTCALCULATIONPARAM_FK_1 FOREIGN KEY (SCCM_UID) REFERENCES TSHIPPINGCOSTCALCULATIONMETHOD (UIDPK)
    );
CREATE INDEX I_SCCP_SCCM_UID ON TSHIPPINGCOSTCALCULATIONPARAM (SCCM_UID);

CREATE TABLE TSHIPPINGSERVICELEVEL (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        SHIPPING_REGION_UID BIGINT NOT NULL,
        STORE_UID BIGINT NOT NULL,
        SCCM_UID BIGINT NOT NULL,
        CARRIER VARCHAR(255),
        CODE VARCHAR(64) NOT NULL,
        DEFAULT_COST DECIMAL(19,2),
        ENABLED BOOLEAN NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSHIPPINGSERVICELEVEL_FK_1 FOREIGN KEY (SHIPPING_REGION_UID) REFERENCES TSHIPPINGREGION (UIDPK)
    ,
    CONSTRAINT TSHIPPINGSERVICELEVEL_FK_2 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TSHIPPINGSERVICELEVEL_FK_3 FOREIGN KEY (SCCM_UID) REFERENCES TSHIPPINGCOSTCALCULATIONMETHOD (UIDPK)
    ,
    CONSTRAINT TSHIPPINGSERVICELEVEL_UNIQUE UNIQUE (GUID),
    CONSTRAINT TSHIPPINGSRVLEVEL_CODE_UNIQUE UNIQUE (CODE));
CREATE INDEX I_SSL_STORE_UID ON TSHIPPINGSERVICELEVEL (STORE_UID);
CREATE INDEX I_SSL_SR_UID ON TSHIPPINGSERVICELEVEL (SHIPPING_REGION_UID);
CREATE INDEX I_SSL_SCCM_UID ON TSHIPPINGSERVICELEVEL (SCCM_UID);
CREATE INDEX I_SSL_MODIFY_DATE ON TSHIPPINGSERVICELEVEL (LAST_MODIFIED_DATE);

CREATE TABLE TPICKLIST (
        UIDPK BIGINT NOT NULL,
        CREATED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        WAREHOUSE_UID BIGINT,
        CREATED_BY BIGINT,
        ACTIVE BOOLEAN default false,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPICKLIST_FK_1 FOREIGN KEY (WAREHOUSE_UID) REFERENCES TWAREHOUSE (UIDPK)
    ,
    CONSTRAINT TPICKLIST_FK_2 FOREIGN KEY (CREATED_BY) REFERENCES TCMUSER (UIDPK)
    );
CREATE INDEX I_PL_WAREHOUSE_UID ON TPICKLIST (WAREHOUSE_UID);
CREATE INDEX I_PL_CREATED_BY ON TPICKLIST (CREATED_BY);

CREATE TABLE TORDERSHIPMENT (
        UIDPK BIGINT NOT NULL,
        TYPE VARCHAR(255) NOT NULL,
        STATUS VARCHAR(20),
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        CREATED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        SHIPMENT_DATE TIMESTAMP WITH TIME ZONE,
        CARRIER VARCHAR(255),
        SERVICE_LEVEL VARCHAR(255),
        TRACKING_CODE VARCHAR(255),
        ITEM_SUBTOTAL DECIMAL(19,2),
        BEFORE_TAX_SHIPPING_COST DECIMAL(19,2),
        ITEM_TAX DECIMAL(19,2),
        SUBTOTAL_DISCOUNT DECIMAL(19,2),
        SHIPPING_COST DECIMAL(19,2),
        SHIPPING_TAX DECIMAL(19,2),
        SHIPPING_SUBTOTAL DECIMAL(19,2),
        INCLUSIVE_TAX BOOLEAN,
        ORDER_ADDRESS_UID BIGINT,
        ORDER_UID BIGINT,
        SERVICE_LEVEL_UID BIGINT,
        PICKLIST_UID BIGINT,
        SHIPMENT_NUMBER VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TORDERSHIPMENT_FK_1 FOREIGN KEY (ORDER_ADDRESS_UID) REFERENCES TORDERADDRESS (UIDPK)
    ,
    CONSTRAINT TORDERSHIPMENT_FK_2 FOREIGN KEY (SERVICE_LEVEL_UID) REFERENCES TSHIPPINGSERVICELEVEL (UIDPK)
    ,
    CONSTRAINT TORDERSHIPMENT_FK_3 FOREIGN KEY (ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    CONSTRAINT TORDERSHIPMENT_FK_4 FOREIGN KEY (PICKLIST_UID) REFERENCES TPICKLIST (UIDPK)
    ,
    CONSTRAINT TORDERSHIPMENT_UNIQUE UNIQUE (SHIPMENT_NUMBER));
CREATE INDEX I_OSHIP_SHIPLEVSERV ON TORDERSHIPMENT (SERVICE_LEVEL_UID);
CREATE INDEX I_OSHIP_OA_UID ON TORDERSHIPMENT (ORDER_ADDRESS_UID);
CREATE INDEX I_OSHIP_ORDER_UID ON TORDERSHIPMENT (ORDER_UID);
CREATE INDEX I_OSHIP_PICK_LIST ON TORDERSHIPMENT (PICKLIST_UID);
CREATE INDEX I_OSHIP_MDFY_DATE ON TORDERSHIPMENT (LAST_MODIFIED_DATE);
CREATE INDEX I_OSHIP_STATUS ON TORDERSHIPMENT (STATUS);

CREATE TABLE TORDERPAYMENT (
        UIDPK BIGINT NOT NULL,
        CREATED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        CARD_TYPE VARCHAR(50),
        CARD_HOLDER_NAME VARCHAR(100),
        CARD_NUMBER VARCHAR(255),
        MASKED_CARD_NUMBER VARCHAR(255),
        EXPIRY_YEAR VARCHAR(4),
        EXPIRY_MONTH VARCHAR(2),
        START_DATE TIMESTAMP WITH TIME ZONE,
        ISSUE_NUMBER VARCHAR(100),
        PAYMENT_GATEWAY VARCHAR(100),
        AMOUNT DECIMAL(19,2),
        REFERENCE_ID VARCHAR(50),
        REQUEST_TOKEN VARCHAR(255),
        AUTHORIZATION_CODE VARCHAR(50),
        TRANSACTION_TYPE VARCHAR(25),
        CURRENCY VARCHAR(10),
        EMAIL VARCHAR(100),
        STATUS VARCHAR(20),
        ORDER_UID BIGINT,
        GIFTCERTIFICATE_UID BIGINT,
        ORDERSHIPMENT_UID BIGINT,
        PAYMENT_FOR_SUBSCRIPTIONS INT,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TORDERPAYMENT_FK_1 FOREIGN KEY (ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    CONSTRAINT TORDERPAYMENT_FK_2 FOREIGN KEY (GIFTCERTIFICATE_UID) REFERENCES TGIFTCERTIFICATE (UIDPK)
    ,
    CONSTRAINT TORDERPAYMENT_FK_3 FOREIGN KEY (ORDERSHIPMENT_UID) REFERENCES TORDERSHIPMENT (UIDPK)
    );
CREATE INDEX I_OP_GCERT_BY ON TORDERPAYMENT (GIFTCERTIFICATE_UID);
CREATE INDEX I_OP_ORDERSHIPMENT_BY ON TORDERPAYMENT (ORDERSHIPMENT_UID);
CREATE INDEX I_OP_ORDER_UID ON TORDERPAYMENT (ORDER_UID);

CREATE TABLE TGIFTCERTIFICATETRANSACTION (
        UIDPK BIGINT NOT NULL,
        CREATED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        AMOUNT DECIMAL(19,2),
        AUTHORIZATION_CODE VARCHAR(50),
        TRANSACTION_TYPE VARCHAR(25),
        GIFTCERTIFICATE_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TGIFTCERTIFICATETRANSACTION_FK_1 FOREIGN KEY (GIFTCERTIFICATE_UID) REFERENCES TGIFTCERTIFICATE (UIDPK)
    );
CREATE INDEX I_GCT_GCERT_BY ON TGIFTCERTIFICATETRANSACTION (GIFTCERTIFICATE_UID);

CREATE TABLE TRMAGENERATOR (
        UIDPK BIGINT default 1 NOT NULL,
        NEXT_RMA VARCHAR(100) NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE TABLE TORDERRETURN (
        UIDPK BIGINT NOT NULL,
        CREATED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        RMA_CODE VARCHAR(255),
        RETURN_COMMENT VARCHAR(2000),
        ORDER_UID BIGINT,
        CREATED_BY BIGINT,
        STATUS VARCHAR(50),
        RETURN_TYPE VARCHAR(255),
        PHYSICAL_RETURN BOOLEAN default false,
        EXCHANGE_ORDER_UID BIGINT,
        ORDER_PAYMENT_UID BIGINT,
        LESS_RESTOCK_AMOUNT DECIMAL(19,2),
        SHIPPING_COST DECIMAL(19,2) default 0 NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        RECEIVED_BY BIGINT,
        VERSION INT,
        ORDER_RETURN_ADDRESS_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TORDERRETURN_FK_1 FOREIGN KEY (ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    CONSTRAINT TORDERRETURN_FK_2 FOREIGN KEY (CREATED_BY) REFERENCES TCMUSER (UIDPK)
    ,
    CONSTRAINT TORDERRETURN_FK_3 FOREIGN KEY (RECEIVED_BY) REFERENCES TCMUSER (UIDPK)
    ,
    CONSTRAINT TORDERRETURN_FK_4 FOREIGN KEY (EXCHANGE_ORDER_UID) REFERENCES TORDER (UIDPK)
    ,
    CONSTRAINT TORDERRETURN_FK_5 FOREIGN KEY (ORDER_RETURN_ADDRESS_UID) REFERENCES TORDERADDRESS (UIDPK)
    );
CREATE INDEX I_OR_ORDER_UID ON TORDERRETURN(ORDER_UID);
CREATE INDEX I_OR_CREATED_BY ON TORDERRETURN(CREATED_BY);
CREATE INDEX I_OR_RECEIVED_BY ON TORDERRETURN(RECEIVED_BY);
CREATE INDEX I_OR_EXCHANGE_ORDER_UID ON TORDERRETURN(EXCHANGE_ORDER_UID);
CREATE INDEX I_OR_RETURN_ADDRESS ON TORDERRETURN(ORDER_RETURN_ADDRESS_UID);
CREATE INDEX I_OR_RMA_CODE ON TORDERRETURN(RMA_CODE);

CREATE TABLE TSHIPMENTTAX (
        UIDPK BIGINT NOT NULL,
        TAX_CATEGORY_NAME VARCHAR(255) NOT NULL,
        TAX_CATEGORY_DISPLAY_NAME VARCHAR(255) NOT NULL,
        VALUE DECIMAL(19,2),
        ORDER_SHIPMENT_UID BIGINT,
        ORDER_RETURN_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSHIPMENTTAX_FK_1 FOREIGN KEY (ORDER_SHIPMENT_UID) REFERENCES TORDERSHIPMENT (UIDPK)
    ,
    CONSTRAINT TSHIPMENTTAX_FK_2 FOREIGN KEY (ORDER_RETURN_UID) REFERENCES TORDERRETURN (UIDPK)
    );
CREATE INDEX I_ST_ORDER_SHIPMENT_UID ON TSHIPMENTTAX (ORDER_SHIPMENT_UID);
CREATE INDEX I_ST_OR_UID ON TSHIPMENTTAX (ORDER_RETURN_UID);

CREATE TABLE TPRODUCTTYPE (
        UIDPK BIGINT NOT NULL,
        WITH_MULTIPLE_SKUS BOOLEAN default false NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        TEMPLATE VARCHAR(255) NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        TAX_CODE_UID BIGINT NOT NULL,
        CATALOG_UID BIGINT NOT NULL,
        EXCLUDE_FROM_DISCOUNT BOOLEAN default false NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCTTYPE_FK_1 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    CONSTRAINT TPRODUCTTYPE_FK_2 FOREIGN KEY (TAX_CODE_UID) REFERENCES TTAXCODE (UIDPK)
    ,
    CONSTRAINT TPRODUCTTYPE_UNIQUE UNIQUE (NAME),
    CONSTRAINT TPRODUCTTYPE_GUID_UNIQUE UNIQUE (GUID));
CREATE INDEX I_PRODTYPE_CATALOG_UID ON TPRODUCTTYPE (CATALOG_UID);
CREATE INDEX I_PRODTYPE_TAXCODE_UID ON TPRODUCTTYPE (TAX_CODE_UID);

CREATE TABLE TBRAND (
        UIDPK BIGINT NOT NULL,
        CODE VARCHAR(255) NOT NULL,
        IMAGE_URL VARCHAR(255),
        CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TBRAND_FK_1 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    CONSTRAINT TBRAND_UNIQUE UNIQUE (CODE));
CREATE INDEX I_B_CATALOG_UID ON TBRAND (CATALOG_UID);

CREATE TABLE TPRODUCT (
        UIDPK BIGINT NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        START_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        END_DATE TIMESTAMP WITH TIME ZONE,
        IMAGE VARCHAR(255),
        PRODUCT_TYPE_UID BIGINT NOT NULL,
        BRAND_UID BIGINT,
        DEFAULT_SKU_UID BIGINT,
        CODE VARCHAR(64) NOT NULL,
        MIN_QUANTITY INT default 1 NOT NULL,
        EXPECTED_RELEASE_DATE TIMESTAMP WITH TIME ZONE,
        HIDDEN BOOLEAN default false,
        SALES_COUNT INT default 0,
        TAX_CODE_UID BIGINT,
        PRE_OR_BACK_ORDER_LIMIT INT,
        AVAILABILITY_CRITERIA VARCHAR(30),
        TYPE VARCHAR(255),
        NOT_SOLD_SEPARATELY BOOLEAN default false,
        CALCULATED BOOLEAN default false,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCT_FK_1 FOREIGN KEY (PRODUCT_TYPE_UID) REFERENCES TPRODUCTTYPE (UIDPK)
    ,
    CONSTRAINT TPRODUCT_FK_2 FOREIGN KEY (BRAND_UID) REFERENCES TBRAND (UIDPK)
    ,
    CONSTRAINT TPRODUCT_FK_3 FOREIGN KEY (TAX_CODE_UID) REFERENCES TTAXCODE (UIDPK)
    ,
    CONSTRAINT TPRODUCT_UNIQUE UNIQUE (CODE));
CREATE INDEX I_P_TYPE_UID ON TPRODUCT(PRODUCT_TYPE_UID);
CREATE INDEX I_P_BRAND_UID ON TPRODUCT(BRAND_UID);
CREATE INDEX I_P_TAXCODE_UID ON TPRODUCT(TAX_CODE_UID);
CREATE INDEX I_P_MODIFY_DATE ON TPRODUCT(LAST_MODIFIED_DATE);
CREATE INDEX I_P_SE_DATE ON TPRODUCT(START_DATE, END_DATE);

CREATE TABLE TPRODUCTATTRIBUTEVALUE (
        UIDPK BIGINT NOT NULL,
        ATTRIBUTE_UID BIGINT NOT NULL,
        ATTRIBUTE_TYPE INT NOT NULL,
        LOCALIZED_ATTRIBUTE_KEY VARCHAR(255) NOT NULL,
        SHORT_TEXT_VALUE VARCHAR(255),
        LONG_TEXT_VALUE TEXT,
        INTEGER_VALUE INT,
        DECIMAL_VALUE DECIMAL(19,2),
        BOOLEAN_VALUE BOOLEAN default false,
        DATE_VALUE TIMESTAMP WITH TIME ZONE,
        PRODUCT_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCTATTRIBUTEVALUE_FK_1 FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    ,
    CONSTRAINT TPRODUCTATTRIBUTEVALUE_FK_2 FOREIGN KEY (PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    );
CREATE INDEX I_PAV_ATTR_UID ON TPRODUCTATTRIBUTEVALUE (ATTRIBUTE_UID);
CREATE INDEX I_PAV_PROD_UID ON TPRODUCTATTRIBUTEVALUE (PRODUCT_UID);

CREATE TABLE TPRODUCTCATEGORY (
        UIDPK BIGINT NOT NULL,
        PRODUCT_UID BIGINT NOT NULL,
        CATEGORY_UID BIGINT NOT NULL,
        FEAT_PRODUCT_ORDER INT default 0,
        DEFAULT_CATEGORY BOOLEAN,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCTCATEGORY_FK_1 FOREIGN KEY (PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    CONSTRAINT TPRODUCTCATEGORY_FK_2 FOREIGN KEY (CATEGORY_UID) REFERENCES TCATEGORY (UIDPK)
    ,
    CONSTRAINT TPRODUCTCATEGORY_UNIQUE UNIQUE (PRODUCT_UID, CATEGORY_UID));
CREATE INDEX I_PC_PUID ON TPRODUCTCATEGORY (PRODUCT_UID);
CREATE INDEX I_PC_CUID ON TPRODUCTCATEGORY (CATEGORY_UID);

CREATE TABLE TPRODUCTLDF (
        UIDPK BIGINT NOT NULL,
        PRODUCT_UID BIGINT NOT NULL,
        URL VARCHAR(255),
        KEY_WORDS VARCHAR(255),
        DESCRIPTION VARCHAR(255),
        TITLE VARCHAR(255),
        DISPLAY_NAME VARCHAR(255),
        LOCALE VARCHAR(20) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCTLDF_FK_1 FOREIGN KEY (PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    );
CREATE INDEX I_PLDF_PUID ON TPRODUCTLDF (PRODUCT_UID);
CREATE INDEX I_PLDF_LOCALE_NAME ON TPRODUCTLDF (LOCALE, DISPLAY_NAME);

CREATE TABLE TPRODUCTSKU (
        UIDPK BIGINT NOT NULL,
        START_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        END_DATE TIMESTAMP WITH TIME ZONE,
        SKUCODE VARCHAR(255) NOT NULL,
        GUID VARCHAR(255) NOT NULL,
        IMAGE VARCHAR(255),
        PRODUCT_UID BIGINT NOT NULL,
        SHIPPABLE BOOLEAN default true,
        WEIGHT DECIMAL(19,2) default 0,
        HEIGHT DECIMAL(19,2) default 0,
        WIDTH DECIMAL(19,2) default 0,
        LENGTH DECIMAL(19,2) default 0,
        PRE_OR_BACK_ORDERED_QUANTITY INT,
        DIGITAL BOOLEAN default false,
        DIGITAL_ASSET_UID BIGINT,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCTSKU_FK_1 FOREIGN KEY (PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    CONSTRAINT TPRODUCTSKU_FK_2 FOREIGN KEY (DIGITAL_ASSET_UID) REFERENCES TDIGITALASSETS (UIDPK)
    ,
    CONSTRAINT TPRODUCTSKU_UNIQUE UNIQUE (SKUCODE),
    CONSTRAINT TPRODUCTSKU_GUID UNIQUE (GUID));
CREATE INDEX I_PS_PRODUCT_UID ON TPRODUCTSKU (PRODUCT_UID);
CREATE INDEX I_PS_DIGASSET_UID ON TPRODUCTSKU (DIGITAL_ASSET_UID);
CREATE INDEX I_PS_SE_DATE ON TPRODUCTSKU (START_DATE, END_DATE);

CREATE TABLE TINVENTORY (
        UIDPK BIGINT NOT NULL,
        QUANTITY_ON_HAND INT,
        RESERVED_QUANTITY INT,
        REORDER_MINIMUM INT default 0,
        REORDER_QUANTITY INT default 0,
        RESTOCK_DATE TIMESTAMP WITH TIME ZONE,
        ALLOCATED_QUANTITY INT,
        WAREHOUSE_UID BIGINT NOT NULL,
        PRODUCTSKU_SKUCODE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TINVENTORY_UNIQUE UNIQUE (WAREHOUSE_UID, PRODUCTSKU_SKUCODE));
CREATE INDEX I_INVENTORY_WAREHOUSE_UID ON TINVENTORY (WAREHOUSE_UID);
CREATE INDEX I_INVENTORY_SKUCODE ON TINVENTORY (PRODUCTSKU_SKUCODE);

CREATE TABLE TINVENTORYJOURNAL (
        UIDPK BIGINT NOT NULL,
        ALLOCATED_QUANTITY_DELTA INT NOT NULL,
        QUANTITY_ON_HAND_DELTA INT NOT NULL,
        SKUCODE VARCHAR(255) NOT NULL,
        WAREHOUSE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK));
CREATE INDEX I_INV_JOURNAL_SKU_WAREHOUSE ON TINVENTORYJOURNAL (SKUCODE, WAREHOUSE_UID);

CREATE TABLE TINVENTORYJOURNALLOCK (
        UIDPK BIGINT NOT NULL,
        SKUCODE VARCHAR(255) NOT NULL,
        WAREHOUSE_UID BIGINT NOT NULL,
        LOCKCOUNT INT NOT NULL,
        VERSION INT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT U_INV_JNL_LOCK_CANDIDATE_KEYS UNIQUE (SKUCODE, WAREHOUSE_UID));

CREATE TABLE TORDERSKU (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        PARENT_ITEM_UID BIGINT,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        CREATED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        SKUCODE VARCHAR(255) NOT NULL,
        TAXCODE VARCHAR(255) NOT NULL,
        PRODUCT_SKU_UID BIGINT,
        ORDER_SHIPMENT_UID BIGINT,
        QUANTITY INT,
        DISPLAY_NAME VARCHAR(255) NOT NULL,
        AMOUNT DECIMAL(19,2),
        TAX_AMOUNT DECIMAL(19,2),
        LIST_UNIT_PRICE DECIMAL(19,2),
        SALE_UNIT_PRICE DECIMAL(19,2),
        PROMO_UNIT_PRICE DECIMAL(19,2),
        UNIT_PRICE DECIMAL(19,2),
        DISCOUNT_AMOUNT DECIMAL(19,2),
        DISPLAY_SKU_OPTIONS VARCHAR(255),
        IMAGE VARCHAR(255),
        WEIGHT INT default 0,
        DIGITAL_ASSET_UID BIGINT,
        ALLOCATED_QUANTITY BIGINT,
        CURRENCY VARCHAR(3),
        ORDERING INT default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TORDERSKU_FK_1 FOREIGN KEY (ORDER_SHIPMENT_UID) REFERENCES TORDERSHIPMENT (UIDPK)
    ,
    CONSTRAINT TOSKU_FK_TOSKU FOREIGN KEY (PARENT_ITEM_UID) REFERENCES TORDERSKU (UIDPK)
    ,
    CONSTRAINT TORDERSKU_FK_3 FOREIGN KEY (PRODUCT_SKU_UID) REFERENCES TPRODUCTSKU (UIDPK)
    ,
    CONSTRAINT TORDERSKU_GUID_UNIQUE UNIQUE (GUID));
CREATE INDEX I_OS_SHIPMENT_UID ON TORDERSKU(ORDER_SHIPMENT_UID);
CREATE INDEX I_OS_PARENT_ITEM_UID ON TORDERSKU(PARENT_ITEM_UID);
CREATE INDEX I_OS_PRODUCT_SKU_UID ON TORDERSKU(PRODUCT_SKU_UID);
CREATE INDEX I_OSHIP_PRODUCTSKU ON TORDERSKU(SKUCODE);
CREATE INDEX I_OS_DIGITALASSET_UID ON TORDERSKU(DIGITAL_ASSET_UID);

CREATE TABLE TORDERRETURNSKU (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        ORDER_SKU_UID BIGINT,
        ORDER_RETURN_UID BIGINT,
        QUANTITY INT,
        RETURN_AMOUNT DECIMAL(19,2),
        RECEIVED_QUANTITY INT,
        RECEIVED_STATE VARCHAR(255),
        RETURN_REASON VARCHAR(255),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TORDERRETURNSKU_FK_1 FOREIGN KEY (ORDER_RETURN_UID) REFERENCES TORDERRETURN (UIDPK)
    ,
    CONSTRAINT TORDERRETURNSKU_FK_2 FOREIGN KEY (ORDER_SKU_UID) REFERENCES TORDERSKU (UIDPK)
    );
CREATE INDEX I_ORS_OR_UID ON TORDERRETURNSKU (ORDER_RETURN_UID);
CREATE INDEX I_ORS_OS_UID ON TORDERRETURNSKU (ORDER_SKU_UID);

CREATE TABLE TPRODUCTASSOCIATION (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        ASSOCIATION_TYPE INT NOT NULL,
        SOURCE_PRODUCT_UID BIGINT NOT NULL,
        TARGET_PRODUCT_UID BIGINT NOT NULL,
        CATALOG_UID BIGINT,
        START_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        END_DATE TIMESTAMP WITH TIME ZONE,
        DEFAULT_QUANTITY INT default 1 NOT NULL,
        SOURCE_PRODUCT_DEPENDENT BOOLEAN default false,
        ORDERING INT default 0,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCTASSOCIATION_FK_1 FOREIGN KEY (SOURCE_PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    CONSTRAINT TPRODUCTASSOCIATION_FK_2 FOREIGN KEY (TARGET_PRODUCT_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    CONSTRAINT TPRODUCTASSOCIATION_FK_3 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    );
CREATE INDEX I_PA_SRCPROD_UID ON TPRODUCTASSOCIATION(SOURCE_PRODUCT_UID);
CREATE INDEX I_PA_TGTPROD_UID ON TPRODUCTASSOCIATION(TARGET_PRODUCT_UID);
CREATE INDEX I_PA_CATALOG_UID ON TPRODUCTASSOCIATION(CATALOG_UID);
CREATE INDEX I_PR_SE_DATE ON TPRODUCTASSOCIATION(START_DATE, END_DATE);

CREATE TABLE TPRODUCTSKUATTRIBUTEVALUE (
        UIDPK BIGINT NOT NULL,
        ATTRIBUTE_UID BIGINT NOT NULL,
        ATTRIBUTE_TYPE INT NOT NULL,
        LOCALIZED_ATTRIBUTE_KEY VARCHAR(255) NOT NULL,
        SHORT_TEXT_VALUE VARCHAR(255),
        LONG_TEXT_VALUE TEXT,
        INTEGER_VALUE INT,
        DECIMAL_VALUE DECIMAL(19,2),
        BOOLEAN_VALUE BOOLEAN default false,
        DATE_VALUE TIMESTAMP WITH TIME ZONE,
        PRODUCT_SKU_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCTSKUATTRIBUTEVALUE_FK_1 FOREIGN KEY (PRODUCT_SKU_UID) REFERENCES TPRODUCTSKU (UIDPK)
    ,
    CONSTRAINT TPRODUCTSKUATTRIBUTEVALUE_FK_2 FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    );
CREATE INDEX I_PSAV_SKU_UID ON TPRODUCTSKUATTRIBUTEVALUE (PRODUCT_SKU_UID);
CREATE INDEX I_PSAV_ATTR_UID ON TPRODUCTSKUATTRIBUTEVALUE (ATTRIBUTE_UID);

CREATE TABLE TPRODUCTTYPEATTRIBUTE (
        UIDPK BIGINT NOT NULL,
        ORDERING INT,
        ATTRIBUTE_UID BIGINT NOT NULL,
        PRODUCT_TYPE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCTTYPEATTRIBUTE_FK_1 FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    ,
    CONSTRAINT TPRODUCTTYPEATTRIBUTE_FK_2 FOREIGN KEY (PRODUCT_TYPE_UID) REFERENCES TPRODUCTTYPE (UIDPK)
    );
CREATE INDEX I_PTA_ATTR_UID ON TPRODUCTTYPEATTRIBUTE (ATTRIBUTE_UID);
CREATE INDEX I_PTA_TYPE_UID ON TPRODUCTTYPEATTRIBUTE (PRODUCT_TYPE_UID);

CREATE TABLE TPRODUCTTYPESKUATTRIBUTE (
        UIDPK BIGINT NOT NULL,
        ORDERING INT,
        ATTRIBUTE_UID BIGINT NOT NULL,
        PRODUCT_TYPE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCTTYPESKUATTRIBUTE_FK_1 FOREIGN KEY (ATTRIBUTE_UID) REFERENCES TATTRIBUTE (UIDPK)
    ,
    CONSTRAINT TPRODUCTTYPESKUATTRIBUTE_FK_2 FOREIGN KEY (PRODUCT_TYPE_UID) REFERENCES TPRODUCTTYPE (UIDPK)
    );
CREATE INDEX I_PTSA_ATTR_UID ON TPRODUCTTYPESKUATTRIBUTE (ATTRIBUTE_UID);
CREATE INDEX I_PTSA_TYPE_UID ON TPRODUCTTYPESKUATTRIBUTE (PRODUCT_TYPE_UID);

CREATE TABLE TSELLINGCONTEXT (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        DESCRIPTION VARCHAR(255),
        PRIORITY INT NOT NULL,
        TYPE VARCHAR(100) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSELLINGCONTEXT_UNIQUE UNIQUE (GUID));

CREATE TABLE TRULESET (
        UIDPK BIGINT NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        SCENARIO INT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TRULESET_UNIQUE UNIQUE (NAME));

CREATE TABLE TRULE (
        UIDPK BIGINT NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        RULECODE VARCHAR(64) NOT NULL,
        START_DATE TIMESTAMP WITH TIME ZONE,
        END_DATE TIMESTAMP WITH TIME ZONE,
        ELIGIBILITY_OPERATOR BOOLEAN default false,
        CONDITION_OPERATOR BOOLEAN default false,
        NAME VARCHAR(255) NOT NULL,
        DESCRIPTION VARCHAR(255),
        RULE_SET_UID BIGINT,
        STORE_UID BIGINT,
        CATALOG_UID BIGINT,
        CM_USER_UID BIGINT,
        ENABLED BOOLEAN NOT NULL,
        CURRENT_LUP_NUMBER BIGINT,
        SELLING_CTX_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT SCRULE_FK FOREIGN KEY (SELLING_CTX_UID) REFERENCES TSELLINGCONTEXT (UIDPK)
    ,
    CONSTRAINT TRULE_FK_2 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TRULE_FK_3 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    CONSTRAINT TRULE_FK_4 FOREIGN KEY (RULE_SET_UID) REFERENCES TRULESET (UIDPK)
    ,
    CONSTRAINT TRULE_UNIQUE UNIQUE (NAME),
    CONSTRAINT TRULE_CODE_UNIQUE UNIQUE (RULECODE));
CREATE INDEX I_R_SET_STORE_UID ON TRULE(STORE_UID);
CREATE INDEX I_R_SET_CATALOG_UID ON TRULE(CATALOG_UID);
CREATE INDEX I_R_SET_UID ON TRULE(RULE_SET_UID);
CREATE INDEX I_R_SE_DATE ON TRULE(START_DATE, END_DATE);

CREATE TABLE TRULEELEMENT (
        UIDPK BIGINT NOT NULL,
        TYPE VARCHAR(255) NOT NULL,
        KIND VARCHAR(255) NOT NULL,
        RULE_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TRULEELEMENT_FK_1 FOREIGN KEY (RULE_UID) REFERENCES TRULE (UIDPK)
    );
CREATE INDEX I_RE_RULE_UID ON TRULEELEMENT (RULE_UID);

CREATE TABLE TRULEEXCEPTION (
        UIDPK BIGINT NOT NULL,
        TYPE VARCHAR(255) NOT NULL,
        RULE_ELEMENT_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TRULEEXCEPTION_FK_1 FOREIGN KEY (RULE_ELEMENT_UID) REFERENCES TRULEELEMENT (UIDPK)
    );
CREATE INDEX I_REXP_RE_UID ON TRULEEXCEPTION (RULE_ELEMENT_UID);

CREATE TABLE TRULEPARAMETER (
        UIDPK BIGINT NOT NULL,
        PARAM_KEY VARCHAR(255) NOT NULL,
        PARAM_VALUE VARCHAR(255) NOT NULL,
        DISPLAY_TEXT VARCHAR(255),
        RULE_ELEMENT_UID BIGINT,
        RULE_EXCEPTION_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TRULEPARAMETER_FK_1 FOREIGN KEY (RULE_ELEMENT_UID) REFERENCES TRULEELEMENT (UIDPK)
    ,
    CONSTRAINT TRULEPARAMETER_FK_2 FOREIGN KEY (RULE_EXCEPTION_UID) REFERENCES TRULEEXCEPTION (UIDPK)
    );
CREATE INDEX I_RP_RE_UID ON TRULEPARAMETER (RULE_ELEMENT_UID);
CREATE INDEX I_RP_REXP_UID ON TRULEPARAMETER (RULE_EXCEPTION_UID);

CREATE TABLE TSHOPPINGCART (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(100) NOT NULL,
        STORE_UID BIGINT NOT NULL,
        SHOPPER_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSHOPPINGCART_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TSHOPPINGCART_FK_SHOPPER FOREIGN KEY (SHOPPER_UID) REFERENCES TSHOPPER (UIDPK)
    ,
    CONSTRAINT TSHOPPINGCART_UNIQUE UNIQUE (GUID));
CREATE INDEX I_SHOPCART_STORE_UID ON TSHOPPINGCART (STORE_UID);
CREATE INDEX I_SHOPCART_SHOPPER_UID ON TSHOPPINGCART (SHOPPER_UID);

CREATE TABLE TCARTITEM (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        SKU_UID BIGINT NOT NULL,
        QUANTITY INT NOT NULL,
        CURRENCY VARCHAR(3),
        LIST_UNIT_PRICE DECIMAL(19,2),
        SALE_UNIT_PRICE DECIMAL(19,2),
        PROMO_UNIT_PRICE DECIMAL(19,2),
        DISCOUNT_AMOUNT DECIMAL(19,2),
        TAX_AMOUNT DECIMAL(19,2),
        PARENT_ITEM_UID BIGINT,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        ORDERING INT default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCARTITEM_FK_TCARTITEM FOREIGN KEY (PARENT_ITEM_UID) REFERENCES TCARTITEM (UIDPK)
    ,
    CONSTRAINT TCARTITEM_FK_2 FOREIGN KEY (SKU_UID) REFERENCES TPRODUCTSKU (UIDPK)
    );
CREATE INDEX I_CARTI_SKU_UID ON TCARTITEM (SKU_UID);
CREATE INDEX I_CARTITEM_GUID ON TCARTITEM (GUID);
CREATE INDEX I_CARTITEM_PARENT_ITEM_UID ON TCARTITEM (PARENT_ITEM_UID);

CREATE TABLE TSHOPPINGITEMRECURRINGPRICE (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        PAYMENT_SCHEDULE_NAME VARCHAR(255) NOT NULL,
        FREQ_AMOUNT DECIMAL(19,8) NOT NULL,
        FREQ_UNIT VARCHAR(255) NOT NULL,
        DURATION_AMOUNT DECIMAL(19,8),
        DURATION_UNIT VARCHAR(255),
        CARTITEM_UID BIGINT,
        ORDERSKU_UID BIGINT,
        LIST_UNIT_PRICE DECIMAL(19,2),
        SALE_UNIT_PRICE DECIMAL(19,2),
        PROMO_UNIT_PRICE DECIMAL(19,2),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSHOPPINGITEMRECURRINGPRICE_FK_1 FOREIGN KEY (CARTITEM_UID) REFERENCES TCARTITEM (UIDPK)
    ,
    CONSTRAINT TSHOPPINGITEMRECURRINGPRICE_FK_2 FOREIGN KEY (ORDERSKU_UID) REFERENCES TORDERSKU (UIDPK)
    );
CREATE INDEX I_SIRP_CARTITEM_UID ON TSHOPPINGITEMRECURRINGPRICE (CARTITEM_UID);
CREATE INDEX I_SIRP_ORDERSKU_UID ON TSHOPPINGITEMRECURRINGPRICE (ORDERSKU_UID);

CREATE TABLE TUSERROLEPERMISSIONX (
        UIDPK BIGINT NOT NULL,
        ROLE_UID BIGINT NOT NULL,
        USER_PERMISSION VARCHAR(255),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TUSERROLEPERMISSIONX_FK_1 FOREIGN KEY (ROLE_UID) REFERENCES TUSERROLE (UIDPK)
    );
CREATE INDEX I_URPXI_ROLE_UID ON TUSERROLEPERMISSIONX (ROLE_UID);

CREATE TABLE TSKUOPTION (
        UIDPK BIGINT NOT NULL,
        OPTION_KEY VARCHAR(100) NOT NULL,
        CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSKUOPTION_FK_1 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    CONSTRAINT TSKUOPTION_UNIQUE UNIQUE (OPTION_KEY));
CREATE INDEX I_SKUOPT_CATALOG_UID ON TSKUOPTION (CATALOG_UID);

CREATE TABLE TSKUOPTIONVALUE (
        UIDPK BIGINT NOT NULL,
        OPTION_VALUE_KEY VARCHAR(255) NOT NULL,
        ORDERING INT,
        SKU_OPTION_UID BIGINT NOT NULL,
        IMAGE VARCHAR(255),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSKUOPTIONVALUE_FK_1 FOREIGN KEY (SKU_OPTION_UID) REFERENCES TSKUOPTION (UIDPK)
    ,
    CONSTRAINT TSKUOPTVAL_UNIQ UNIQUE (OPTION_VALUE_KEY));
CREATE INDEX I_SOV_SO_UID ON TSKUOPTIONVALUE (SKU_OPTION_UID);

CREATE TABLE TPRODUCTTYPESKUOPTION (
        PRODUCT_TYPE_UID BIGINT NOT NULL,
        SKU_OPTION_UID BIGINT NOT NULL,
    CONSTRAINT TPRODUCTTYPESKUOPTION_FK_1 FOREIGN KEY (PRODUCT_TYPE_UID) REFERENCES TPRODUCTTYPE (UIDPK)
    ,
    CONSTRAINT TPRODUCTTYPESKUOPTION_FK_2 FOREIGN KEY (SKU_OPTION_UID) REFERENCES TSKUOPTION (UIDPK)
    );
CREATE INDEX I_PTSO_PT_UID ON TPRODUCTTYPESKUOPTION (PRODUCT_TYPE_UID);
CREATE INDEX I_PTSO_SO_UID ON TPRODUCTTYPESKUOPTION (SKU_OPTION_UID);

CREATE TABLE TPRODUCTSKUOPTIONVALUE (
        UIDPK BIGINT NOT NULL,
        PRODUCT_SKU_UID BIGINT NOT NULL,
        OPTION_KEY VARCHAR(100) NOT NULL,
        OPTION_VALUE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRODUCTSKUOPTIONVALUE_FK_1 FOREIGN KEY (PRODUCT_SKU_UID) REFERENCES TPRODUCTSKU (UIDPK)
    ,
    CONSTRAINT TPRODUCTSKUOPTIONVALUE_FK_2 FOREIGN KEY (OPTION_VALUE_UID) REFERENCES TSKUOPTIONVALUE (UIDPK)
    );
CREATE INDEX I_PSSO_PS_UID ON TPRODUCTSKUOPTIONVALUE (PRODUCT_SKU_UID);
CREATE INDEX I_PSSO_SKUOV_UID ON TPRODUCTSKUOPTIONVALUE (OPTION_VALUE_UID);

CREATE TABLE TPRODUCTDELETED (
        UIDPK BIGINT NOT NULL,
        PRODUCT_UID BIGINT NOT NULL,
        DELETED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
    PRIMARY KEY(UIDPK));
CREATE INDEX I_PD_DELETED_DATE ON TPRODUCTDELETED (DELETED_DATE);

CREATE TABLE TOBJECTDELETED (
        UIDPK BIGINT NOT NULL,
        OBJECT_TYPE VARCHAR(255) NOT NULL,
        OBJECT_UID BIGINT NOT NULL,
        DELETED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
    PRIMARY KEY(UIDPK));
CREATE INDEX I_OD_DELETED_DATE ON TOBJECTDELETED (DELETED_DATE);

CREATE TABLE TLOCALIZEDPROPERTIES (
        UIDPK BIGINT NOT NULL,
        OBJECT_UID BIGINT,
        LOCALIZED_PROPERTY_KEY VARCHAR(255) NOT NULL,
        VALUE VARCHAR(255) NOT NULL,
        TYPE VARCHAR(31) NOT NULL,
    PRIMARY KEY(UIDPK));
CREATE INDEX I_LP_OBJECT_UID ON TLOCALIZEDPROPERTIES (OBJECT_UID);

CREATE TABLE TDIGITALASSETAUDIT (
        UIDPK BIGINT NOT NULL,
        ORDERSKU_UID BIGINT NOT NULL,
        DIGITALASSET_UID BIGINT NOT NULL,
        DOWNLOAD_TIME TIMESTAMP WITH TIME ZONE NOT NULL,
        IP_ADDRESS VARCHAR(255),
    PRIMARY KEY(UIDPK));

CREATE TABLE TAPPLIEDRULE (
        UIDPK BIGINT NOT NULL,
        ORDER_UID BIGINT NOT NULL,
        RULE_UID BIGINT NOT NULL,
        RULE_NAME VARCHAR(255) NOT NULL,
        RULE_CODE TEXT NOT NULL,
    PRIMARY KEY(UIDPK));
CREATE INDEX I_TAR_ORDER_UID ON TAPPLIEDRULE (ORDER_UID);
CREATE INDEX I_TAR_RULE_UID ON TAPPLIEDRULE (RULE_UID);

CREATE TABLE TAPPLIEDRULECOUPONCODE (
        UIDPK BIGINT NOT NULL,
        APPLIED_RULE_UID BIGINT NOT NULL,
        COUPONCODE VARCHAR(255) NOT NULL,
        USECOUNT INT default 0,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TAPPLIEDRULECOUPONCODE_FK_1 FOREIGN KEY (APPLIED_RULE_UID) REFERENCES TAPPLIEDRULE (UIDPK)
    );

CREATE TABLE TTOPSELLER (
        UIDPK BIGINT NOT NULL,
        CATEGORY_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TTOPSELLER_UNIQUE UNIQUE (CATEGORY_UID));

CREATE TABLE TTOPSELLERPRODUCTS (
        UIDPK BIGINT NOT NULL,
        TOP_SELLER_UID BIGINT NOT NULL,
        PRODUCT_UID BIGINT NOT NULL,
        SALES_COUNT INT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TTOPSELLERPRODUCTS_FK_1 FOREIGN KEY (TOP_SELLER_UID) REFERENCES TTOPSELLER (UIDPK)
    ,
    CONSTRAINT TTOPSELLERPRODUCTS_UNIQUE UNIQUE (TOP_SELLER_UID, PRODUCT_UID));
CREATE INDEX I_TSP_TS_UID ON TTOPSELLERPRODUCTS (TOP_SELLER_UID);

CREATE TABLE TSFSEARCHLOG (
        UIDPK BIGINT NOT NULL,
        SEARCH_TIME TIMESTAMP WITH TIME ZONE NOT NULL,
        KEYWORDS VARCHAR(255),
        RESULT_COUNT INT NOT NULL,
        SUGGESTIONS_GENERATED BOOLEAN default false,
        CATEGORY_RESTRICTION BIGINT default 0 NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE TABLE TSTOREWAREHOUSE (
        STORE_UID BIGINT NOT NULL,
        WAREHOUSE_UID BIGINT NOT NULL,
    CONSTRAINT TSTOREWAREHOUSE_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TSTOREWAREHOUSE_FK_2 FOREIGN KEY (WAREHOUSE_UID) REFERENCES TWAREHOUSE (UIDPK)
    );
CREATE INDEX I_WAREHOUSE_WH_UID ON TSTOREWAREHOUSE (WAREHOUSE_UID);
CREATE INDEX I_WAREHOUSE_STORE_UID ON TSTOREWAREHOUSE (STORE_UID);

CREATE TABLE TSTORECREDITCARDTYPE (
        UIDPK BIGINT NOT NULL,
        TYPE VARCHAR(255),
        STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSTORECREDITCARDTYPE_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    );
CREATE INDEX I_CREDITCARDTYPES_STORE_UID ON TSTORECREDITCARDTYPE (STORE_UID);

CREATE TABLE TSTORETAXCODE (
        STORE_UID BIGINT NOT NULL,
        TAXCODE_UID BIGINT NOT NULL,
    CONSTRAINT TSTORETAXCODE_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TSTORETAXCODE_FK_2 FOREIGN KEY (TAXCODE_UID) REFERENCES TTAXCODE (UIDPK)
    );
CREATE INDEX I_TAXCODE_TAXCODE_UID ON TSTORETAXCODE (TAXCODE_UID);
CREATE INDEX I_TAXCODE_STORE_UID ON TSTORETAXCODE (STORE_UID);

CREATE TABLE TSTORETAXJURISDICTION (
        STORE_UID BIGINT NOT NULL,
        TAXJURISDICTION_UID BIGINT NOT NULL,
    CONSTRAINT TSTORETAXJURISDICTION_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TSTORETAXJURISDICTION_FK_2 FOREIGN KEY (TAXJURISDICTION_UID) REFERENCES TTAXJURISDICTION (UIDPK)
    );
CREATE INDEX I_TAXJURISDICTION_JUR_UID ON TSTORETAXJURISDICTION (TAXJURISDICTION_UID);
CREATE INDEX I_TAXJURISDICTION_STORE_UID ON TSTORETAXJURISDICTION (STORE_UID);

CREATE TABLE TPAYMENTGATEWAY (
        UIDPK BIGINT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        TYPE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPAYMENTGATEWAY_NAME UNIQUE (NAME));

CREATE TABLE TSTOREPAYMENTGATEWAY (
        STORE_UID BIGINT NOT NULL,
        GATEWAY_UID BIGINT NOT NULL,
    CONSTRAINT TSTOREPAYMENTGATEWAY_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TSTOREPAYMENTGATEWAY_FK_2 FOREIGN KEY (GATEWAY_UID) REFERENCES TPAYMENTGATEWAY (UIDPK)
    );
CREATE INDEX I_PAYMENTGATEWAY_PGW ON TSTOREPAYMENTGATEWAY (GATEWAY_UID);
CREATE INDEX I_PAYMENTGATEWAY_STORE ON TSTOREPAYMENTGATEWAY (STORE_UID);

CREATE TABLE TPAYMENTGATEWAYPROPERTIES (
        UIDPK BIGINT NOT NULL,
        PROPKEY VARCHAR(255) NOT NULL,
        PROPVALUE VARCHAR(255),
        PAYMENTGATEWAY_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPAYMENTGATEWAYPROPERTIES_FK_1 FOREIGN KEY (PAYMENTGATEWAY_UID) REFERENCES TPAYMENTGATEWAY (UIDPK)
    );
CREATE INDEX I_PGPROPS_PG_UID ON TPAYMENTGATEWAYPROPERTIES (PAYMENTGATEWAY_UID);

CREATE TABLE TSTORECATALOG (
        UIDPK BIGINT NOT NULL,
        STORE_UID BIGINT NOT NULL,
        CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSTORECATALOG_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TSTORECATALOG_FK_2 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    );
CREATE INDEX I_STORECAT_CATALOG_UID ON TSTORECATALOG (CATALOG_UID);
CREATE INDEX I_STORECAT_STORE_UID ON TSTORECATALOG (STORE_UID);

CREATE TABLE TCMUSERSTORE (
        USER_UID BIGINT NOT NULL,
        STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(USER_UID,STORE_UID),
    CONSTRAINT TCMUSERSTORE_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TCMUSERSTORE_FK_2 FOREIGN KEY (USER_UID) REFERENCES TCMUSER (UIDPK)
    );
CREATE INDEX I_CMUSERSTORE_STORE_UID ON TCMUSERSTORE (STORE_UID);
CREATE INDEX I_CMUSERSTORE__USER_UID ON TCMUSERSTORE (USER_UID);

CREATE TABLE TCMUSERWAREHOUSE (
        USER_UID BIGINT NOT NULL,
        WAREHOUSE_UID BIGINT NOT NULL,
    PRIMARY KEY(USER_UID,WAREHOUSE_UID),
    CONSTRAINT TCMUSERWAREHOUSE_FK_1 FOREIGN KEY (WAREHOUSE_UID) REFERENCES TWAREHOUSE (UIDPK)
    ,
    CONSTRAINT TCMUSERWAREHOUSE_FK_2 FOREIGN KEY (USER_UID) REFERENCES TCMUSER (UIDPK)
    );
CREATE INDEX I_CMUSERWH_WAREHOUSE_UID ON TCMUSERWAREHOUSE (WAREHOUSE_UID);
CREATE INDEX I_CMUSERWH__USER_UID ON TCMUSERWAREHOUSE (USER_UID);

CREATE TABLE TCMUSERCATALOG (
        USER_UID BIGINT NOT NULL,
        CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(USER_UID,CATALOG_UID),
    CONSTRAINT TCMUSERCATALOG_FK_1 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    CONSTRAINT TCMUSERCATALOG_FK_2 FOREIGN KEY (USER_UID) REFERENCES TCMUSER (UIDPK)
    );
CREATE INDEX I_CMUSERCATALOG_CATALOG_UID ON TCMUSERCATALOG (CATALOG_UID);
CREATE INDEX I_CMUSERCATALOG__USER_UID ON TCMUSERCATALOG (USER_UID);

CREATE TABLE TSTOREASSOCIATION (
        STORE_UID BIGINT NOT NULL,
        ASSOCIATED_STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(STORE_UID,ASSOCIATED_STORE_UID),
    CONSTRAINT TSTOREASSOCIATION_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TSTOREASSOCIATION_FK_2 FOREIGN KEY (ASSOCIATED_STORE_UID) REFERENCES TSTORE (UIDPK)
    );
CREATE INDEX I_STORE_ASSOCIATE_UID ON TSTOREASSOCIATION (STORE_UID);
CREATE INDEX I_STORE_ASSOCIATION_UID ON TSTOREASSOCIATION (ASSOCIATED_STORE_UID);

CREATE TABLE TSYNONYMGROUPS (
        UIDPK BIGINT NOT NULL,
        CONCEPT_TERM VARCHAR(255) NOT NULL,
        LOCALE VARCHAR(20) NOT NULL,
        CATALOG_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSYNONYMGROUPS_FK_1 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    );
CREATE INDEX I_SYNONYMGR_CATLOG_UID ON TSYNONYMGROUPS (CATALOG_UID);

CREATE TABLE TSYNONYM (
        UIDPK BIGINT NOT NULL,
        SYNONYM_UID BIGINT NOT NULL,
        SYNONYM_WORD VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSYNONYM_FK_1 FOREIGN KEY (SYNONYM_UID) REFERENCES TSYNONYMGROUPS (UIDPK)
    );
CREATE INDEX I_SYNONYM_SYNONYMGR_UID ON TSYNONYM (SYNONYM_UID);

CREATE TABLE TINDEXNOTIFY (
        UIDPK BIGINT NOT NULL,
        INDEX_TYPE VARCHAR(100) NOT NULL,
        UPDATE_TYPE VARCHAR(64) NOT NULL,
        AFFECTED_UID BIGINT,
        ENTITY_TYPE VARCHAR(64),
        QUERY_STRING TEXT,
    PRIMARY KEY(UIDPK));

CREATE TABLE TRULESTORAGE (
        UIDPK BIGINT NOT NULL,
        STORE_UID BIGINT,
        CATALOG_UID BIGINT,
        SCENARIO INT NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        RULEBASE BYTEA NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TRULESTORAGE_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TRULESTORAGE_FK_2 FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    );
CREATE INDEX I_RS_STRE_UID ON TRULESTORAGE (STORE_UID);
CREATE INDEX I_RS_CAT_UID ON TRULESTORAGE (CATALOG_UID);

CREATE TABLE TADVANCEDSEARCHQUERY (
        UIDPK BIGINT NOT NULL,
        QUERY_ID BIGINT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        DESCRIPTION TEXT,
        QUERY_VISIBILITY VARCHAR(20) NOT NULL,
        OWNER_ID BIGINT,
        QUERY_TYPE VARCHAR(20) NOT NULL,
        QUERY_CONTENT TEXT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TADVANCEDSEARCHQUERY_FK_1 FOREIGN KEY (OWNER_ID) REFERENCES TCMUSER (UIDPK)
    );
CREATE INDEX I_ON_OWNER_UID ON TADVANCEDSEARCHQUERY (OWNER_ID);

CREATE TABLE TSTORESUPPORTEDCURRENCY (
        UIDPK BIGINT NOT NULL,
        CURRENCY VARCHAR(255) NOT NULL,
        STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSTORESUPPORTEDCURRENCY_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    );
CREATE INDEX I_STORESUPCURR_STORE_UID ON TSTORESUPPORTEDCURRENCY (STORE_UID);

CREATE TABLE TSTORESUPPORTEDLOCALE (
        UIDPK BIGINT NOT NULL,
        LOCALE VARCHAR(255) NOT NULL,
        STORE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TSTORESUPPORTEDLOCALE_FK_1 FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    );
CREATE INDEX I_STORESUPLOC_STORE_UID ON TSTORESUPPORTEDLOCALE (STORE_UID);

CREATE TABLE TINDEXBUILDSTATUS (
        UIDPK BIGINT NOT NULL,
        INDEX_TYPE VARCHAR(100) NOT NULL,
        LAST_BUILD_DATE TIMESTAMP WITH TIME ZONE,
        INDEX_STATUS VARCHAR(100) default 'MISSING' NOT NULL,
        TOTAL_RECORDS INT default -1,
        PROCESSED_RECORDS INT default -1,
        OPERATION_START_DATE TIMESTAMP WITH TIME ZONE,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE TABLE TPRICELIST (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        CURRENCY VARCHAR(255) NOT NULL,
        DESCRIPTION TEXT,
        HIDDEN BOOLEAN default false,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TPRICELIST_GUID_UNIQUE UNIQUE (GUID),
    CONSTRAINT TPRICELIST_NAME_UNIQUE UNIQUE (NAME));

CREATE TABLE TBASEAMOUNT (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        OBJECT_GUID VARCHAR(64) NOT NULL,
        OBJECT_TYPE VARCHAR(100) NOT NULL,
        QUANTITY DECIMAL(19,2) NOT NULL,
        LIST DECIMAL(19,2),
        SALE DECIMAL(19,2),
        PRICE_LIST_GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TBASEAMOUNT_FK_1 FOREIGN KEY (PRICE_LIST_GUID) REFERENCES TPRICELIST (GUID)
    ,
    CONSTRAINT TBASEAMOUNT_UNIQUE UNIQUE (OBJECT_GUID, OBJECT_TYPE, QUANTITY, PRICE_LIST_GUID),
    CONSTRAINT TBASEAMOUNT_GUID_UNIQUE UNIQUE (GUID));
CREATE INDEX I_TBASEAMOUNT_FK_GUID ON TBASEAMOUNT (PRICE_LIST_GUID);
CREATE INDEX I_TBASEAMOUNT_OBJECTS ON TBASEAMOUNT (PRICE_LIST_GUID, OBJECT_GUID);

CREATE TABLE TOBJECTGROUPMEMBER (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        OBJECT_GROUP_ID VARCHAR(64) NOT NULL,
        OBJECT_TYPE VARCHAR(100) NOT NULL,
        OBJECT_IDENTIFIER VARCHAR(100) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TOBJECTGROUP_UNIQUE UNIQUE (OBJECT_GROUP_ID, OBJECT_TYPE, OBJECT_IDENTIFIER),
    CONSTRAINT TOBJECTGROUP_GUID_UNIQUE UNIQUE (GUID));

CREATE TABLE TCHANGESET (
        UIDPK BIGINT NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        DESCRIPTION VARCHAR(255),
        OBJECT_GROUP_ID VARCHAR(64) NOT NULL,
        CREATED_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        CREATED_BY_USER_GUID VARCHAR(64) NOT NULL,
        STATE_CODE VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCHANGESET_GROUP_ID_UNIQUE UNIQUE (OBJECT_GROUP_ID));

CREATE TABLE TOBJECTMETADATA (
        UIDPK BIGINT NOT NULL,
        OBJECT_GROUP_MEMBER_UID BIGINT NOT NULL,
        METADATA_KEY VARCHAR(255) NOT NULL,
        METADATA_VALUE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TOBJECTMETADATA_FK_1 FOREIGN KEY (OBJECT_GROUP_MEMBER_UID) REFERENCES TOBJECTGROUPMEMBER (UIDPK)
    );
CREATE INDEX I_TOBJECTMETADATA_MBR_UID ON TOBJECTMETADATA (OBJECT_GROUP_MEMBER_UID);

CREATE TABLE TCHANGESETUSER (
        UIDPK BIGINT NOT NULL,
        USER_GUID VARCHAR(255) NOT NULL,
        CHANGESET_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCHANGESETUSER_FK_1 FOREIGN KEY (CHANGESET_UID) REFERENCES TCHANGESET (UIDPK)
    );
CREATE INDEX I_TCHANGESETUSER_CS_UID ON TCHANGESETUSER (CHANGESET_UID);
CREATE INDEX I_TCHANGESETUSER_USER_GUID ON TCHANGESETUSER (USER_GUID);

CREATE TABLE TTAGDICTIONARY (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        PURPOSE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TAGDICTIONARY_UNIQUE UNIQUE (GUID));

CREATE TABLE TTAGCONDITION (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        DESCRIPTION VARCHAR(4000),
        CONDITION_STRING VARCHAR(4000) NOT NULL,
        TAGDICTIONARY_GUID VARCHAR(64),
        NAMED BOOLEAN default false NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TAGCONDITION_UNIQUE UNIQUE (GUID));
CREATE INDEX I_TAGDICTIONARY_FK ON TTAGCONDITION (TAGDICTIONARY_GUID);

CREATE TABLE TSELLINGCONTEXTCONDITION (
        SELLING_CONTEXT_UID BIGINT NOT NULL,
        CONDITION_GUID VARCHAR(64) NOT NULL,
    CONSTRAINT FK_SELLCOND_SELLCTX FOREIGN KEY (SELLING_CONTEXT_UID) REFERENCES TSELLINGCONTEXT (UIDPK)
    );

CREATE TABLE TCSDYNAMICCONTENT (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        CONTENT_WRAPPER_ID VARCHAR(255) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        DESCRIPTION VARCHAR(4000),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCSDYNAMICCONTENT_UNIQUE UNIQUE (GUID),
    CONSTRAINT TCSDYNAMICCONTENT_UNIQUE_NAME UNIQUE (NAME));

CREATE TABLE TCSDYNAMICCONTENTDELIVERY (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        DESCRIPTION VARCHAR(255),
        PRIORITY INT NOT NULL,
        CSDC_CONTENT_UID BIGINT NOT NULL,
        SELLING_CONTEXT_GUID VARCHAR(64),
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_DELIVERY_DCONTENT FOREIGN KEY (CSDC_CONTENT_UID) REFERENCES TCSDYNAMICCONTENT (UIDPK)
    ,
    CONSTRAINT FK_SELLING_CONTEXT FOREIGN KEY (SELLING_CONTEXT_GUID) REFERENCES TSELLINGCONTEXT (GUID)
    ,
    CONSTRAINT TCSDCA_UNIQUE UNIQUE (GUID));

CREATE TABLE TCSCONTENTSPACE (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        TARGET_ID VARCHAR(255) NOT NULL,
        DESCRIPTION VARCHAR(255),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCSCONTENTSPACE_UNIQUE UNIQUE (GUID),
    CONSTRAINT TCSCONTENTSPACE_UNIQUE_TARGET UNIQUE (TARGET_ID));

CREATE TABLE TCSPARAMETERVALUE (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        CSDYNAMICCONTENT_UID BIGINT NOT NULL,
        PARAMETER_NAME VARCHAR(255) NOT NULL,
        LOCALIZABLE BOOLEAN default false NOT NULL,
        DESCRIPTION VARCHAR(4000),
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_PARAMVAL_DCONTENT FOREIGN KEY (CSDYNAMICCONTENT_UID) REFERENCES TCSDYNAMICCONTENT (UIDPK)
    ,
    CONSTRAINT TCSPARAMETERVALUE_UNIQUE UNIQUE (GUID));

CREATE TABLE TCSPARAMETERVALUELDF (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        LOCALE VARCHAR(20) NOT NULL,
        LDVALUE VARCHAR(4000) NOT NULL,
        CSPARAMETERVALUE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_PARAMVALLOCALE_PARAMVAL FOREIGN KEY (CSPARAMETERVALUE_UID) REFERENCES TCSPARAMETERVALUE (UIDPK)
    ,
    CONSTRAINT TCSPARAMETERVALUELDF_UNIQUE UNIQUE (GUID));

CREATE TABLE TCSDYNAMICCONTENTSPACE (
        DC_DELIVERY_UID BIGINT NOT NULL,
        DC_CONTENTSPACE_UID BIGINT NOT NULL,
    CONSTRAINT FK_DELSPACE_DELIVERY FOREIGN KEY (DC_DELIVERY_UID) REFERENCES TCSDYNAMICCONTENTDELIVERY (UIDPK)
    ,
    CONSTRAINT FK_DELSPACE_CONTENTSPACE FOREIGN KEY (DC_CONTENTSPACE_UID) REFERENCES TCSCONTENTSPACE (UIDPK)
    ,
    CONSTRAINT TCSDYNAMICCONTENTSPACE_CK_1 UNIQUE (DC_DELIVERY_UID, DC_CONTENTSPACE_UID));

CREATE TABLE TCHANGETRANSACTION (
        UIDPK BIGINT NOT NULL,
        TRANSACTION_ID VARCHAR(255) NOT NULL,
        CHANGE_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
    PRIMARY KEY(UIDPK));

CREATE TABLE TCHANGETRANSACTIONMETADATA (
        UIDPK BIGINT NOT NULL,
        CHANGE_TRANSACTION_UID BIGINT NOT NULL,
        METADATA_KEY VARCHAR(255) NOT NULL,
        METADATA_VALUE VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCHANGETRANSACTIONMETADATA_FK_1 FOREIGN KEY (CHANGE_TRANSACTION_UID) REFERENCES TCHANGETRANSACTION (UIDPK)
    );

CREATE TABLE TCHANGEOPERATION (
        UIDPK BIGINT NOT NULL,
        OPERATION_ORDER INT NOT NULL,
        ROOT_OBJECT_NAME VARCHAR(255),
        ROOT_OBJECT_UID BIGINT,
        ROOT_OBJECT_GUID VARCHAR(255),
        CHANGE_TYPE VARCHAR(255) NOT NULL,
        CHANGE_TRANSACTION_UID BIGINT NOT NULL,
        QUERY_STRING VARCHAR(1000),
        QUERY_PARAMETERS VARCHAR(255),
        TYPE VARCHAR(20),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCHANGEOPERATION_FK_1 FOREIGN KEY (CHANGE_TRANSACTION_UID) REFERENCES TCHANGETRANSACTION (UIDPK)
    );

CREATE TABLE TTAGVALUETYPE (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        JAVA_TYPE VARCHAR(50),
        UI_PICKER_KEY VARCHAR(50),
    PRIMARY KEY(UIDPK),
    CONSTRAINT TAGVALUETYPE_UNIQUE UNIQUE (GUID));

CREATE TABLE TTAGGROUP (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TAGGROUP_UNIQUE UNIQUE (GUID));

CREATE TABLE TTAGDEFINITION (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        DESCRIPTION VARCHAR(255),
        TAGVALUETYPE_GUID VARCHAR(64) NOT NULL,
        TAGGROUP_UID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_TTAGVALUETYPE FOREIGN KEY (TAGVALUETYPE_GUID) REFERENCES TTAGVALUETYPE (GUID)
    ,
    CONSTRAINT FK_TTAGGROUP FOREIGN KEY (TAGGROUP_UID) REFERENCES TTAGGROUP (UIDPK)
    ,
    CONSTRAINT TAGDEFINITION_UNIQUE UNIQUE (GUID));

CREATE TABLE TTAGALLOWEDVALUE (
        UIDPK BIGINT NOT NULL,
        VALUE VARCHAR(255) NOT NULL,
        TAGVALUETYPE_GUID VARCHAR(64) NOT NULL,
        DESCRIPTION VARCHAR(4000),
        ORDERING INT default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_TAGALLOWEDVAL_TAGTYPE FOREIGN KEY (TAGVALUETYPE_GUID) REFERENCES TTAGVALUETYPE (GUID)
    ,
    CONSTRAINT TAGALLOWEDVALUE_UNIQUE UNIQUE (VALUE, TAGVALUETYPE_GUID),
    CONSTRAINT TAGALLOWEDVALUE_UNIQUE2 UNIQUE (ORDERING, TAGVALUETYPE_GUID));

CREATE TABLE TDATACHANGED (
        UIDPK BIGINT NOT NULL,
        CHANGE_TYPE VARCHAR(255) NOT NULL,
        FIELD_NAME VARCHAR(255),
        FIELD_OLD_VALUE TEXT,
        FIELD_NEW_VALUE TEXT,
        OBJECT_NAME VARCHAR(255),
        OBJECT_UID BIGINT,
        OBJECT_GUID VARCHAR(255),
        CHANGE_OPERATION_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TDATACHANGED_FK_1 FOREIGN KEY (CHANGE_OPERATION_UID) REFERENCES TCHANGEOPERATION (UIDPK)
    );

CREATE TABLE TTAGDICTIONARYTAGDEFINITION (
        TAGDICTIONARY_GUID VARCHAR(64) NOT NULL,
        TAGDEFINITION_GUID VARCHAR(64) NOT NULL,
    CONSTRAINT TAGDICTIONARYTAGDEF_UNIQUE UNIQUE (TAGDICTIONARY_GUID, TAGDEFINITION_GUID));

CREATE TABLE TTAGOPERATOR (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TAGOPERATOR_UNIQUE UNIQUE (GUID));

CREATE TABLE TTAGVALUETYPEOPERATOR (
        TAGVALUETYPE_GUID VARCHAR(64) NOT NULL,
        TAGOPERATOR_GUID VARCHAR(64) NOT NULL,
    CONSTRAINT FK_TAGOPERATOR_TAGVALUETYPE FOREIGN KEY (TAGOPERATOR_GUID) REFERENCES TTAGOPERATOR (GUID)
    ,
    CONSTRAINT FK_TAGVALUETYPE_TAGOPERATOR FOREIGN KEY (TAGVALUETYPE_GUID) REFERENCES TTAGVALUETYPE (GUID)
    ,
    CONSTRAINT TTAGVALUETYPEOPERATOR_UNIQUE UNIQUE (TAGVALUETYPE_GUID, TAGOPERATOR_GUID));

CREATE TABLE TVALIDATIONCONSTRAINTS (
        UIDPK BIGINT NOT NULL,
        OBJECT_UID BIGINT,
        ERROR_MESSAGE_KEY VARCHAR(255) NOT NULL,
        VALIDATION_CONSTRAINT VARCHAR(4000) NOT NULL,
        TYPE VARCHAR(31) NOT NULL,
    PRIMARY KEY(UIDPK));
CREATE INDEX I_VC_OBJECT_UID ON TVALIDATIONCONSTRAINTS (OBJECT_UID);

CREATE TABLE TBUNDLECONSTITUENTX (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        BUNDLE_UID BIGINT NOT NULL,
        CONSTITUENT_UID BIGINT,
        CONSTITUENT_SKU_UID BIGINT,
        QUANTITY INT default 1 NOT NULL,
        ORDERING INT default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TBCX_TPROD_FK FOREIGN KEY (BUNDLE_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    CONSTRAINT TBCX_TPROD_C_FK FOREIGN KEY (CONSTITUENT_UID) REFERENCES TPRODUCT (UIDPK)
    ,
    CONSTRAINT TBCX_TSKU_C_FK FOREIGN KEY (CONSTITUENT_SKU_UID) REFERENCES TPRODUCTSKU (UIDPK)
    ,
    CONSTRAINT TBCX_GUID_UNIQUE UNIQUE (GUID));
CREATE INDEX I_BCX_BUNDLE_UID ON TBUNDLECONSTITUENTX (BUNDLE_UID);
CREATE INDEX I_BCX_CONSTITUENT_UID ON TBUNDLECONSTITUENTX (CONSTITUENT_UID);
CREATE INDEX I_BCX_CONSTITUENT_SKU_UID ON TBUNDLECONSTITUENTX (CONSTITUENT_SKU_UID);

CREATE TABLE TPRICEADJUSTMENT (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        CONSTITUENT_GUID VARCHAR(64) NOT NULL,
        AMOUNT DECIMAL(19,2),
        PRICE_LIST_GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_TPRICEADJUST_CONST_GUID FOREIGN KEY (CONSTITUENT_GUID) REFERENCES TBUNDLECONSTITUENTX (GUID)
    ,
    CONSTRAINT TPRICEADJUSTMENT_GUID_UNIQUE UNIQUE (GUID));
CREATE INDEX I_TPRICEADJUSTMENT_FK_PL_GUID ON TPRICEADJUSTMENT (PRICE_LIST_GUID);
CREATE INDEX I_TPRICEADJUSTMENT_FK_BCX_GUID ON TPRICEADJUSTMENT (CONSTITUENT_GUID);
CREATE INDEX I_TPRICEADJUSTMENT_KEYS ON TPRICEADJUSTMENT (PRICE_LIST_GUID, CONSTITUENT_GUID);

CREATE TABLE TBUNDLESELECTIONRULE (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        PARAMETER INT NOT NULL,
        BUNDLE_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TBSR_TPROD_FK FOREIGN KEY (BUNDLE_UID) REFERENCES TPRODUCT (UIDPK)
    );
CREATE INDEX I_BSR_BUNDLE_UID ON TBUNDLESELECTIONRULE (BUNDLE_UID);

CREATE TABLE TSHOPPINGITEMDATA (
        UIDPK BIGINT NOT NULL,
        ITEM_KEY TEXT NOT NULL,
        ITEM_VALUE TEXT,
        CARTITEM_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCARTITEM_FK FOREIGN KEY (CARTITEM_UID) REFERENCES TCARTITEM (UIDPK)
    );
CREATE INDEX I_CARTITEM_UID ON TSHOPPINGITEMDATA (CARTITEM_UID);

CREATE TABLE TORDERITEMDATA (
        UIDPK BIGINT NOT NULL,
        ITEM_KEY TEXT NOT NULL,
        ITEM_VALUE TEXT,
        ORDERSKU_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TORDERSKU_FK FOREIGN KEY (ORDERSKU_UID) REFERENCES TORDERSKU (UIDPK)
    );
CREATE INDEX I_ORDERSKU_UID ON TORDERITEMDATA (ORDERSKU_UID);

CREATE TABLE TPRICELISTASSIGNMENT (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        DESCRIPTION VARCHAR(4000),
        PRIORITY INT default 1 NOT NULL,
        CATALOG_UID BIGINT NOT NULL,
        PRLISTDSCR_UID BIGINT NOT NULL,
        SELLING_CTX_UID BIGINT,
        HIDDEN BOOLEAN default false,
    PRIMARY KEY(UIDPK),
    CONSTRAINT CATPLA_FK FOREIGN KEY (CATALOG_UID) REFERENCES TCATALOG (UIDPK)
    ,
    CONSTRAINT PLDPLA_FK FOREIGN KEY (PRLISTDSCR_UID) REFERENCES TPRICELIST (UIDPK)
    ,
    CONSTRAINT SCPLA_FK FOREIGN KEY (SELLING_CTX_UID) REFERENCES TSELLINGCONTEXT (UIDPK)
    ,
    CONSTRAINT TPLA_GUID_UNIQUE UNIQUE (GUID),
    CONSTRAINT TPLA_NAME_UNIQUE UNIQUE (NAME));
CREATE INDEX I_CATALOG_UID ON TPRICELISTASSIGNMENT (CATALOG_UID);
CREATE INDEX I_PRLISTDSCR_UID ON TPRICELISTASSIGNMENT (PRLISTDSCR_UID);

CREATE TABLE TIMPORTNOTIFICATION (
        UIDPK BIGINT NOT NULL,
        REQUEST_ID VARCHAR(64) NOT NULL,
        ACTION VARCHAR(64) NOT NULL,
        IMPORT_JOB_UID BIGINT NOT NULL,
        DATE_CREATED TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
        CMUSER_UID BIGINT NOT NULL,
        NOTIFICATION_STATE VARCHAR(64) NOT NULL,
        CHANGESET_GUID VARCHAR(64),
    PRIMARY KEY(UIDPK),
    CONSTRAINT IN_IMPORTJOB_FK FOREIGN KEY (IMPORT_JOB_UID) REFERENCES TIMPORTJOB (UIDPK)
    ,
    CONSTRAINT IN_CMUSER_FK FOREIGN KEY (CMUSER_UID) REFERENCES TCMUSER (UIDPK)
    );
CREATE INDEX I_IN_IMPORTJOB_FK ON TIMPORTNOTIFICATION (IMPORT_JOB_UID);
CREATE INDEX I_IN_CMUSER_FK ON TIMPORTNOTIFICATION (CMUSER_UID);

CREATE TABLE TIMPORTNOTIFICATIONMETADATA (
        UIDPK BIGINT NOT NULL,
        METADATA_KEY VARCHAR(255),
        METADATA_VALUE VARCHAR(255),
        IMPORT_NOTIFICATION_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT INM_IMPORTNOTIFICATION_FK FOREIGN KEY (IMPORT_NOTIFICATION_UID) REFERENCES TIMPORTNOTIFICATION (UIDPK)
    );
CREATE INDEX I_INM_IMPORTNOTIFICATION_FK ON TIMPORTNOTIFICATIONMETADATA (IMPORT_NOTIFICATION_UID);

CREATE TABLE TIMPORTJOBSTATUS (
        UIDPK BIGINT NOT NULL,
        PROCESS_ID VARCHAR(64) NOT NULL,
        IMPORT_JOB_UID BIGINT NOT NULL,
        CMUSER_UID BIGINT NOT NULL,
        START_DATE TIMESTAMP WITH TIME ZONE,
        END_DATE TIMESTAMP WITH TIME ZONE,
        TOTAL_ROWS INT,
        FAILED_ROWS INT,
        CURRENT_ROW INT,
        STATE VARCHAR(64) NOT NULL,
        LAST_MODIFIED_DATE TIMESTAMP WITH TIME ZONE default CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT IJS_IMPORTJOB_FK FOREIGN KEY (IMPORT_JOB_UID) REFERENCES TIMPORTJOB (UIDPK)
    ,
    CONSTRAINT IJS_CMUSER_FK FOREIGN KEY (CMUSER_UID) REFERENCES TCMUSER (UIDPK)
    );
CREATE INDEX I_IJS_IMPORTJOB_FK ON TIMPORTJOBSTATUS (IMPORT_JOB_UID);
CREATE INDEX I_IJS_CMUSER_FK ON TIMPORTJOBSTATUS (CMUSER_UID);

CREATE TABLE TIMPORTBADROW (
        UIDPK BIGINT NOT NULL,
        IMPORT_JOB_STATUS_UID BIGINT NOT NULL,
        ROW_NUMBER INT NOT NULL,
        ROW_DATA TEXT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT IBR_IMPORTJOBSTATUS_FK FOREIGN KEY (IMPORT_JOB_STATUS_UID) REFERENCES TIMPORTJOBSTATUS (UIDPK)
    );
CREATE INDEX I_IBR_IMPORTJOBSTATUS_FK ON TIMPORTBADROW (IMPORT_JOB_STATUS_UID);

CREATE TABLE TIMPORTFAULT (
        UIDPK BIGINT NOT NULL,
        IMPORT_BAD_ROW_UID BIGINT NOT NULL,
        LEVEL_NUMBER INT,
        CODE VARCHAR(255),
        SOURCE_MESSAGE TEXT,
        ARGS VARCHAR(255),
    PRIMARY KEY(UIDPK),
    CONSTRAINT IF_IMPORTBADROW_FK FOREIGN KEY (IMPORT_BAD_ROW_UID) REFERENCES TIMPORTBADROW (UIDPK)
    );
CREATE INDEX I_IF_IMPORTBADROW_FK ON TIMPORTFAULT (IMPORT_BAD_ROW_UID);

CREATE TABLE TCMUSERPRICELIST (
        USER_UID BIGINT NOT NULL,
        PRICELIST_GUID VARCHAR(64) NOT NULL,
    PRIMARY KEY(USER_UID,PRICELIST_GUID),
    CONSTRAINT TCMUSERPRICELIST_FK_1 FOREIGN KEY (PRICELIST_GUID) REFERENCES TPRICELIST (GUID)
    ,
    CONSTRAINT TCMUSERPRICELIST_FK_2 FOREIGN KEY (USER_UID) REFERENCES TCMUSER (UIDPK)
    );
CREATE INDEX I_CMUSERPL_GUID ON TCMUSERPRICELIST (PRICELIST_GUID);
CREATE INDEX I_CMUSERPL_USER_UID ON TCMUSERPRICELIST (USER_UID);

CREATE TABLE TCOUPONCONFIG (
        UIDPK BIGINT NOT NULL,
        RULECODE VARCHAR(64) NOT NULL,
        USAGE_LIMIT INT NOT NULL,
        USAGE_TYPE VARCHAR(255) NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        LIMITED_DURATION BOOLEAN default false NOT NULL,
        DURATION_DAYS INT,
        MULTI_USE_PER_ORDER BOOLEAN default false NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCOUPONCONFIG_FK_1 FOREIGN KEY (RULECODE) REFERENCES TRULE (RULECODE)
    ,
    CONSTRAINT TCOUPONCONFIG_GUID_UNQ UNIQUE (GUID),
    CONSTRAINT TCOUPONCONFIG_RULECODE_UNQ UNIQUE (RULECODE));

CREATE TABLE TCOUPON (
        UIDPK BIGINT NOT NULL,
        COUPONCODE VARCHAR(255) NOT NULL,
        COUPON_CONFIG_UID BIGINT NOT NULL,
        SUSPENDED BOOLEAN default false NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCOUPON_FK_1 FOREIGN KEY (COUPON_CONFIG_UID) REFERENCES TCOUPONCONFIG (UIDPK)
    ,
    CONSTRAINT TCOUPON_RULE_COUPON_UNQ UNIQUE (COUPONCODE));

CREATE TABLE TCOUPONUSAGE (
        UIDPK BIGINT NOT NULL,
        COUPON_UID BIGINT NOT NULL,
        USECOUNT INT NOT NULL,
        ACTIVE_IN_CART BOOLEAN default false NOT NULL,
        CUSTOMER_EMAIL_ADDRESS VARCHAR(255) NOT NULL,
        LIMITED_DURATION_END_DATE TIMESTAMP WITH TIME ZONE,
        SUSPENDED BOOLEAN default false NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCOUPONUSAGE_FK_1 FOREIGN KEY (COUPON_UID) REFERENCES TCOUPON (UIDPK)
    ,
    CONSTRAINT TCOUPON_EMAIL_COUPON_UNQ UNIQUE (COUPON_UID, CUSTOMER_EMAIL_ADDRESS));

CREATE TABLE TWISHLIST (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(100) NOT NULL,
        STORECODE VARCHAR(64),
        SHOPPER_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_WISHLIST_SHOPPER FOREIGN KEY (SHOPPER_UID) REFERENCES TSHOPPER (UIDPK)
    ,
    CONSTRAINT FK_STORE FOREIGN KEY (STORECODE) REFERENCES TSTORE (STORECODE)
    ,
    CONSTRAINT TWISHLIST_UNIQUE UNIQUE (GUID));
CREATE INDEX I_TWISHLIST_SHOPPER_UID ON TWISHLIST (SHOPPER_UID);

CREATE TABLE TWISHLISTITEMS (
        WISHLIST_UID BIGINT NOT NULL,
        ITEM_UID BIGINT NOT NULL,
    PRIMARY KEY(WISHLIST_UID,ITEM_UID),
    CONSTRAINT TWISHLISTITEMS_FK_1 FOREIGN KEY (WISHLIST_UID) REFERENCES TWISHLIST (UIDPK)
    ,
    CONSTRAINT TWISHLISTITEMS_FK_2 FOREIGN KEY (ITEM_UID) REFERENCES TCARTITEM (UIDPK)
    );

CREATE TABLE TSHOPPINGCARTITEMS (
        SHOPPING_CART_UID BIGINT NOT NULL,
        ITEM_UID BIGINT NOT NULL);
CREATE INDEX I_TSCI_CART_UID ON TSHOPPINGCARTITEMS (SHOPPING_CART_UID);

CREATE TABLE TCAMPAIGN (
        UIDPK BIGINT NOT NULL,
        THIRD_PARTY_ID VARCHAR(255) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        START_DATE TIMESTAMP WITH TIME ZONE,
        END_DATE TIMESTAMP WITH TIME ZONE,
        STATE INT default 0 NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT TCAMPAIGN_NAME_UNQ UNIQUE (NAME),
    CONSTRAINT TCAMPAIGN_THIRD_PARTY_ID_UNQ UNIQUE (THIRD_PARTY_ID));

CREATE TABLE TEXPERIENCE (
        UIDPK BIGINT NOT NULL,
        THIRD_PARTY_ID VARCHAR(255) NOT NULL,
        NAME VARCHAR(255) NOT NULL,
        GUID VARCHAR(100) NOT NULL,
        CAMPAIGN_UID BIGINT NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_CAMPAIGN_TEXPERIENCE_UID FOREIGN KEY (CAMPAIGN_UID) REFERENCES TCAMPAIGN (UIDPK)
    ,
    CONSTRAINT TEXPERIENCE_GUID_UNIQ UNIQUE (GUID));

CREATE TABLE TMARKETTESTINGOFFER (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(100) NOT NULL,
        NAME VARCHAR(255),
        STORE_UID BIGINT,
        OFFER_VALUE_ENTITY_UID BIGINT,
        OFFER_TYPE VARCHAR(255),
        LAST_SYNC_DATE TIMESTAMP WITH TIME ZONE,
        OFFER_TYPE_NAME VARCHAR(255),
        CAMPAIGN_STATE INT default 1 NOT NULL,
        EXTERNAL_ID BIGINT,
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_OFFER_STORE_UID FOREIGN KEY (STORE_UID) REFERENCES TSTORE (UIDPK)
    ,
    CONSTRAINT TMARKETOFFER_GUID_UNQ UNIQUE (GUID),
    CONSTRAINT TMARKETTESTINGOFFER_NAME_UNQ UNIQUE (NAME));

CREATE TABLE TEXPERIENCEOFFERLOCATION (
        UIDPK BIGINT NOT NULL,
        EXPERIENCE_UID BIGINT NOT NULL,
        OFFER_UID BIGINT NOT NULL,
        OFFER_LOCATION VARCHAR(255) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT FK_TEOL_EXPERIENCE_UID FOREIGN KEY (EXPERIENCE_UID) REFERENCES TEXPERIENCE (UIDPK)
    ,
    CONSTRAINT FK_TEOL_OFFER_UID FOREIGN KEY (OFFER_UID) REFERENCES TMARKETTESTINGOFFER (UIDPK)
    ,
    CONSTRAINT TEOL_ALL_COLUMNS_UNQ UNIQUE (EXPERIENCE_UID, OFFER_UID, OFFER_LOCATION));

CREATE TABLE TCARTORDER (
        UIDPK BIGINT NOT NULL,
        GUID VARCHAR(64) NOT NULL,
        BILLING_GUID VARCHAR(64),
        SHOPPINGCART_GUID VARCHAR(100) NOT NULL,
    PRIMARY KEY(UIDPK),
    CONSTRAINT UNQ_CARTORDER_GUID UNIQUE (GUID),
    CONSTRAINT UNQ_CARTORDER_SC_GUID UNIQUE (SHOPPINGCART_GUID));

CREATE TABLE TOAUTHACCESSTOKEN (
        UIDPK BIGINT NOT NULL,
        TOKEN_ID VARCHAR(255) NOT NULL,
        EXPIRY_DATE TIMESTAMP WITH TIME ZONE NOT NULL,
        TOKEN_TYPE VARCHAR(255) NOT NULL,
        USERNAME VARCHAR(255) NOT NULL,
        CREDENTIALS VARCHAR(255) NOT NULL,
        STORECODE VARCHAR(255) NOT NULL,
        CLIENT_ID VARCHAR(255) NOT NULL,
        CLIENT_SECRET VARCHAR(255),
    PRIMARY KEY(UIDPK),
    CONSTRAINT UNQ_TOAT_TOKEN_TOKEN_ID UNIQUE (TOKEN_ID));
CREATE INDEX I_TOAT_EXPIRY_DATE ON TOAUTHACCESSTOKEN (EXPIRY_DATE);

