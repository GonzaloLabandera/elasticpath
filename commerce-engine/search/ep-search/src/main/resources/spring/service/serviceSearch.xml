<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:settings="http://www.elasticpath.com/schema/settings"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
            http://www.elasticpath.com/schema/settings http://www.elasticpath.com/schema/settings/settings.xsd
	">

	<!-- pulled from openjpa-osgi-wrapper.jar -
	   MUST BE imported before ep-core/spring/service/service.xml in search-webapp and before first DB call is made,
	   otherwise external ehcache.xml will never be properly loaded.
	   OpenJpa framework tries to pull a query from cache and if cache is not initialized,  it will create one.-->
	<import resource="classpath:spring/openjpa-osgi-wrapper/ehcache-jmx.xml" />
	<!-- pulled from ep-core.jar -->
	<import resource="classpath:spring/service/service.xml" />
	<!-- pulled from search.jar -->
	<import resource="indexing-pipeline.xml" />

	<bean id="environmentInfoService" class="com.elasticpath.service.environment.impl.WebAppEnvironmentInfoService" />

	<bean id="applicationName" class="java.lang.String">
		<constructor-arg value="Search"/>
	</bean>

	<bean id="servicePreInterceptors" class="java.util.ArrayList" />

	<bean id="catalogPromoMonitor" class="com.elasticpath.search.CatalogPromotionMonitor">
		<property name="propertiesDao" ref="propertiesDao" />
		<property name="ruleService" ref="ruleService" />
		<property name="indexNotificationService" ref="indexNotificationService" />
		<property name="catalogPromoQueryComposerHelper" ref="catalogPromoQueryComposerHelper" />
		<property name="maxClauseCount" value="1024" />
	</bean>

	<bean id="epRuleEngine"
		class="com.elasticpath.service.rules.impl.DBCompilingRuleEngineImpl">
		<property name="ruleSetService" ref="ruleSetService" />
		<property name="propertiesDao" ref="propertiesDao" />
		<property name="storeService" ref="storeService" />
		<property name="ruleService" ref="ruleService" />
		<property name="timeService" ref="timeService" />
		<property name="promotionRuleDelegate" ref="promotionRuleDelegate" />
		<property name="ruleEngineConfigProps">
			<props>
				<prop key="drools.dialect.java.compiler.lnglevel">1.5</prop>
			</props>
		</property>
		<property name="beanFactory" ref="coreBeanFactory" />
		<property name="statefulSessionConfiguration">
			<bean class="com.elasticpath.cache.SimpleTimeoutCache">
				<property name="cache" ref="ruleSessionConfigurationCache"/>
			</bean>
		</property>
	</bean>

	<bean id="searchHostLocatorTemplate" class="com.elasticpath.service.search.impl.SettingsSearchHostLocatorImpl"
		  abstract="true">
		<!-- Set to true to use master COMMERCE/SYSTEM/SEARCH/searchHost setting in a clustered deployment -->
		<property name="requiresMaster" value="${ep.search.requires.master:false}"/>
		<property name="defaultSearchHostLocationProvider">
			<settings:setting path="COMMERCE/SYSTEM/SEARCH/searchHost" context="default" systemPropertyOverrideKey="ep.search.default.url"/>
		</property>
		<property name="masterSearchHostLocationProvider">
			<settings:setting path="COMMERCE/SYSTEM/SEARCH/searchHost" context="master" systemPropertyOverrideKey="ep.search.master.url"/>
		</property>
	</bean>

	<bean id="searchHostLocator" parent="searchHostLocatorTemplate"/>

	<bean id="searchConfigFactory"
		class="com.elasticpath.service.search.impl.DefaultSearchConfigFactoryImpl">
		<property name="beanFactory" ref="coreBeanFactory" />
		<property name="searchHostLocator" ref="searchHostLocator" />
	</bean>

	<!-- IndexBuilders -->
	<bean id="abstractIndexBuilder" abstract="true" class="com.elasticpath.search.index.solr.builders.impl.AbstractIndexBuilder">
		<property name="indexNotificationProcessor" ref="indexNotificationProcessor" />
	</bean>

	<bean id="productIndexBuilder" parent="abstractIndexBuilder"
		class="com.elasticpath.search.index.solr.builders.impl.ProductIndexBuilder">
		<property name="solrManager" ref="solrManager" />
		<property name="productService" ref="productService" />
		<property name="categoryService" ref="categoryService" />
		<property name="ruleEngine" ref="epRuleEngine" />
		<property name="promotedPriceLookupService" ref="promotedPriceLookupService" />
		<property name="spellCheckingIndexRebuildInterval" value="1800" />
		<property name="priceListAssignmentService" ref="priceListAssignmentService" />
		<property name="productIndexingPipeline" ref="productIndexingPipeline" />
	</bean>

	<bean id="categoryIndexBuilder" parent="abstractIndexBuilder"
		class="com.elasticpath.search.index.solr.builders.impl.CategoryIndexBuilder">
		<property name="categoryService" ref="categoryService" />
		<property name="categoryIndexingPipeline" ref="categoryIndexingPipeline" />
	</bean>

	<bean id="customerIndexBuilder" parent="abstractIndexBuilder"
		class="com.elasticpath.search.index.solr.builders.impl.CustomerIndexBuilder">
		<property name="customerService" ref="customerService" />
		<property name="customerIndexingPipeline" ref="customerIndexingPipeline" />
	</bean>

	<bean id="promotionIndexBuilder" parent="abstractIndexBuilder"
		class="com.elasticpath.search.index.solr.builders.impl.PromotionIndexBuilder">
		<property name="ruleService" ref="ruleService" />
		<property name="ruleIndexingPipeline" ref="ruleIndexingPipeline" />
	</bean>

	<bean id="cmUserIndexBuilder" parent="abstractIndexBuilder"
		class="com.elasticpath.search.index.solr.builders.impl.CmUserIndexBuilder">
		<property name="cmUserService" ref="cmUserService" />
		<property name="cmUserIndexingPipeline" ref="cmUserIndexingPipeline" />
	</bean>

	<bean id="skuIndexBuilder" parent="abstractIndexBuilder"
		class="com.elasticpath.search.index.solr.builders.impl.SkuIndexBuilder">
		<property name="skuService" ref="productSkuService" />
		<property name="skuIndexingPipeline" ref="skuIndexingPipeline" />
	</bean>

	<util:map id="indexBuilderMap" map-class="java.util.HashMap">
		<entry key="product">
			<ref bean="productIndexBuilder" />
		</entry>
		<entry key="category">
			<ref bean="categoryIndexBuilder" />
		</entry>
		<entry key="customer">
			<ref bean="customerIndexBuilder" />
		</entry>
		<entry key="promotion">
			<ref bean="promotionIndexBuilder" />
		</entry>
		<entry key="cmuser">
			<ref bean="cmUserIndexBuilder" />
		</entry>
		<entry key="sku">
			<ref bean="skuIndexBuilder" />
		</entry>
	</util:map>

	<util:set id="optimizedIndexesListExclusions" set-class="java.util.HashSet">
		<value>productassociation</value>
	</util:set>

	<bean id="indexBuildPolicyContext"
		class="com.elasticpath.search.index.solr.service.IndexBuildPolicyContext"
		scope="prototype" />

	<bean id="indexBuildPolicyContextFactory"
		class="org.springframework.beans.factory.config.ServiceLocatorFactoryBean">
		<property name="serviceLocatorInterface"
			value="com.elasticpath.search.index.solr.service.IndexBuildPolicyContextFactory" />
	</bean>

	<!-- There are two production capable SolrDocumentPublishers. The SimpleDocumentPublisher
		implements the in-thread publishing policy with configurable publish/commit
		frequency. -->

	<!-- <bean id="simpleSolrDocumentPublisher" -->
	<!-- class="com.elasticpath.search.index.solr.service.impl.SimpleSolrDocumentPublisher" -->
	<!-- scope="prototype"> -->
	<!-- <property name="indexBuildPolicy" ref="indexBuildPolicy" /> -->
	<!-- <property name="indexBuildPolicyContextFactory" ref="indexBuildPolicyContextFactory"
		/> -->
	<!-- <property name="solrManager" ref="solrManager" /> -->
	<!-- <property name="persistenceEngine" ref="persistenceEngine"/> -->
	<!-- </bean> -->

	<!-- The QueueingSolrDocumentPublisher does publishing in a separate thread. Initially
	it was designed to take care of the commit frequency itself, but periodic commits while
	rebuilding the search index causes things to disappear until they're readded. -->

	<bean id="solrDocumentPublisher"
		class="com.elasticpath.search.index.solr.service.impl.QueueingSolrDocumentPublisher"
		scope="prototype" init-method="initialize">
		<property name="documentPublisherTask">
			<bean
				class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
				<property name="daemon" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="indexBuilderFactory"
		class="com.elasticpath.search.index.solr.builders.impl.IndexBuilderFactoryImpl">
		<property name="indexBuilderMap" ref="indexBuilderMap" />
	</bean>

	<bean id="indexBuildService"
		class="com.elasticpath.search.index.solr.service.impl.IndexBuildServiceImpl">
		<property name="elasticPath" ref="elasticPath" />
		<property name="persistenceEngine" ref="persistenceEngine" />
		<property name="timeService" ref="timeService" />
		<property name="solrManager" ref="solrManager" />
		<property name="indexSearchService" ref="indexSearchService" />
		<property name="indexBuilderFactory" ref="indexBuilderFactory" />
		<property name="indexBuildPolicy" ref="indexBuildPolicy" />
		<property name="indexingStatistics" ref="indexingStats" />
		<property name="optimizedIndexesListExclusions" ref="optimizedIndexesListExclusions" />
		<property name="indexBuildPolicyContextFactory" ref="indexBuildPolicyContextFactory" />
		<property name="indexBuildStatusUpdater" ref="indexBuildStatusUpdater" />
		<property name="searchIndexExistencePredicate" ref="searchIndexExistencePredicate" />
	</bean>

	<bean id="indexBuildPolicy"
		class="com.elasticpath.search.index.solr.service.impl.IndexBuildPolicyImpl">
		<property name="timeService" ref="timeService" />
		<property name="maxOperationsBeforeCommit" value="2147483647" />
		<property name="maxDocsBeforeAdd" value="256" />
		<property name="settingOptimizationIntervalProvider">
			<settings:setting path="COMMERCE/SEARCH/indexOptimizationInterval"/>
		</property>
	</bean>

	<bean id="storeMessageSourceDelegate"
		class="com.elasticpath.commons.util.impl.StoreMessageSourceImpl" />

	<util:map id="indexTypeSystemPropertyKeyMap" key-type="com.elasticpath.service.search.IndexType" value-type="java.lang.String">
		<entry key="#{T(com.elasticpath.service.search.IndexType).CATEGORY}" value="#{T(com.elasticpath.service.search.solr.SolrIndexConstants).CATEGORY_INDEX_DIR_PROPERTY}"/>
		<entry key="#{T(com.elasticpath.service.search.IndexType).CMUSER}" value="#{T(com.elasticpath.service.search.solr.SolrIndexConstants).CMUSER_INDEX_DIR_PROPERTY}"/>
		<entry key="#{T(com.elasticpath.service.search.IndexType).CUSTOMER}" value="#{T(com.elasticpath.service.search.solr.SolrIndexConstants).CUSTOMER_INDEX_DIR_PROPERTY}"/>
		<entry key="#{T(com.elasticpath.service.search.IndexType).PRODUCT}" value="#{T(com.elasticpath.service.search.solr.SolrIndexConstants).PRODUCT_INDEX_DIR_PROPERTY}"/>
		<entry key="#{T(com.elasticpath.service.search.IndexType).PROMOTION}" value="#{T(com.elasticpath.service.search.solr.SolrIndexConstants).PROMOTION_INDEX_DIR_PROPERTY}"/>
		<entry key="#{T(com.elasticpath.service.search.IndexType).SKU}" value="#{T(com.elasticpath.service.search.solr.SolrIndexConstants).SKU_INDEX_DIR_PROPERTY}"/>
	</util:map>

	<bean id="solrHomeSystemPropertySetterTemplate" class="com.elasticpath.search.SolrConfigSystemPropertySetter" abstract="true"
		  init-method="setSolrConfigProperties">
		<property name="indexTypeSystemPropertyKeyMap" ref="indexTypeSystemPropertyKeyMap"/>
		<property name="configurationRootPath">
			<bean factory-bean="environmentInfoService" factory-method="getConfigurationRootPath"/>
		</property>
		<property name="indexDataSubdirectories">
			<util:map key-type="com.elasticpath.service.search.IndexType" value-type="java.lang.String">
				<entry key="#{T(com.elasticpath.service.search.IndexType).CATEGORY}" value="data/index-category"/>
				<entry key="#{T(com.elasticpath.service.search.IndexType).CMUSER}" value="data/index-cmuser"/>
				<entry key="#{T(com.elasticpath.service.search.IndexType).CUSTOMER}" value="data/index-customer"/>
				<entry key="#{T(com.elasticpath.service.search.IndexType).PRODUCT}" value="data/index-product"/>
				<entry key="#{T(com.elasticpath.service.search.IndexType).PROMOTION}" value="data/index-promotion"/>
				<entry key="#{T(com.elasticpath.service.search.IndexType).SKU}" value="data/index-sku"/>
			</util:map>
		</property>
	</bean>

	<bean id="solrHomeSystemPropertySetter" parent="solrHomeSystemPropertySetterTemplate"/>

	<bean id="searchIndexLocatorTemplate" class="com.elasticpath.search.index.solr.service.impl.SearchIndexLocatorImpl"
		abstract="true">
		<property name="indexTypeSystemPropertyKeyMap" ref="indexTypeSystemPropertyKeyMap"/>
	</bean>

	<bean id="searchIndexLocator" parent="searchIndexLocatorTemplate"/>

	<bean id="searchIndexExistencePredicateTemplate"
		  class="com.elasticpath.search.index.solr.service.impl.SearchIndexExistencePredicate"
		  abstract="true"
		  depends-on="solrHomeSystemPropertySetter">
		<property name="searchIndexLocator" ref="searchIndexLocator"/>
	</bean>

	<bean id="searchIndexExistencePredicate" parent="searchIndexExistencePredicateTemplate"/>

</beans>
